# ::id 1
# ::snt Chapter 7 .
(x1 / chapter
	:quant 7)

# ::id 2
# ::snt On the fifth day -- again , as always , it was thanks to the sheep -- the secret of the little prince 's life was revealed to me .
(x27 / reveal-01
	:time (x4 / day)
	:null_edge (x13 / thank-01
		:mod (x6 / again)
		:time (x9 / always)
		:ARG2 (x16 / sheep))
	:ARG1 (x19 / secret
		:poss (x25 / life
			:poss (x23 / prince
				:mod (x22 / little)))))

# ::id 3
# ::snt Abruptly , without anything to lead up to it , and as if the question had been born of long and silent meditation on his problem , he demanded : " A sheep -- if it eats little bushes , does it eat flowers , too ? "
(x29 / demand-01
	:manner (x1 / abrupt)
	:ARG1 (x11 / and
		:op1 (x6 / lead-02
			:time (x18 / bear-02
				:ARG1 (x15 / question-01)
				:ARG1 (x21 / and
					:ARG1-of (x20 / long-03)
					:op2 (x22 / silent)
					:op2 (x23 / meditation
						:ARG1 (x26 / problem))))))
	:ARG0 (x28 / he)
	:ARG1 (x33 / sheep)
	:null_edge (x43 / eat-01
		:condition (x37 / eat-01
			:ARG1 (x39 / person
				:name (n / name
					:op1 "bushes")
				:mod (x38 / little)))
		:ARG1 (x44 / flower)
		:mod (x46 / too)))

# ::id 4
# ::snt " A sheep , "
(x3 / sheep)

# ::id 5
# ::snt I answered , " eats anything it finds in its reach . "
(x2 / answer-01
	:ARG0 (x1 / i)
	:ARG1 (x5 / eat-01
		:ARG1 (x6 / anything
			:ARG1-of (x8 / find-01)
			:ARG0-of (x11 / reach-01))))

# ::id 6
# ::snt " Even flowers that have thorns ? "
(x3 / flower
	:mod (x2 / even)
	:ARG0-of (x5 / have-03
		:ARG1 (x6 / thorn)))

# ::id 7
# ::snt " Yes , even flowers that have thorns . "
(x5 / flower
	:mod (x4 / even)
	:ARG0-of (x7 / have-03
		:ARG1 (x8 / thorn)))

# ::id 8
# ::snt " Then the thorns -- what use are they ? "
(x7 / use-01
	:ARG1 (x4 / thorn
		:time (x2 / then)
		:domain (x9 / they)))

# ::id 9
# ::snt I did not know .
(x4 / know-01
	:ARG0 (x1 / i))

# ::id 10
# ::snt At that moment I was very busy trying to unscrew a bolt that had got stuck in my engine .
(x7 / busy
	:time (x3 / moment
		:mod (x2 / that))
	:domain (x4 / i)
	:degree (x6 / very)
	:ARG1 (x8 / try-01
		:ARG0 x4
		:ARG1 (x10 / unscrew
			:ARG1 (x12 / bolt
				:ARG1-of (x16 / stick-01
					:ARG2 (x19 / engine))))))

# ::id 11
# ::snt I was very much worried , for it was becoming clear to me that the breakdown of my plane was extremely serious .
(x5 / worry-01
	:ARG0 (x1 / i)
	:degree (x4 / much
		:degree (x3 / very))
	:ARG0 (x10 / become-01
		:ARG2 (x11 / clear-06)
		:ARG2 (x22 / serious
			:ARG1 (x16 / break-down-12
				:ARG1 (x19 / plane))
			:degree (x21 / extreme))))

# ::id 12
# ::snt And I had so little drinking - water left that I had to fear for the worst .
(x1 / and
	:op2 (x3 / have-03
		:ARG0 (x2 / i)
		:ARG1 (x6 / drink-01
			:quant (x5 / little
				:degree (x4 / so))
			:ARG1-of (x12 / have-03
				:ARG1 (x8 / water
					:ARG1-of (x9 / leave-17
						:purpose (x14 / fear-01
							:ARG0 (x11 / i)
							:ARG2 (x17 / bad-05))))))))

# ::id 13
# ::snt " The thorns - - what use are they ? "
(x7 / use-01
	:ARG1 (x3 / thorn
		:domain (x9 / they)))

# ::id 14
# ::snt The little prince never let go of a question , once he had asked it .
(x5 / let-01
	:ARG0 (x3 / prince
		:mod (x2 / little))
	:ARG1 (x6 / go-02
		:ARG1 (x9 / question-01)
		:condition (x14 / ask-01
			:ARG0 (x12 / he))))

# ::id 15
# ::snt As for me , I was upset over that bolt .
(x7 / upset-01
	:ARG1 (x5 / i)
	:ARG2 (x10 / bolt
		:mod (x9 / that)))

# ::id 16
# ::snt And I answered with the first thing that came into my head : " The thorns are of no use at all .
(x1 / and
	:op2 (x3 / answer-01
		:ARG0 (x2 / i)
		:ARG2 (x7 / thing
			:ARG1-of (x9 / come-out-09
				:ARG2 (x12 / head)))
		:ARG1 (x16 / thorn
			:ARG1 (x20 / use-01
				:polarity -))))

# ::id 17
# ::snt Flowers have thorns just for spite ! "
(x2 / have-03
	:null_edge (x1 / flower)
	:ARG1 (x3 / thorn
		:ARG1-of (xap0 / cause-01
			:ARG0 (x6 / spite
				:mod (x4 / just)))))

# ::id 18
# ::snt " Oh ! "
(x2 / oh)

# ::id 19
# ::snt There was a moment of complete silence .
(x4 / moment
	:topic (x7 / silence-01
		:ARG1-of (x6 / complete-02)))

# ::id 20
# ::snt Then the little prince flashed back at me , with a kind of resentfulness : " I do n't believe you !
(x5 / flash-back-03
	:time (x1 / then)
	:ARG0 (x4 / prince
		:mod (x3 / little))
	:direction (x6 / back)
	:null_edge (x14 / resentfulness
		:mod (x12 / kind))
	:ARG1 (x20 / believe-01
		:ARG0 (x17 / i)
		:ARG1 (x21 / you)))

# ::id 21
# ::snt Flowers are weak creatures .
(x4 / creature
	:domain (x1 / flower)
	:mod (x3 / weak))

# ::id 22
# ::snt They are naïve .
(x3 / naïve
	:domain (x1 / they))

# ::id 23
# ::snt They reassure themselves as best they can .
(x2 / reassure-01
	:ARG0 (x1 / they)
	:purpose (x7 / possible-01
		:mod (x5 / good
			:degree (m / most))))

# ::id 24
# ::snt They believe that their thorns are terrible weapons ... "
(x2 / believe-01
	:ARG0 (x1 / they)
	:ARG1 (x8 / weapon
		:domain (x5 / thorn)
		:mod (x7 / terrible)))

# ::id 25
# ::snt I did not answer .
(x4 / answer-01
	:ARG0 (x1 / i))

# ::id 26
# ::snt At that instant I was saying to myself : " If this bolt still will n't turn , I am going to knock it out with the hammer . "
(x6 / say-01
	:ARG1 (x3 / instant
		:mod (x2 / that))
	:ARG0 (x4 / i)
	:time (x17 / turn-02
		:ARG1 (x13 / bolt
			:mod (x12 / this))
		:mod (x14 / still)
		:ARG1 (x19 / i)
		:ARG1 (x23 / knock-out-03
			:ARG0 x19
			:ARG1 (x28 / hammer))))

# ::id 27
# ::snt Again the little prince disturbed my thoughts .
(x5 / disturb-01
	:mod (x1 / again)
	:ARG0 (x4 / prince
		:mod (x3 / little)))

# ::id 28
# ::snt " And you actually believe that the flowers - - "
(x2 / and
	:op2 (x5 / believe-01
		:ARG0 (x3 / you)
		:mod (x4 / actual)
		:ARG1 (x8 / flower)))

# ::id 29
# ::snt " Oh , no ! "
(x2 / oh
	:null_edge -)

# ::id 30
# ::snt I cried .
(x2 / cry-02
	:ARG0 (x1 / i))

# ::id 31
# ::snt " No , no no !
(x / xconcept
	:x -)

# ::id 32
# ::snt I do n't believe anything .
(x4 / believe-01
	:ARG0 (x1 / i)
	:ARG1 (x5 / anything))

# ::id 33
# ::snt I answered you with the first thing that came into my head .
(x2 / answer-01
	:ARG0 (x1 / i)
	:ARG1 (x3 / you)
	:ARG1 (x7 / thing
		:ARG1-of (x9 / come-out-09
			:ARG2 (x12 / head))))

# ::id 34
# ::snt Do n't you see - - I am very busy with matters of consequence ! "
(x4 / see-01
	:ARG0 (x3 / you)
	:ARG1 (x10 / busy
		:domain (x7 / i)
		:degree (x9 / very)
		:prep-with (x12 / matter
			:ARG1 (x14 / consequence))))

# ::id 35
# ::snt He stared at me , thunderstruck .
(x2 / stare-01
	:ARG0 (x1 / he)
	:null_edge (x6 / thunderstruck))

# ::id 36
# ::snt " Matters of consequence ! "
(x2 / matter
	:ARG1 (x4 / consequence))

# ::id 37
# ::snt He looked at me there , with my hammer in my hand , my fingers black with engine - grease , bending down over an object which seemed to him extremely ugly ...
(x2 / look-01
	:ARG0 (x1 / he)
	:location (x5 / there)
	:ARG1 (x9 / hammer)
	:ARG1 (x16 / black-05
		:prep-with (x20 / grease
			:ARG1 (x18 / engine
				:ARG1 (x15 / finger))))
	:ARG1 (x22 / bend
		:ARG2 (x26 / object
			:ARG1-of (x28 / seem-01
				:mod (x32 / ugly
					:degree (x31 / extreme))))))

# ::id 38
# ::snt " You talk just like the grown - ups ! "
(x3 / talk-01
	:ARG0 (x2 / you)
	:ARG1-of (xap0 / resemble-01
		:mod (x4 / just)
		:ARG2 (x9 / up
			:ARG1-of (x7 / grow-up-04))))

# ::id 39
# ::snt That made me a little ashamed .
(x2 / make-02
	:ARG0 (x1 / that)
	:ARG1 (x6 / ashamed
		:degree (x5 / little)))

# ::id 40
# ::snt But he went on , relentlessly : " You mix everything up together ...
(x1 / contrast-01
	:ARG2 (x3 / go-02
		:ARG0 (x2 / he)
		:manner (x6 / relentless)
		:null_edge (x10 / mix-01
			:ARG1 (x9 / you)
			:ARG1 (x11 / everything)
			:mod (x13 / together))))

# ::id 41
# ::snt You confuse everything ... "
(x2 / confuse-01
	:ARG0 (x1 / you)
	:ARG1 (x3 / everything))

# ::id 42
# ::snt He was really very angry .
(x5 / angry
	:null_edge (x1 / he)
	:null_edge (x3 / really)
	:degree (x4 / very))

# ::id 43
# ::snt He tossed his golden curls in the breeze .
(x2 / toss-01
	:ARG0 (x1 / he)
	:ARG1 (x5 / curl-up-02
		:mod (x4 / gold))
	:ARG2 (x8 / breeze))

# ::id 44
# ::snt " I know a planet where there is a certain red - faced gentleman .
(x3 / know-01
	:ARG0 (x2 / i)
	:ARG1 (x5 / planet
		:mod (x11 / red-02
			:mod (x10 / certain))
		:null_edge (x14 / gentleman
			:ARG1-of (x13 / face))))

# ::id 45
# ::snt He has never smelled a flower .
(x4 / smell-01
	:ARG0 (x1 / he)
	:ARG1 (x6 / flower))

# ::id 46
# ::snt He has never looked at a star .
(x4 / look-01
	:ARG0 (x1 / he)
	:ARG1 (x7 / star))

# ::id 47
# ::snt He has never loved any one .
(x4 / love-01
	:ARG0 (x1 / he)
	:ARG1 (x6 / one
		:mod (x5 / any)))

# ::id 48
# ::snt He has never done anything in his life but add up figures .
(x9 / contrast-01
	:ARG1 (x4 / do-02
		:ARG0 (x1 / he)
		:ARG1 (x5 / anything)
		:ARG2 (x8 / life))
	:ARG2 (x10 / add-01
		:ARG0 x1
		:ARG1 (x12 / figure)))

# ::id 49
# ::snt And all day he says over and over , just like you : ' I am busy with matters of consequence ! ' And that makes him swell up with pride .
(x1 / and
	:op2 (x19 / matter
		:time (x3 / day
			:time-of (x5 / say-01
				:ARG1 (x7 / and
					:mod (x2 / all)
					:op1 (x6 / over)
					:op2 (x8 / over)))
			:mod (x10 / just)
			:time-of (x12 / you)
			:null_edge (x24 / and
				:op2 (x26 / make-02
					:null_edge x19
					:ARG1 (x28 / swell-01
						:ARG2 (x31 / pride-01)))))
		:ARG1 (x15 / i)
		:ARG1 (x21 / consequence)))

# ::id 50
# ::snt But he is not a man - - he is a mushroom ! "
(x1 / contrast-01
	:ARG2 (x6 / man
		:domain (x2 / he)
		:mod (x12 / mushroom-01)))

# ::id 51
# ::snt " A what ? "
(x / xconcept)

# ::id 52
# ::snt " A mushroom ! "
(x3 / mushroom-01)

# ::id 53
# ::snt The little prince was now white with rage .
(x6 / white
	:domain (x3 / prince
		:mod (x2 / little))
	:time (x5 / now)
	:domain (xap0 / fill-01
		:ARG2 (x8 / rage-02)))

# ::id 54
# ::snt " The flowers have been growing thorns for millions of years .
(x6 / grow-01
	:ARG1 (x3 / flower)
	:ARG1 (x7 / thorn)
	:duration (x11 / temporal-quantity
		:unit (y / year)))

# ::id 55
# ::snt For millions of years the sheep have been eating them just the same .
(x9 / eat-01
	:duration (x4 / temporal-quantity
		:unit (y / year))
	:ARG0 (x6 / sheep)
	:ARG1 (x13 / same-01
		:mod (x11 / just)))

# ::id 56
# ::snt And is it not a matter of consequence to try to understand why the flowers go to so much trouble to grow thorns which are never of any use to them ?
(x1 / and
	:op2 (x6 / matter
		:ARG1 (x8 / consequence)
		:domain (x10 / try-01
			:ARG1 (x12 / understand-01
				:ARG1 (x16 / go-02
					:ARG1 (x15 / flower)
					:ARG2 (x20 / trouble
						:quant (x19 / much
							:degree (x18 / so)))
					:purpose (x22 / grow-03
						:ARG0 x15
						:ARG1 (x23 / thorn)
						:ARG1 (x29 / use-01
							:mod (x28 / any))))))))

# ::id 57
# ::snt Is the warfare between the sheep and the flowers not important ?
(x11 / important
	:domain (x3 / warfare
		:null_edge (x7 / and
			:op1 (x6 / sheep)
			:op2 (x9 / flower))))

# ::id 58
# ::snt Is this not of more consequence than a fat red - faced gentleman 's sums ?
(x6 / consequence
	:mod (x2 / this)
	:degree (x5 / more)
	:mod (x15 / sum
		:ARG1-of (x10 / red-02
			:mod (x9 / fat))
		:poss (x13 / gentleman
			:ARG1-of (x12 / face))))

# ::id 59
# ::snt And if I know - - I , myself - - one flower which is unique in the world , which grows nowhere but on my planet , but which one little sheep can destroy in a single bite some morning , without even noticing what he is doing - - Oh !
(x / xconcept
	:x (x1 / and)
	:x (x29 / contrast-01
		:ARG2 (x22 / grow-01
			:ARG1 (x24 / contrast-01
				:ARG1 (x13 / flower
					:null_edge (x4 / know-01
						:ARG0 (x3 / i))
					:null_edge (x7 / i)
					:quant 1
					:mod (x52 / oh))
				:ARG2 (x27 / planet)))
		:ARG1 (x34 / possible-01
			:location (x19 / world)
			:ARG1 (x35 / destroy-01
				:ARG0 (x33 / sheep
					:quant 1
					:mod (x32 / little))
				:instrument (x39 / bite
					:ARG1-of (x38 / single-02))
				:time (x41 / morning
					:mod (x40 / some))
				:prep-without (x45 / notice-01
					:mod (x44 / even)
					:ARG1 (x49 / do-02
						:ARG0 (x47 / he)))))))

# ::id 60
# ::snt You think that is not important ! "
(x2 / think-01
	:ARG0 (x1 / you)
	:ARG1 (x6 / important))

# ::id 61
# ::snt His face turned from white to red as he continued : " If some one loves a flower , of which just one single blossom grows in all the millions and millions of stars , it is enough to make him happy just to look at the stars .
(x3 / turn-down-05
	:ARG0 (x2 / face)
	:direction (x7 / red-02
		:mod (x5 / white))
	:condition (x10 / continue-01)
	:ARG1 (x38 / enough
		:condition (x16 / love-01
			:ARG0 (x14 / some)
			:ARG1 (x18 / flower
				:ARG1-of (x26 / grow-01
					:mod (x22 / just)
					:ARG1 (x25 / blossom
						:quant 1
						:ARG1-of (x24 / single-02))
					:compared-to (x34 / star
						:quant (x28 / all)))))
		:purpose (x40 / make-02
			:ARG1 (x45 / look-02
				:mod (x43 / just)
				:ARG1 (x48 / star)))))

# ::id 62
# ::snt He can say to himself , ' Somewhere , my flower is there ... ' But if the sheep eats the flower , in one moment all his stars will be darkened ...
(x2 / possible-01
	:ARG1 (x3 / say-01
		:ARG0 (x1 / he)
		:ARG1 (x11 / flower
			:location (x8 / somewhere))
		:null_edge (x16 / contrast-01)
		:null_edge (x32 / darken
			:time (x20 / eat-01
				:ARG0 (x19 / sheep)
				:ARG1 (x22 / flower))
			:time (x26 / moment
				:quant 1)
			:ARG1 (x29 / star
				:quant (x27 / all)))))

# ::id 63
# ::snt And you think that is not important ! "
(x1 / and
	:op2 (x3 / think-01
		:ARG0 (x2 / you)
		:ARG1 (x7 / important)))

# ::id 64
# ::snt He could not say anything more .
(x2 / possible-01
	:ARG1 (x4 / say-01
		:ARG0 (x1 / he)
		:ARG1 (x6 / more
			:compared-to (x5 / anything))))

# ::id 65
# ::snt His words were choked by sobbing .
(x4 / choke
	:ARG1 (x2 / word)
	:manner (x6 / sob))

# ::id 66
# ::snt The night had fallen .
(x4 / fall-01
	:time (x2 / night))

# ::id 67
# ::snt I had let my tools drop from my hands .
(x3 / let-01
	:ARG0 (x1 / i)
	:ARG1 (x6 / drop-out-04
		:ARG1 (x5 / tool)
		:ARG2 (x9 / hand)))

# ::id 68
# ::snt Of what moment now was my hammer , my bolt , or thirst , or death ?
(x12 / or
	:op2 (x7 / hammer
		:time (x3 / moment)
		:time (x4 / now)
		:ARG1 (x15 / or
			:op2 (x16 / die-01))
		:ARG1-of (xap0 / cause-01
			:ARG0 (x13 / thirst-01))))

# ::id 69
# ::snt On one star , one planet , my planet , the Earth , there was a little prince to be comforted .
(x3 / star
	:quant 1
	:location (x6 / planet
		:quant 1)
	:null_edge (x12 / planet
		:name (n / name
			:op1 "Earth"))
	:ARG1-of (x21 / comfort-01
		:ARG1 (x18 / prince
			:mod (x17 / little))))

# ::id 70
# ::snt I took him in my arms , and rocked him .
(x8 / and
	:op1 (x2 / take-01
		:ARG0 (x1 / i)
		:ARG3 (x6 / arm))
	:op2 (x9 / rock
		:ARG0 x1))

# ::id 71
# ::snt I said to him : " The flower that you love is not in danger .
(x2 / say-01
	:ARG0 (x1 / i)
	:ARG1 (x8 / flower
		:ARG1-of (x11 / love-01
			:ARG0 (x10 / you))))

# ::id 72
# ::snt I will draw you a muzzle for your sheep .
(x3 / draw-02
	:ARG0 (x1 / i)
	:ARG1 (x4 / you)
	:ARG1 (x6 / muzzle
		:ARG2 (x9 / sheep)))

# ::id 73
# ::snt I will draw you a railing to put around your flower .
(x3 / draw-02
	:ARG0 (x1 / i)
	:ARG1 (x4 / you)
	:ARG1 (x6 / railing
		:ARG1-of (x8 / put-01
			:ARG2 (x9 / around
				:op1 (x11 / flower)))))

# ::id 74
# ::snt I will - - "
(x1 / i)

# ::id 75
# ::snt I did not know what to say to him .
(x4 / know-01
	:ARG0 (x1 / i)
	:ARG1 (x7 / say-01))

# ::id 76
# ::snt I felt awkward and blundering .
(x2 / feel-01
	:ARG0 (x1 / i)
	:ARG1 (x4 / and
		:op1 (x3 / awkward)
		:op2 (x5 / blundering)))

# ::id 77
# ::snt I did not know how I could reach him , where I could overtake him and go on hand in hand with him once more .
(x4 / know-01
	:ARG0 (x1 / i)
	:ARG1 (x7 / possible-01
		:ARG1 (x8 / reach-01
			:ARG0 (x6 / i)))
	:ARG1 (x13 / possible-01
		:ARG1 (x14 / overtake-01
			:ARG1 (x17 / go-02
				:degree (x25 / more)))))

# ::id 78
# ::snt It is such a secret place , the land of tears .
(x6 / place
	:domain (x1 / it)
	:mod (x3 / such)
	:mod (x5 / secret)
	:location-of (x11 / tear-03))

# ::id 79
# ::snt Chapter 8 .
(x1 / chapter
	:li 8)

# ::id 80
# ::snt I soon learned to know this flower better .
(x3 / learn-01
	:ARG0 (x1 / i)
	:time (x2 / soon)
	:ARG1 (x5 / know-01
		:ARG0 x1
		:ARG1 (x7 / flower
			:mod (x6 / this))
		:manner (x8 / good)))

# ::id 81
# ::snt On the little prince 's planet the flowers had always been very simple .
(x13 / simple-02
	:ARG1 (x8 / flower
		:location (x6 / planet
			:null_edge (x4 / prince
				:mod (x3 / little))))
	:null_edge (x9 / have-org-role-91)
	:time (x10 / always)
	:degree (x12 / very))

# ::id 82
# ::snt They had only one ring of petals ; they took up no room at all ; they were a trouble to nobody .
(xap0 / multi-sentence
	:ARG1 (x1 / they)
	:ARG1 (x5 / ring
		:mod (x3 / only)
		:quant 1
		:consist-of (x7 / petal))
	:snt2 (x10 / take-01
		:ARG1 (x13 / room
			:polarity -))
	:ARG2 (x20 / trouble-01
		:ARG0 (x22 / nobody)))

# ::id 83
# ::snt One morning they would appear in the grass , and by night they would have faded peacefully away .
(x10 / and
	:op1 (x5 / appear-02
		:time (x2 / morning
			:quant 1)
		:ARG1 (x3 / they)
		:ARG1 (x8 / grass))
	:op2 (x16 / fade-01
		:ARG1 x3
		:time (x12 / night)
		:ARG0 (x13 / they)
		:null_edge (x18 / away
			:mod (x17 / peaceful))))

# ::id 84
# ::snt But one day , from a seed blown from no one knew where , a new flower had come up ; and the little prince had watched very closely over this small sprout which was not like any other small sprouts on his planet .
(x1 / contrast-01
	:ARG2 (x12 / know-01
		:time (x3 / day
			:quant 1)
		:ARG2 (x7 / seed
			:ARG1-of (x8 / blow-08
				:polarity -))
		:ARG1 (x22 / and
			:op1 (x19 / come-01
				:ARG1 (x17 / flower
					:mod (x16 / new)))
			:op2 (x27 / watch-01
				:ARG0 (x25 / prince
					:mod (x24 / little))
				:manner (x29 / close
					:degree (x28 / very))
				:ARG1 (x32 / small
					:mod (x31 / this)
					:compared-to (x41 / sprout
						:ARG1-of (x33 / sprout)
						:mod (x38 / any)
						:mod (x39 / other)
						:mod (x40 / small)
						:location (x44 / planet)))))))

# ::id 85
# ::snt It might , you see , have been a new kind of baobab .
(x7 / person
	:ARG0-of (h / have-org-role-91)
	:null_edge (x5 / see-01
		:ARG1 (x1 / it)
		:ARG0 (x4 / you))
	:ARG1 (x13 / baobab
		:mod (x11 / kind
			:mod (x10 / new))))

# ::id 86
# ::snt The shrub soon stopped growing , and began to get ready to produce a flower .
(x7 / and
	:op1 (x4 / stop-01
		:ARG0 (x2 / shrub)
		:time (x3 / soon)
		:ARG1 (x5 / grow-01))
	:op2 (x8 / begin-01
		:ARG1 (x11 / ready-02
			:ARG2 (x13 / produce-01
				:ARG1 (x15 / flower)))))

# ::id 87
# ::snt The little prince , who was present at the first appearance of a huge bud , felt at once that some sort of miraculous apparition must emerge from it .
(x17 / feel-01
	:ARG0 (x3 / prince
		:mod (x2 / little)
		:purpose (x11 / appear-01
			:ARG1 (x15 / bud
				:mod (x14 / huge))))
	:ARG1 (x27 / emerge-01
		:ARG0 (x25 / apparition
			:mod (x22 / sort
				:mod (x21 / some))
			:mod (x24 / miraculous))))

# ::id 88
# ::snt But the flower was not satisfied to complete the preparations for her beauty in the shelter of her green chamber .
(x1 / contrast-01
	:ARG2 (x6 / satisfy-01
		:ARG1 (x3 / flower)
		:ARG1 (x8 / complete-01
			:ARG0 x3
			:ARG1 (x10 / prepare-01
				:ARG1 (x13 / beauty))
			:purpose (x16 / thing
				:ARG2-of (s / shelter-01)
				:part-of (x20 / chamber
					:mod (x19 / person
						:name (n / name
							:op1 "green")))))))

# ::id 89
# ::snt She chose her colours with the greatest care .
(x2 / choose-01
	:ARG0 (x1 / she)
	:ARG1 (x4 / colour)
	:manner (x8 / care-03
		:mod (x7 / great
			:degree (m / most))))

# ::id 90
# ::snt She adjusted her petals one by one .
(x2 / adjust-01
	:ARG0 (x1 / she)
	:ARG1 (x4 / petal)
	:ARG1 (x5 / one)
	:ARG0 (x7 / one))

# ::id 91
# ::snt She did not wish to go out into the world all rumpled , like the field poppies .
(x4 / wish-01
	:ARG0 (x1 / she)
	:ARG1 (x6 / go-02
		:ARG0 x1
		:ARG1 (x10 / world)
		:ARG4 (x12 / rumpled
			:quant (x11 / all))
		:null_edge (x17 / poppy
			:mod (x16 / field))))

# ::id 92
# ::snt It was only in the full radiance of her beauty that she wished to appear .
(x13 / wish-01
	:ARG0 (x1 / it)
	:ARG1 (x7 / radiate-01
		:mod (x3 / only)
		:mod (x6 / full)
		:part-of (x10 / beauty))
	:ARG0 (x12 / she)
	:ARG1 (x15 / appear-02
		:ARG0 x12))

# ::id 93
# ::snt Oh , yes !
(x1 / oh)

# ::id 94
# ::snt She was a coquettish creature !
(x5 / creature
	:ARG0 (x1 / she)
	:mod (x4 / coquettish))

# ::id 95
# ::snt And her mysterious adornment lasted for days and days .
(x1 / and
	:op2 (x5 / last-01
		:ARG0 (x4 / adornment
			:mod (x3 / mystery))
		:ARG2 (x8 / and
			:op1 (x7 / temporal-quantity
				:unit (d / day))
			:op2 (x9 / temporal-quantity
				:unit (d1 / day)))))

# ::id 96
# ::snt Then one morning , exactly at sunrise , she suddenly showed herself .
(x11 / show-01
	:time (x3 / morning
		:null_edge 1)
	:ARG1 (x7 / sunrise
		:mod (x5 / exact))
	:manner (x10 / sudden))

# ::id 97
# ::snt And , after working with all this painstaking precision , she yawned and said : " Ah !
(x1 / and
	:op2 (x14 / say-01
		:ARG0 (x11 / she)
		:ARG1 (x13 / and
			:op1 (x12 / yawn
				:time (x3 / after
					:op1 (x4 / work-01
						:ARG1 (x9 / precision
							:quant (x6 / all)
							:mod (x7 / this)
							:mod (x8 / painstaking))))
				:ARG0 x11))
		:mod (x17 / Ah)))

# ::id 98
# ::snt I am scarcely awake .
(x4 / awake-03
	:domain (x1 / i)
	:degree (x3 / scarcely-more-than))

# ::id 99
# ::snt I beg that you will excuse me .
(x2 / beg-01
	:ARG0 (x1 / i)
	:ARG1 (x6 / excuse-02
		:ARG0 (x4 / you)))

# ::id 100
# ::snt My petals are still all disarranged ... "
(x6 / disarrange
	:ARG1 (x2 / petal
		:quant (x5 / all
			:mod (x4 / still))))

# ::id 101
# ::snt But the little prince could not restrain his admiration : " Oh !
(x1 / contrast-01
	:ARG2 (x5 / possible-01
		:ARG1 (x7 / restrain-01
			:ARG0 (x4 / prince
				:mod (x3 / little))
			:ARG1 (x9 / admiration
				:mod (x12 / oh)))))

# ::id 102
# ::snt How beautiful you are ! "
(x2 / beautiful-02
	:ARG1 (x3 / you))

# ::id 103
# ::snt " Am I not ? " the flower responded , sweetly .
(x9 / respond-01
	:ARG0 (x3 / i)
	:ARG0 (x8 / flower)
	:manner (x11 / thing
		:degree-of (s / sweet-03)))

# ::id 104
# ::snt " And I was born at the same moment as the sun ... "
(x5 / bear-02
	:null_edge (x2 / and)
	:ARG1 (x3 / i)
	:time (x9 / moment
		:ARG1-of (x8 / same-01)
		:location (x12 / sun)))

# ::id 105
# ::snt The little prince could guess easily enough that she was not any too modest - - but how moving - - and exciting - - she was !
(x4 / possible-01
	:ARG1 (x17 / contrast-01
		:ARG1 (x5 / guess-01
			:ARG0 (x3 / prince
				:mod (x2 / little))
			:ARG1 (x14 / modest
				:compared-to (x7 / enough)
				:ARG0 (x9 / she)
				:mod (x12 / any)
				:degree (x13 / too))
			:ARG1 (x19 / move-01)
			:condition (x22 / and
				:op1 (x23 / excite-01))
			:null_edge (x27 / be-02
				:null_edge (x26 / she)))))

# ::id 106
# ::snt " I think it is time for breakfast , " she added an instant later .
(x12 / add-01
	:ARG1 (x3 / think-01
		:ARG0 (x2 / i)
		:ARG2 (x8 / breakfast))
	:ARG0 (x11 / she)
	:time (x15 / late
		:op1 (x14 / instant)))

# ::id 107
# ::snt " If you would have the kindness to think of my needs - - "
(x5 / have-03
	:ARG0 (x3 / you)
	:ARG1 (x7 / kind-01
		:null_edge (x9 / think-01
			:ARG1 (x12 / need-01))))

# ::id 108
# ::snt And the little prince , completely abashed , went to look for a sprinkling - can of fresh water .
(x1 / and
	:op2 (x9 / go-02
		:ARG1 (x11 / look-02
			:ARG1 (x4 / prince
				:mod (x3 / little)
				:mod (x7 / abashed
					:ARG1-of (x6 / complete-02)))
			:ARG1 (x14 / sprinkling
				:ARG1-of (x16 / possible-01
					:mod (x19 / water
						:ARG1-of (x18 / fresh-04)))))))

# ::id 109
# ::snt So , he tended the flower .
(x4 / tend-02
	:ARG1 (x3 / he)
	:ARG1 (x6 / flower
		:poss x3))

# ::id 110
# ::snt So , too , she began very quickly to torment him with her vanity - - which was , if the truth be known , a little difficult to deal with .
(x6 / begin-01
	:mod (x1 / so)
	:mod (x3 / too)
	:ARG0 (x5 / she)
	:ARG1-of (x8 / quick-02
		:degree (x7 / very))
	:ARG1 (x10 / torment
		:ARG0 x5
		:ARG2 (x14 / vanity
			:example (x28 / difficult
				:ARG1-of (x24 / know-02
					:ARG1 (x22 / truth))
				:degree (x27 / little)
				:domain (x30 / deal-01)))))

# ::id 111
# ::snt One day , for instance , when she was speaking of her four thorns , she said to the little prince : " Let the tigers come with their claws ! "
(x17 / say-01
	:time (x2 / day
		:quant 1)
	:time (x10 / speak-01
		:ARG1 (x14 / thorn
			:quant 4)
		:ARG0 (x16 / she))
	:ARG0 x16
	:ARG1 (x21 / prince
		:mod (x20 / little))
	:ARG1 (x27 / come-01
		:ARG1 x21
		:ARG1 (x26 / tiger)
		:ARG1 (x30 / claw)))

# ::id 112
# ::snt " There are no tigers on my planet , " the little prince objected .
(x14 / object-01
	:ARG1 (x5 / tiger
		:polarity -
		:location (x8 / planet))
	:ARG0 (x13 / prince
		:mod (x12 / little)))

# ::id 113
# ::snt " And , anyway , tigers do not eat weeds . "
(x2 / and
	:op1 (x9 / eat-01
		:mod (x4 / anyway)
		:ARG0 (x6 / tiger)
		:ARG1 (x10 / weed)))

# ::id 114
# ::snt " I am not a weed , " the flower replied , sweetly .
(x11 / reply-01
	:ARG1 (x6 / weed
		:domain (x2 / i))
	:ARG1 (x10 / flower)
	:time (x13 / thing
		:degree-of (s / sweet-03)))

# ::id 115
# ::snt " Please excuse me ... "
(x3 / excuse-02
	:mod (x2 / please-01))

# ::id 116
# ::snt " I am not at all afraid of tigers , " she went on , " but I have a horror of drafts .
(x17 / contrast-01
	:ARG1 (x7 / fear-01
		:op (a / afraid)
		:ARG0 (x2 / i)
		:ARG1 (x9 / tiger)
		:ARG1 (x13 / go-02
			:ARG0 (x12 / she)))
	:ARG2 (x19 / have-03
		:ARG0 (x18 / i)
		:ARG1 (x21 / horror
			:ARG1-of (x23 / draft-01))))

# ::id 117
# ::snt I suppose you would n't have a screen for me ? "
(x2 / suppose-01
	:ARG0 (x1 / i)
	:ARG1 (x6 / have-03
		:ARG0 (x3 / you)
		:ARG1 (x8 / screen)))

# ::id 118
# ::snt " A horror of drafts - - that is bad luck , for a plant , " remarked the little prince , and added to himself , " This flower is a very complex creature ... "
(x23 / and
	:op1 (x18 / remark-01
		:ARG0 (x3 / horror
			:ARG1-of (x5 / draft-01
				:mod (x11 / luck
					:ARG1-of (x10 / bad-07)))
			:poss (x15 / plant))
		:ARG1 (x21 / prince
			:mod (x20 / little)))
	:op2 (x24 / add-01)
	:op2 (x35 / creature
		:domain (x30 / flower
			:mod (x29 / this))
		:mod (x34 / complex
			:degree (x33 / very))))

# ::id 119
# ::snt " At night I want you to put me under a glass globe .
(x5 / want-01
	:time (x3 / night)
	:ARG0 (x4 / i)
	:ARG1 (x8 / put-01
		:ARG0 x4
		:ARG0 (x6 / you)
		:ARG2 (x10 / under
			:op1 (x13 / globe
				:consist-of (x12 / glass)))))

# ::id 120
# ::snt It is very cold where you live .
(x4 / cold
	:domain (x1 / it)
	:degree (x3 / very)
	:condition (x7 / live-01
		:ARG0 (x6 / you)))

# ::id 121
# ::snt In the place I came from - - "
(xap0 / multi-sentence
	:ARG2 (x3 / place
		:ARG1-of (x5 / come-out-09
			:ARG1 (x4 / i))))

# ::id 122
# ::snt But she interrupted herself at that point .
(x1 / contrast-01
	:ARG2 (x3 / interrupt
		:ARG0 (x2 / she)
		:time (x7 / point)))

# ::id 123
# ::snt She had come in the form of a seed .
(x3 / come-01
	:ARG1 (x1 / she)
	:medium (x6 / form
		:mod (x9 / seed)))

# ::id 124
# ::snt She could not have known anything of any other worlds .
(x2 / possible-01
	:ARG1 (x5 / know-02
		:ARG0 (x1 / she)
		:ARG1 (x6 / anything
			:poss (x10 / world
				:mod (x8 / any)
				:mod (x9 / other)))))

# ::id 125
# ::snt Embarassed over having let herself be caught on the verge of such a naïve untruth , she coughed two or three times , in order to put the little prince in the wrong .
(xap0 / contrast-01
	:ARG1 (x7 / catch-01)
	:ARG2 (x10 / verge-01
		:ARG1 (x15 / untruth
			:mod (x14 / naïve
				:mod (x12 / such))))
	:ARG2 (x18 / cough
		:ARG0 (x17 / she)
		:ARG1 (x20 / or
			:op2 2
			:op2 (x22 / time
				:quant 3))
		:null_edge (x27 / put-01
			:ARG0 x17
			:ARG1 (x30 / prince
				:mod (x29 / little))
			:ARG2 (x33 / wrong-04))))

# ::id 126
# ::snt " The screen ? "
(x3 / screen)

# ::id 127
# ::snt " I was just going to look for it when you spoke to me ... "
(x7 / look-02
	:ARG0 (x2 / i)
	:mod (x4 / just)
	:condition (x12 / speak-01
		:ARG0 (x11 / you)))

# ::id 128
# ::snt Then she forced her cough a little more so that he should suffer from remorse just the same .
(x3 / force-01
	:time (x1 / then)
	:ARG0 (x2 / she)
	:ARG1 (x5 / cough
		:ARG0 x2
		:degree (x8 / more
			:mod (x7 / little)))
	:ARG1 (x12 / recommend-01
		:ARG1 (x13 / suffer-01
			:ARG0 (x11 / he)
			:ARG1 (x15 / remorse)
			:ARG1 (x18 / same-01
				:mod (x16 / just)))))

# ::id 129
# ::snt So the little prince , in spite of all the good will that was inseparable from his love , had soon come to doubt her .
(x22 / come-01
	:ARG1 (x4 / prince
		:mod (x3 / little))
	:time (x21 / soon)
	:purpose (x24 / doubt-01
		:ARG0 (xap0 / cause-01
			:ARG0 (x7 / spite
				:null_edge (x15 / separate-01
					:mod (x11 / good
						:quant (x9 / all))
					:ARG2 (x18 / love)))))
	:ARG0-of xap0)

# ::id 130
# ::snt He had taken seriously words which were without importance , and it made him very unhappy .
(x11 / and
	:op1 (x3 / take-01
		:ARG0 (x1 / he)
		:manner (x4 / serious)
		:ARG1 (x5 / word
			:ARG1 (x9 / important)))
	:op2 (x13 / make-02
		:ARG1 (x16 / happy
			:polarity -
			:degree (x15 / very))))

# ::id 131
# ::snt " I ought not to have listened to her , " he confided to me one day . "
(x13 / confide
	:null_edge (x7 / listen-01
		:ARG0 (x2 / i))
	:ARG0 (x12 / he)
	:time (x17 / day
		:quant 1))

# ::id 132
# ::snt One never ought to listen to the flowers .
(x3 / ought
	:null_edge (x1 / one)
	:null_edge (x5 / listen-01
		:ARG0 x1
		:ARG1 (x8 / flower)))

# ::id 133
# ::snt One should simply look at them and breathe their fragrance .
(x2 / recommend-01
	:ARG1 (x4 / look-01
		:ARG0 (x1 / one)
		:mod (x3 / simple)
		:purpose (x8 / breathe-01
			:ARG0 x1
			:ARG1 (x10 / fragrance)))
	:ARG1 (x7 / and))

# ::id 134
# ::snt Mine perfumed all my planet .
(x2 / perfumed
	:ARG1 (x5 / planet
		:mod (x3 / all)))

# ::id 135
# ::snt But I did not know how to take pleasure in all her grace .
(x1 / contrast-01
	:ARG2 (x5 / know-01
		:ARG0 (x2 / i)
		:ARG1 (x13 / grace-01
			:ARG1 (x9 / pleasure)
			:quant (x11 / all))))

# ::id 136
# ::snt This tale of claws , which disturbed me so much , should only have filled my heart with tenderness and pity . "
(x12 / recommend-01
	:ARG1 (x15 / fill-01
		:ARG0 (x2 / tale
			:mod (x1 / this)
			:ARG1 (x4 / claw)
			:ARG1-of (x7 / disturb-01
				:degree (x10 / much
					:degree (x9 / so))))
		:mod (x13 / only)
		:ARG1 (x17 / heart)
		:ARG2 (x20 / and
			:op1 (x19 / tenderness)
			:op2 (x21 / pity))))

# ::id 137
# ::snt And he continued his confidences : " The fact is that I did not know how to understand anything !
(x1 / and
	:op2 (x3 / continue-01
		:ARG0 (x2 / he)
		:ARG1 (x5 / confidence)
		:ARG1 (x15 / know-01
			:ARG0 x2
			:ARG0 (x12 / i)
			:ARG1 (x18 / understand-01
				:ARG1 (x19 / anything)))))

# ::id 138
# ::snt I ought to have judged by deeds and not by words .
(x2 / ought
	:null_edge (x1 / i)
	:ARG1 (x5 / judge-01
		:ARG1 x1
		:manner (x7 / deed
			:ARG1-of (x11 / word))))

# ::id 139
# ::snt She cast her fragrance and her radiance over me .
(x2 / cast-01
	:ARG0 (x1 / she)
	:ARG1 (x5 / and
		:op1 (x4 / fragrance)
		:op2 (x7 / radiate-01))
	:ARG2 (x8 / over))

# ::id 140
# ::snt I ought never to have run away from her ...
(x6 / run-01
	:ARG0 (x1 / i)
	:direction (x7 / away))

# ::id 141
# ::snt I ought to have guessed all the affection that lay behind her poor little strategems .
(x2 / ought
	:null_edge (x1 / i)
	:null_edge (x5 / guess-01
		:ARG1 (x8 / affection
			:quant (x6 / all)
			:ARG0-of (x10 / lay-01
				:ARG2 (x11 / behind
					:op1 (x15 / strategem
						:mod (x13 / poor)
						:mod (x14 / little)))))))

# ::id 142
# ::snt Flowers are so inconsistent !
(x4 / consistent-01
	:polarity -
	:ARG1 (x1 / flower)
	:degree (x3 / so))

# ::id 143
# ::snt But I was too young to know how to love her ... "
(x / xconcept
	:x (x1 / contrast-01)
	:x (x5 / young
		:domain (x2 / i)
		:degree (x4 / too)
		:null_edge (x7 / know-01
			:ARG0 x2
			:ARG1 (x10 / love-01))))

# ::id 144
# ::snt Chapter 9 .
(x1 / chapter
	:li 9)

# ::id 145
# ::snt I believe that for his escape he took advantage of the migration of a flock of wild birds .
(x2 / believe-01
	:ARG0 (x1 / i)
	:ARG1 (x8 / take-off-19
		:ARG3 (x6 / person
			:ARG0-of (e / escape-01))
		:ARG1 (x12 / migration
			:ARG1 (x9 / advantage)
			:ARG1 (x15 / flock-01
				:ARG1 (x18 / bird
					:mod (x17 / wild))))))

# ::id 146
# ::snt On the morning of his departure he put his planet in perfect order .
(x8 / put-01
	:ARG2 (x6 / depart-01
		:time (x3 / morning))
	:ARG0 (x7 / he)
	:ARG1 (x10 / planet)
	:ARG2 (x13 / order
		:ARG1-of (x12 / perfect-02)))

# ::id 147
# ::snt He carefully cleaned out his active volcanoes .
(x3 / clean-01
	:ARG0 (x1 / he)
	:manner (x2 / careful)
	:ARG1 (x7 / volcano
		:ARG1-of (x6 / activity-06)))

# ::id 148
# ::snt He possessed two active volcanoes ; and they were very convenient for heating his breakfast in the morning .
(x / xconcept
	:x (x6 / and
		:op1 (x7 / and
			:op1 (x2 / possess-01
				:ARG0 (x1 / he)
				:ARG1 (x5 / volcano
					:quant 2
					:ARG1-of (x4 / activity-06)))
			:op2 (x11 / convenient
				:degree (x10 / very)
				:purpose (x13 / heat-01
					:ARG1 (x15 / breakfast)
					:time (x18 / morning))))))

# ::id 149
# ::snt He also had one volcano that was extinct .
(x3 / have-03
	:ARG0 (x1 / he)
	:mod (x2 / also)
	:ARG1 (x5 / volcano
		:quant 1
		:ARG0-of (x8 / extinct)))

# ::id 150
# ::snt But , as he said , " One never knows ! "
(x1 / contrast-01
	:ARG2 (x10 / know-01
		:ARG1-of (x5 / say-01)
		:ARG0 (x8 / one)))

# ::id 151
# ::snt So he cleaned out the extinct volcano , too .
(x3 / clean-01
	:ARG0 (x2 / he)
	:ARG1 (x7 / volcano
		:mod (x6 / extinct))
	:mod (x9 / too))

# ::id 152
# ::snt If they are well cleaned out , volcanoes burn slowly and steadily , without any eruptions .
(x9 / burn-01
	:condition (x5 / clean-01)
	:ARG0 (x8 / volcano)
	:ARG1 (x11 / and
		:op1 (x10 / slow)
		:op2 (x12 / steady))
	:manner (x16 / erupt-01
		:mod (x15 / any)))

# ::id 153
# ::snt Volcanic eruptions are like fires in a chimney .
(x2 / erupt-01
	:mod (x1 / volcanic)
	:ARG1 (x5 / fire
		:location (x8 / chimney)))

# ::id 154
# ::snt On our earth we are obviously much too small to clean out our volcanoes .
(x6 / obvious-01
	:ARG1 (x9 / small
		:domain (x4 / we)
		:mod (x7 / much)
		:degree (x8 / too)
		:domain (x11 / clean-04
			:ARG0 x4
			:ARG1 (x14 / volcano)
			:ARG1-of (xap0 / amr-unknown
				:location (x3 / earth)))))

# ::id 155
# ::snt That is why they bring no end of trouble upon us .
(x1 / that
	:time (x5 / bring-01
		:ARG1 (x7 / end-01
			:polarity -
			:ARG1 (x9 / trouble))))

# ::id 156
# ::snt The little prince also pulled up , with a certain sense of dejection , the last little shoots of the baobabs .
(x5 / pull-01
	:ARG0 (x3 / prince
		:mod (x2 / little))
	:mod (x4 / also)
	:ARG2 (x11 / sense
		:mod (x10 / certain)
		:ARG1 (x13 / dejection))
	:ARG2 (x21 / baobab
		:mod (x16 / last)
		:mod (x17 / little)))

# ::id 157
# ::snt He believed that he would never want to return .
(x2 / believe-01
	:ARG0 (x1 / he)
	:ARG1 (x7 / want-01
		:ARG1 (x9 / return-01)))

# ::id 158
# ::snt But on this last morning all these familiar tasks seemed very precious to him .
(x1 / contrast-01
	:ARG2 (x10 / seem-01
		:time (x5 / morning
			:mod (x3 / this)
			:mod (x4 / last))
		:ARG1 (x12 / precious
			:domain (x9 / task
				:quant (x6 / all)
				:mod (x8 / familiarize-01))
			:degree (x11 / very))))

# ::id 159
# ::snt And when he watered the flower for the last time , and prepared to place her under the shelter of her glass globe , he realised that he was very close to tears .
(x1 / and
	:op2 (x26 / realise
		:time (x12 / and
			:op1 (x4 / water
				:ARG1 (x6 / flower)
				:mod (x9 / last))
			:op2 (x13 / prepare-02
				:ARG2 (x15 / place-01
					:ARG2 (x19 / thing
						:ARG2-of (s / shelter-01)
						:poss (x23 / globe
							:consist-of (x22 / glass))))))
		:ARG0 (x25 / he)
		:ARG1 (x31 / close-10
			:ARG1 (x28 / he)
			:degree (x30 / very)
			:ARG2 (x33 / tear-03))))

# ::id 160
# ::snt " Goodbye , " he said to the flower .
(x6 / say-01
	:ARG1 (x2 / goodbye)
	:ARG0 (x5 / he)
	:ARG1 (x9 / flower))

# ::id 161
# ::snt But she made no answer .
(x1 / contrast-01
	:ARG2 (x3 / make-02
		:ARG0 (x2 / she)
		:ARG1 (x5 / answer-01
			:polarity -)))

# ::id 162
# ::snt " Goodbye , " he said again .
(x6 / say-01
	:ARG1 (x2 / goodbye)
	:ARG0 (x5 / he)
	:mod (x7 / again))

# ::id 163
# ::snt The flower coughed .
(x3 / cough
	:ARG1 (x2 / flower))

# ::id 164
# ::snt But it was not because she had a cold .
(x1 / contrast-01
	:ARG2 (x5 / cause-01
		:ARG0 (x7 / have-03
			:ARG0 (x6 / she)
			:ARG1 (x9 / cold))))

# ::id 165
# ::snt " I have been silly , " she said to him , at last .
(x9 / say-01
	:ARG1 (x5 / silly
		:ARG0 (x2 / i))
	:ARG0 (x8 / she)
	:time (x14 / last))

# ::id 166
# ::snt " I ask your forgiveness .
(x3 / ask-01
	:ARG0 (x2 / i)
	:ARG1 (x5 / forgiveness))

# ::id 167
# ::snt Try to be happy ... "
(x1 / try-01
	:ARG1 (x4 / happy))

# ::id 168
# ::snt He was surprised by this absence of reproaches .
(x3 / surprise-01
	:ARG1 (x1 / he)
	:ARG0 (x6 / absent-01
		:mod (x5 / this)
		:ARG1 (x8 / reproach)))

# ::id 169
# ::snt He stood there all bewildered , the glass globe held arrested in mid - air .
(x10 / hold-04
	:ARG1 (x2 / stand-01
		:ARG1 (x1 / he)
		:ARG1 (x5 / bewildered
			:mod (x4 / all)))
	:ARG0 (x9 / globe
		:consist-of (x8 / glass))
	:ARG1 (x11 / arrest-01
		:ARG1 (x15 / air))
	:location (x13 / mid))

# ::id 170
# ::snt He did not understand this quiet sweetness .
(x4 / understand-01
	:ARG0 (x1 / he)
	:ARG1 (x7 / sweetness
		:mod (x5 / this)
		:mod (x6 / quiet)))

# ::id 171
# ::snt " Of course I love you , " the flower said to him .
(x11 / say-01
	:ARG1 (x5 / love-01
		:ARG0 (x4 / i)
		:ARG1 (x6 / you))
	:ARG0 (x10 / flower))

# ::id 172
# ::snt " It is my fault that you have not known it all the while .
(x5 / fault-01
	:ARG2 (x2 / it)
	:duration (x14 / while
		:domain (x7 / you)
		:ARG1 (x11 / it)
		:quant (x12 / all)))

# ::id 173
# ::snt That is of no importance .
(x5 / important
	:domain (x1 / that)
	:polarity -)

# ::id 174
# ::snt But you - - you have been just as foolish as I .
(x / xconcept
	:x (x1 / contrast-01)
	:x (x10 / foolish
		:domain (x2 / you)
		:domain (x5 / you)
		:mod (x8 / just)
		:ARG2 (x12 / road
			:name (n / name
				:op1 "I"))))

# ::id 175
# ::snt Try to be happy ... let the glass globe be .
(x1 / try-01
	:ARG1 (x4 / happy)
	:null_edge (x6 / let-01
		:ARG1 (x9 / globe
			:consist-of (x8 / glass))))

# ::id 176
# ::snt I do n't want it any more . "
(x4 / want-01
	:ARG0 (x1 / i)
	:degree (x7 / more
		:mod (x6 / any)))

# ::id 177
# ::snt " But the wind - - "
(x2 / contrast-01
	:ARG2 (x4 / wind-up-02))

# ::id 178
# ::snt " My cold is not so bad as all that ... the cool night air will do me good .
(x7 / bad-07
	:ARG1 (x3 / cold)
	:degree (x6 / so)
	:null_edge (x17 / do-02
		:ARG0 (x15 / air
			:ARG1-of (x13 / cool-04)
			:time (x14 / night))
		:ARG1 (x19 / good)))

# ::id 179
# ::snt I am a flower . "
(x4 / flower
	:domain (x1 / i))

# ::id 180
# ::snt " But the animals - - "
(x2 / contrast-01
	:ARG2 (x4 / animal))

# ::id 181
# ::snt " Well , I must endure the presence of two or three caterpillars if I wish to become acquainted with the butterflies .
(x6 / endure-01
	:mod (x2 / well)
	:ARG0 (x4 / i)
	:ARG1 (x8 / presence
		:poss (x11 / or
			:op2 2
			:op2 (x13 / caterpillar
				:quant 3)))
	:condition (x16 / wish-01
		:ARG0 (x15 / i)
		:ARG1 (x18 / become-01
			:ARG2 (x19 / acquaint-01
				:ARG2 (x22 / butterfly)))))

# ::id 182
# ::snt It seems that they are very beautiful .
(x2 / seem-01
	:ARG1 (x7 / beautiful-02
		:ARG1 (x4 / they)
		:degree (x6 / very)))

# ::id 183
# ::snt And if not the butterflies - - and the caterpillars - - who will call upon me ?
(x1 / and
	:op2 (x8 / and
		:op1 (x5 / butterfly)
		:op2 (x10 / caterpillar)
		:op1 (x15 / call-01)))

# ::id 184
# ::snt You will be far away ... as for the large animals - - I am not at all afraid of any of them .
(x19 / fear-01
	:op (a / afraid)
	:ARG1 (x1 / you)
	:null_edge (x5 / away
		:mod (x4 / far))
	:ARG1 (x11 / animal
		:mod (x10 / large)
		:quant (x18 / all))
	:ARG1 (x21 / any))

# ::id 185
# ::snt I have my claws . "
(x2 / have-03
	:ARG0 (x1 / i)
	:ARG1 (x4 / claw))

# ::id 186
# ::snt And , naïvely , she showed her four thorns .
(x1 / and
	:op2 (x6 / show-01
		:ARG1 (x9 / thorn
			:quant 4)))

# ::id 187
# ::snt Then she added : " Do n't linger like this .
(x3 / add-01
	:time (x1 / then)
	:ARG0 (x2 / she)
	:ARG1 (x8 / linger
		:ARG1-of (xap0 / resemble-01
			:ARG2 (x10 / this))))

# ::id 188
# ::snt You have decided to go away .
(x3 / decide-01
	:ARG0 (x1 / you)
	:ARG1 (x5 / go-02
		:ARG0 x1
		:direction (x6 / away)))

# ::id 189
# ::snt Now go ! "
(x2 / go-02
	:time (x1 / now))

# ::id 190
# ::snt For she did not want him to see her crying .
(x5 / want-01
	:ARG0 (x2 / she)
	:ARG1 (x8 / see-01
		:ARG0 x2
		:ARG1 (x10 / cry-02)))

# ::id 191
# ::snt She was such a proud flower ...
(x5 / pride-01
	:op (p / proud)
	:mod (x3 / such)
	:ARG2 (x6 / flower
		:ARG0 (x1 / she)))

# ::id 192
# ::snt Chapter 10 .
(x1 / chapter
	:li 10)

# ::id 193
# ::snt He found himself in the neighborhood of the asteroids 325 , 326 , 327 , 328 , 329 , and 330 .
(x2 / find-01
	:ARG0 (x1 / he)
	:location (x6 / neighborhood
		:consist-of (x20 / and
			:op1 (x9 / asteroid
				:quant (x10 / 325)
				:quant 326
				:quant (x14 / 327)
				:quant (x16 / 328)
				:quant (x18 / 329)
				:null_edge (x21 / 330)))))

# ::id 194
# ::snt He began , therefore , by visiting them , in order to add to his knowledge .
(x2 / begin-01
	:ARG0 (x1 / he)
	:ARG1 (x7 / visit-01
		:ARG0 x1
		:ARG1 (x13 / add-02
			:ARG2 (x16 / knowledge))))

# ::id 195
# ::snt The first of them was inhabited by a king .
(x6 / inhabit-01
	:ARG0 (x9 / king))

# ::id 196
# ::snt Clad in royal purple and ermine , he was seated upon a throne which was at the same time both simple and majestic .
(x10 / seat-01
	:ARG1-of (x1 / clothe
		:ARG2 (x5 / and
			:op1 (x4 / purple-02
				:mod (x3 / royalty))
			:op2 (x6 / ermine)))
	:ARG1 (x8 / he)
	:ARG1 (x22 / and
		:op1 (x13 / throne)
		:op1 (x21 / simple-02
			:time (x19 / time
				:ARG1-of (x18 / same-01)))
		:op2 (x23 / majestic)))

# ::id 197
# ::snt " Ah !
(x2 / Ah)

# ::id 198
# ::snt Here is a subject , " exclaimed the king , when he saw the little prince coming .
(x7 / exclaim
	:ARG1 (x4 / subject-01
		:location (x1 / here))
	:ARG0 (x9 / king
		:ARG0-of (x13 / see-01
			:ARG1 (x17 / come-01
				:ARG1 (x16 / prince
					:mod (x15 / little))))))

# ::id 199
# ::snt And the little prince asked himself : " How could he recognize me when he had never seen me before ? "
(x1 / and
	:op2 (x5 / ask-01
		:ARG0 (x4 / prince
			:mod (x3 / little))
		:ARG1 (x10 / possible-01
			:ARG1 (x12 / recognize-02
				:condition (x18 / see-01
					:time (x20 / before))))))

# ::id 200
# ::snt He did not know how the world is simplified for kings .
(x4 / know-01
	:ARG0 (x1 / he)
	:ARG1 (x9 / simplify-01
		:ARG1 (x7 / world)))

# ::id 201
# ::snt To them , all men are subjects .
(x7 / subject
	:domain (x5 / man
		:mod (x4 / all)))

# ::id 202
# ::snt " Approach , so that I may see you better , " said the king , who felt consumingly proud of being at last a king over somebody .
(x13 / say-01
	:ARG0 (x2 / approach
		:null_edge (x8 / see-01
			:ARG0 (x6 / i)
			:ARG1-of (x7 / possible-01)
			:ARG1 (x9 / you)
			:manner (x10 / good)))
	:ARG1 (x18 / feel-01
		:ARG0 (x15 / king)
		:ARG1 (x20 / pride-01
			:op (p / proud)
			:ARG1 x15
			:ARG2 (x26 / king
				:time (x24 / last)
				:topic (x28 / somebody)))))

# ::id 203
# ::snt The little prince looked everywhere to find a place to sit down ; but the entire planet was crammed and obstructed by the king 's magnificent ermine robe .
(x14 / contrast-01
	:ARG1 (x4 / look-01
		:ARG0 (x3 / prince
			:mod (x2 / little))
		:ARG1 (x20 / and
			:op1 (x19 / cram-01
				:ARG1 (x17 / planet
					:mod (x16 / entire))
				:ARG0 (x28 / robe
					:ARG0 (x24 / king)
					:mod (x26 / magnificent)
					:mod (x27 / ermine)))
			:op2 (x21 / obstruct-01)))
	:ARG2 (x5 / everywhere)
	:ARG2 (x7 / find-01
		:ARG0 x3
		:ARG1 (x9 / place
			:location-of (x11 / sit-01))))

# ::id 204
# ::snt So he remained standing upright , and , since he was tired , he yawned .
(x7 / and
	:op1 (x15 / yawn
		:ARG1 (x3 / remain-01
			:ARG1 (x2 / he)
			:ARG3 (x4 / stand-01
				:domain x2)
			:ARG1 (x5 / upright
				:ARG1 x2))
		:null_edge (x12 / tire-01)
		:ARG0 (x14 / he)))

# ::id 205
# ::snt " It is contrary to etiquette to yawn in the presence of a king , " the monarch said to him .
(x19 / say-01
	:ARG1 (x4 / contrary-01
		:ARG2 (x6 / etiquette)
		:ARG2 (x8 / yawn
			:location (x11 / presence
				:ARG2 (x14 / king))))
	:ARG0 (x18 / have-org-role-91
		:ARG2 (m / monarch)))

# ::id 206
# ::snt " I forbid you to do so . "
(x3 / forbid-01
	:ARG0 (x2 / i)
	:ARG1 (x6 / do-02
		:ARG0 (x4 / you)
		:ARG1 (x7 / so)))

# ::id 207
# ::snt " I can n't help it .
(x3 / possible-01
	:ARG1 (x5 / help-01
		:ARG0 (x2 / i)))

# ::id 208
# ::snt I can n't stop myself , " replied the little prince , thoroughly embarrassed .
(x8 / reply-01
	:ARG1 (x2 / possible-01
		:ARG1 (x4 / stop-01
			:ARG0 (x1 / i)))
	:ARG0 (x11 / prince
		:mod (x10 / little)
		:ARG1-of (x14 / embarrass-01
			:degree (x13 / thorough))))

# ::id 209
# ::snt " I have come on a long journey , and I have had no sleep ... "
(x10 / and
	:op1 (x4 / come-01
		:ARG1 (x2 / i)
		:ARG1 (x8 / journey-01
			:ARG1-of (x7 / long-03))
		:ARG3 (x15 / sleep-01
			:ARG0 (x11 / i)
			:polarity -)))

# ::id 210
# ::snt " Ah , then , " the king said .
(x9 / say-01
	:mod (x2 / ah)
	:time (x4 / then)
	:ARG0 (x8 / king))

# ::id 211
# ::snt " I order you to yawn .
(x3 / order-01
	:ARG0 (x2 / i)
	:ARG1 (x6 / yawn
		:ARG0 (x4 / you)))

# ::id 212
# ::snt It is years since I have seen anyone yawning .
(x3 / temporal-quantity
	:unit (y / year)
	:null_edge (x7 / see-01
		:ARG0 (x5 / i)
		:ARG1 (x8 / anyone
			:mod (x9 / yawning))))

# ::id 213
# ::snt Yawns , to me , are objects of curiosity .
(x7 / object
	:ARG0 (x1 / yawns)
	:ARG1 (x9 / curiosity))

# ::id 214
# ::snt Come , now !
(x1 / come-01
	:time (x3 / now))

# ::id 215
# ::snt Yawn again !
(x1 / yawn
	:mod (x2 / again))

# ::id 216
# ::snt It is an order . "
(x4 / order
	:ARG0 (x1 / it))

# ::id 217
# ::snt " That frightens me ...
(x3 / frighten
	:ARG0 (x2 / that))

# ::id 218
# ::snt I can not , any more ... " murmured the little prince , now completely abashed .
(x2 / possible-01
	:mod (x16 / abashed
		:ARG1 (x1 / i)
		:null_edge (x9 / murmur
			:ARG1 x1
			:degree (x6 / more)
			:ARG1 (x12 / prince
				:mod (x11 / little)))
		:time (x14 / now)
		:ARG1-of (x15 / complete-02)))

# ::id 219
# ::snt " Hum !
(x2 / hum)

# ::id 220
# ::snt Hum ! " replied the king .
(x1 / hum
	:null_edge (x4 / reply-01
		:ARG1 (x6 / king)))

# ::id 221
# ::snt " Then I - - I order you sometimes to yawn and sometimes to - - "
(x12 / and
	:op1 (x7 / order-01
		:mod (x2 / then)
		:ARG0 (x3 / i)
		:ARG0 (x6 / i)
		:ARG1 (x8 / you)
		:frequency (x9 / sometimes)
		:ARG1 (x11 / yawn))
	:op2 (x13 / sometimes))

# ::id 222
# ::snt He sputtered a little , and seemed vexed .
(x6 / and
	:op1 (x2 / sputter
		:ARG0 (x1 / he)
		:ARG1 (x4 / little))
	:op2 (x7 / seem-01
		:ARG1 (x8 / vex)))

# ::id 223
# ::snt For what the king fundamentally insisted upon was that his authority should be respected .
(x6 / insist-01
	:ARG0 (x4 / king)
	:manner (x5 / fundamental)
	:ARG1 (x12 / recommend-01
		:ARG1 (x14 / respect-01
			:ARG1 (x11 / authority))))

# ::id 224
# ::snt He tolerated no disobedience .
(x2 / tolerate-01
	:ARG0 (x1 / he)
	:polarity -
	:ARG1 (x4 / disobedience))

# ::id 225
# ::snt He was an absolute monarch .
(x5 / have-org-role-91
	:ARG2 (m / monarch)
	:ARG0 (x1 / he)
	:mod (x4 / absolute))

# ::id 226
# ::snt But , because he was a very good man , he made his orders reasonable .
(x1 / contrast-01
	:ARG2 (x12 / make-02
		:ARG0 (x9 / man
			:null_edge (x3 / cause-01)
			:domain (x4 / he)
			:mod (x8 / good
				:degree (x7 / very)))
		:ARG0 (x11 / he)
		:ARG1 (x15 / reasonable-02
			:ARG1 (x14 / order-01))))

# ::id 227
# ::snt " If I ordered a general , " he would say , by way of example , " if I ordered a general to change himself into a sea bird , and if the general did not obey me , that would not be the fault of the general .
(x46 / fault-01
	:time (x32 / and
		:op1 (x4 / order-01
			:ARG0 (x3 / i)
			:ARG1 (x6 / general)
			:ARG2 (x38 / obey
				:mod (x35 / general)))
		:op2 (x21 / order
			:ARG1-of (x19 / cause-01
				:ARG1 (x11 / say-01))
			:ARG0 (x20 / i)
			:ARG1 (x23 / general)
			:purpose (x25 / change-01
				:ARG1 (x30 / bird
					:mod (x29 / sea)))))
	:ARG1-of (x49 / general-02))

# ::id 228
# ::snt It would be my fault . "
(x5 / fault-01
	:ARG2 (x1 / it))

# ::id 229
# ::snt " May I sit down ? " came now a timid inquiry from the little prince .
(x8 / come-01
	:purpose (x4 / sit-01
		:null_edge (x2 / possible-01)
		:ARG1 (x3 / i))
	:time (x9 / now)
	:ARG1 (x12 / inquire-01
		:mod (x11 / timid)
		:ARG1 (x16 / prince
			:mod (x15 / little))))

# ::id 230
# ::snt " I order you to do so , " the king answered him , and majestically gathered in a fold of his ermine mantle .
(x15 / and
	:op1 (x12 / answer-01
		:ARG1 (x3 / order-01
			:ARG0 (x2 / i)
			:ARG1 (x4 / you)
			:purpose (x6 / do-02
				:ARG1 (x7 / so)))
		:ARG0 (x11 / king))
	:op2 (x17 / gather-01
		:manner (x16 / majestically)
		:ARG1 (x20 / fold
			:ARG0 (x24 / mantle
				:mod (x23 / ermine)))))

# ::id 231
# ::snt But the little prince was wondering ...
(x1 / contrast-01
	:ARG2 (x6 / wonder-01
		:ARG0 (x4 / prince
			:mod (x3 / little))))

# ::id 232
# ::snt The planet was tiny .
(x4 / tiny
	:domain (x2 / planet))

# ::id 233
# ::snt Over what could this king really rule ?
(x3 / possible-01
	:ARG1 (x7 / rule-out-02
		:time (x1 / over)
		:ARG0 (x5 / king
			:mod (x4 / this))
		:mod (x6 / really)))

# ::id 234
# ::snt " Sire , " he said to him , " I beg that you will excuse my asking you a question - - "
(x6 / say-01
	:ARG0 (x2 / sire)
	:ARG0 (x5 / he)
	:time-of (x12 / beg-01
		:ARG2 (x16 / excuse-02
			:ARG0 (x14 / you)
			:ARG1 (x18 / ask-01
				:ARG0 (x19 / you)
				:ARG1 (x21 / question-01)))))

# ::id 235
# ::snt " I order you to ask me a question , " the king hastened to assure him .
(x14 / hasten
	:ARG1 (x3 / order-01
		:ARG0 (x2 / i)
		:ARG1 (x4 / you)
		:ARG2 (x6 / ask-01
			:ARG1 (x9 / question-01)))
	:ARG0 (x13 / king)
	:ARG2 (x16 / assure-01
		:ARG0 x13))

# ::id 236
# ::snt " Sire - - over what do you rule ? "
(x9 / rule-03
	:time (x5 / over)
	:ARG0 (x8 / you))

# ::id 237
# ::snt " Over everything , " said the king , with magnificent simplicity .
(x6 / say-01
	:null_edge (x2 / over
		:op1 (x3 / everything))
	:ARG0 (x8 / king)
	:manner (x12 / simplicity
		:mod (x11 / magnificent)))

# ::id 238
# ::snt " Over everything ? "
(x2 / over
	:ARG1 (x3 / everything))

# ::id 239
# ::snt The king made a gesture , which took in his planet , the other planets , and all the stars .
(x5 / gesture-01
	:ARG1 (x2 / king)
	:ARG1 (x17 / and
		:op2 (x15 / planet
			:mod (x14 / other))
		:op2 (x20 / star
			:quant (x18 / all))))

# ::id 240
# ::snt " Over all that ? " asked the little prince .
(x7 / ask-01
	:null_edge (x3 / all)
	:ARG0 (x10 / prince
		:mod (x9 / little)))

# ::id 241
# ::snt " Over all that , " the king answered .
(x9 / answer-01
	:null_edge (x3 / all)
	:ARG0 (x8 / king))

# ::id 242
# ::snt For his rule was not only absolute : it was also universal .
(x3 / rule-03
	:degree (x7 / absolute
		:mod (x6 / only)
		:mod (x12 / universal
			:mod (x11 / also))))

# ::id 243
# ::snt " And the stars obey you ? "
(x2 / and
	:op2 (x5 / obey
		:null_edge (x4 / null_tag)
		:ARG0 (x6 / you)))

# ::id 244
# ::snt " Certainly they do , " the king said .
(x9 / say-01
	:mod (x2 / certain)
	:ARG0 (x8 / king))

# ::id 245
# ::snt " They obey instantly .
(x3 / obey
	:ARG0 (x2 / they)
	:manner (x4 / instant))

# ::id 246
# ::snt I do not permit insubordination . "
(x4 / permit-01
	:ARG0 (x1 / i)
	:ARG1 (x5 / insubordination))

# ::id 247
# ::snt Such power was a thing for the little prince to marvel at .
(x5 / thing
	:domain (x2 / power
		:mod (x1 / such))
	:domain (x11 / marvel
		:ARG0 (x9 / prince
			:mod (x8 / little))))

# ::id 248
# ::snt If he had been master of such complete authority , he would have been able to watch the sunset , not forty - four times in one day , but seventy - two , or even a hundred , or even two hundred times , without ever having to move his chair .
(x15 / possible-01
	:null_edge (x5 / master
		:ARG0 (x2 / he)
		:ARG1 (x9 / authority
			:ARG1-of (x8 / complete-02
				:degree (x7 / such))))
	:ARG1 (x17 / watch-01
		:ARG0 (x11 / he)
		:ARG1 (x19 / sunset)
		:quant 4
		:ARG1 (x35 / or
			:op1 (x28 / day
				:quant 1
				:time-of (x30 / contrast-01)
				:quant 2
				:mod (x36 / even)
				:time-of (x40 / or)
				:null_edge (x41 / even))))
	:prep-without (x48 / have-03
		:ARG1 (x50 / move-01
			:time (x47 / ever)
			:ARG1 (x52 / chair-01))))

# ::id 249
# ::snt And because he felt a bit sad as he remembered his little planet which he had forsaken , he plucked up his courage to ask the king a favor : " I should like to see a sunset ... do me that kindness ...
(x1 / and
	:op2 (x20 / pluck-01
		:ARG1-of (x2 / cause-01
			:ARG0 (x4 / feel-01
				:ARG1 (x7 / sad-02
					:degree (x6 / bit))
				:time (x10 / remember-01
					:ARG1 (x13 / planet
						:mod (x12 / little)
						:ARG1-of (x17 / forsake-01)))))
		:ARG0 (x19 / he)
		:ARG1 (x23 / courage
			:purpose (x25 / ask-02
				:ARG1 (x27 / king)
				:ARG1 (x29 / favor)))
		:ARG1 (x33 / recommend-01
			:ARG1 (x34 / like-02
				:ARG0 (x32 / i)
				:ARG1 (x36 / see-01
					:ARG0 x32
					:ARG1 (x38 / sunset))
				:ARG1 (x43 / kind-01)))))

# ::id 250
# ::snt Order the sun to set ... "
(x1 / order
	:ARG1 (x5 / set-02
		:null_edge (x3 / sun)))

# ::id 251
# ::snt " If I ordered a general to fly from one flower to another like a butterfly , or to write a tragic drama , or to change himself into a sea bird , and if the general did not carry out the order that he had received , which one of us would be in the wrong ? " the king demanded .
(x62 / demand-01
	:ARG1 (x34 / and
		:op1 (x4 / order-01
			:ARG0-of (x2 / cause-01)
			:ARG0 (x3 / i)
			:ARG1 (x6 / general)
			:ARG1 (x18 / or
				:op1 (x8 / fly-01
					:source (x11 / flower
						:quant 1)
					:null_edge (x13 / another)
					:ARG1 (x25 / or
						:op2 (x27 / change-01
							:ARG1 (x32 / bird
								:mod (x31 / sea)))))
				:op2 (x16 / butterfly)
				:op2 (x20 / write-01
					:ARG1 (x23 / drama
						:mod (x22 / tragic)))))
		:op2 (x40 / carry-out-03
			:ARG0 (x37 / general)
			:ARG1 (x47 / receive-01)
			:ARG1 (x57 / wrong-04
				:ARG1 (x50 / one))))
	:ARG0 (x61 / king))

# ::id 252
# ::snt " The general , or myself ? "
(x5 / or
	:op1 (x3 / general))

# ::id 253
# ::snt " You , " said the little prince firmly .
(x5 / say-01
	:ARG0 (x2 / you)
	:ARG1 (x8 / prince
		:mod (x7 / little))
	:manner (x9 / firm-03))

# ::id 254
# ::snt " Exactly .
(x2 / exact)

# ::id 255
# ::snt One much require from each one the duty which each one can perform , " the king went on .
(x18 / go-02
	:null_edge (x3 / require-01
		:ARG1 (x6 / one
			:mod (x5 / each))
		:ARG1 (x8 / duty
			:manner-of (x12 / possible-01
				:ARG1 (x13 / perform-02
					:ARG0 (x11 / one
						:mod (x10 / each))))))
	:ARG0 (x17 / king))

# ::id 256
# ::snt " Accepted authority rests first of all on reason .
(x4 / rest-01
	:ARG0 (x3 / authority)
	:frequency (x5 / first)
	:manner (x9 / reason))

# ::id 257
# ::snt If you ordered your people to go and throw themselves into the sea , they would rise up in revolution .
(x17 / rise-01
	:condition (x3 / order-01
		:ARG0 (x2 / you)
		:ARG1 (x8 / and
			:op1 (x7 / go-02
				:ARG4 (x13 / sea))
			:op2 (x9 / throw-01)))
	:ARG1 (x20 / revolution-03))

# ::id 258
# ::snt I have the right to require obedience because my orders are reasonable . "
(x4 / right-05
	:ARG1 (x1 / i)
	:ARG2 (x6 / require-01
		:ARG1 (x7 / obedience))
	:ARG1-of (x8 / cause-01
		:ARG0 (x12 / reasonable-02
			:ARG1 (x10 / order-01))))

# ::id 259
# ::snt " Then my sunset ? " the little prince reminded him : for he never forgot a question once he had asked it .
(x10 / remind-01
	:ARG2 (x4 / sunset
		:mod (x2 / then))
	:ARG0 (x9 / prince
		:mod (x8 / little))
	:time (x16 / forget-01
		:ARG0 (x14 / he)
		:ARG1 (x18 / question-01)
		:time (x22 / ask-01
			:ARG0 (x20 / he))))

# ::id 260
# ::snt " You shall have your sunset .
(x4 / have-03
	:ARG0 (x2 / you)
	:ARG1 (x6 / sunset))

# ::id 261
# ::snt I shall command it .
(x3 / command-02
	:ARG0 (x1 / i))

# ::id 262
# ::snt But , according to my science of government , I shall wait until conditions are favorable . "
(x1 / contrast-01
	:ARG2 (x12 / wait-01
		:ARG2 (x6 / science
			:poss (x8 / government-organization
				:ARG0-of (g / govern-01)))
		:ARG1 (x10 / i)
		:time (x13 / until
			:op1 (x16 / favorable
				:domain (x14 / condition)))))

# ::id 263
# ::snt " When will that be ? " inquired the little prince .
(x8 / inquire-01
	:null_edge (x5 / be-02)
	:ARG1 (x11 / prince
		:mod (x10 / little)))

# ::id 264
# ::snt " Hum !
(x2 / hum)

# ::id 265
# ::snt Hum ! " replied the king ; and before saying anything else he consulted a bulky almanac .
(x / xconcept
	:x (x7 / and
		:op1 (x8 / and
			:op1 (x4 / reply-01
				:ARG0 (x1 / hum)
				:ARG1 (x6 / king))
			:op2 (x14 / consult-01
				:ARG0 x1
				:time (x9 / before
					:op1 (x10 / say-01
						:ARG1 (x11 / anything
							:mod (x12 / else))))
				:ARG1 (x17 / almanac
					:mod (x16 / bulky))))))

# ::id 266
# ::snt " Hum !
(x2 / hum)

# ::id 267
# ::snt Hum !
(x1 / hum)

# ::id 268
# ::snt That will be about - - about - - that will be this evening about twenty minutes to eight .
(x1 / that
	:time (x4 / about
		:null_edge (x16 / date-entity
			:dayperiod (x14 / name
				:op1 "evening"
				:op2 "about"
				:mod (x13 / this)
				:part-of (x17 / temporal-quantity
					:unit (m / minute)))
			:null_edge 8)))

# ::id 269
# ::snt And you will see how well I am obeyed . "
(x1 / and
	:op2 (x4 / see-01
		:ARG0 (x2 / you)
		:ARG1 (x9 / obey
			:ARG1 (x7 / i))))

# ::id 270
# ::snt The little prince yawned .
(x4 / yawn
	:ARG0 (x3 / prince
		:mod (x2 / little)))

# ::id 271
# ::snt He was regretting his lost sunset .
(x3 / regret-01
	:ARG0 (x1 / he)
	:ARG1 (x6 / sunset
		:ARG1-of (x5 / lose-02)))

# ::id 272
# ::snt And then , too , he was already beginning to be a little bored .
(x1 / and
	:op2 (x9 / begin-01
		:time (x2 / then)
		:mod (x4 / too)
		:ARG0 (x6 / he)
		:time (x8 / already)
		:ARG1 (x14 / bored
			:ARG1 x6
			:mod (x13 / little))))

# ::id 273
# ::snt " I have nothing more to do here , " he said to the king .
(x12 / say-01
	:ARG1 (x3 / have-03
		:ARG0 (x2 / i)
		:ARG2 (x4 / nothing)
		:ARG1 (x5 / more
			:location (x8 / here)))
	:ARG0 (x11 / he)
	:ARG2 (x15 / king))

# ::id 274
# ::snt " So I shall set out on my way again . "
(x5 / set-02
	:ARG0 (x3 / i)
	:manner (x9 / way)
	:mod (x10 / again))

# ::id 275
# ::snt " Do not go , " said the king , who was very proud of having a subject .
(x7 / say-01
	:ARG1 (x4 / go-02)
	:ARG0 (x9 / king
		:ARG2-of (x14 / pride-01
			:op (p / proud)
			:degree (x13 / very)
			:ARG2 (x16 / have-03
				:ARG1 (x18 / subject)))))

# ::id 276
# ::snt " Do not go .
(x4 / go-02)

# ::id 277
# ::snt I will make you a Minister ! "
(x3 / make-02
	:ARG0 (x1 / i)
	:ARG2 (x6 / have-org-role-91
		:ARG2 (m / minister)
		:ARG0 (x4 / you)))

# ::id 278
# ::snt " Minister of what ? "
(x2 / have-org-role-91
	:ARG2 (m / minister))

# ::id 279
# ::snt " Minster of - - of Justice ! "
(x3 / include-91
	:ARG3 (x2 / minster
		:topic (x7 / justice)))

# ::id 280
# ::snt " But there is nobody here to judge ! "
(x2 / contrast-01
	:ARG2 (x3 / there)
	:ARG2 (x5 / nobody
		:location (x6 / here)
		:ARG3 (x8 / judge-01)))

# ::id 281
# ::snt " We do not know that , " the king said to him .
(x11 / say-01
	:ARG1 (x5 / know-01
		:ARG0 (x2 / we))
	:ARG0 (x10 / king))

# ::id 282
# ::snt " I have not yet made a complete tour of my kingdom .
(x9 / tour-01
	:ARG0 (x2 / i)
	:time (x5 / yet)
	:ARG1-of (x8 / complete-02)
	:ARG1 (x12 / kingdom))

# ::id 283
# ::snt I am very old .
(x4 / old
	:domain (x1 / i)
	:degree (x3 / very))

# ::id 284
# ::snt There is no room here for a carriage .
(x4 / room
	:polarity -
	:location (x5 / here)
	:purpose (x8 / carriage))

# ::id 285
# ::snt And it tires me to walk . "
(x3 / tire
	:null_edge (x1 / and)
	:ARG1 (x6 / walk-01))

# ::id 286
# ::snt " Oh , but I have looked already ! " said the little prince , turning around to give one more glance to the other side of the planet .
(x11 / say-01
	:ARG1 (x4 / contrast-01
		:ARG1 (x7 / look-01
			:mod (x2 / oh)
			:ARG0 (x5 / i)
			:time (x8 / already)))
	:ARG0 (x14 / prince
		:mod (x13 / little))
	:ARG1 (x16 / turn-02
		:ARG0 x14
		:direction (x17 / around)
		:ARG1 (x22 / glance-01
			:quant 1
			:mod (x21 / more)
			:destination (x26 / side
				:mod (x25 / other)
				:poss (x29 / planet)))))

# ::id 287
# ::snt On that side , as on this , there was nobody at all ...
(x11 / nobody
	:null_edge (x7 / this)
	:ARG1-of (xap0 / be-located-at-91
		:ARG2 (x3 / side
			:mod (x2 / that))))

# ::id 288
# ::snt " Then you shall judge yourself , " the king answered .
(x11 / answer-01
	:ARG1 (x5 / judge-01)
	:ARG0 (x10 / king))

# ::id 289
# ::snt " that is the most difficult thing of all .
(x7 / thing
	:mod (x6 / difficult
		:degree (x5 / most))
	:ARG1-of (x8 / include-91))

# ::id 290
# ::snt It is much more difficult to judge oneself than to judge others .
(x5 / difficult
	:mod (x3 / much)
	:degree (x4 / more)
	:domain (x7 / judge-01
		:ARG1 (x8 / oneself))
	:domain (x11 / judge-01
		:ARG1 (x12 / other)))

# ::id 291
# ::snt If you succeed in judging yourself rightly , then you are indeed a man of true wisdom . "
(x14 / man
	:null_edge (x3 / succeed-01
		:ARG0 (x2 / you)
		:ARG1 (x5 / judge-01
			:ARG0 x2
			:manner (x7 / right)))
	:domain (x10 / you)
	:mod (x12 / indeed)
	:ARG1-of (x17 / wisdom
		:mod (x16 / true)))

# ::id 292
# ::snt " Yes , " said the little prince , " but I can judge myself anywhere .
(x11 / contrast-01
	:ARG1 (x5 / say-01
		:ARG1 (x8 / prince
			:mod (x7 / little))
		:ARG1 (x13 / possible-01
			:ARG1 (x14 / judge-01)
			:location (x16 / anywhere))))

# ::id 293
# ::snt I do not need to live on this planet .
(x4 / need-01
	:ARG0 (x1 / i)
	:ARG1 (x6 / live-01
		:ARG0 x1
		:location (x9 / planet
			:mod (x8 / this))))

# ::id 294
# ::snt " Hum !
(x2 / hum)

# ::id 295
# ::snt Hum ! " said the king .
(x4 / say-01
	:ARG1 (x1 / hum)
	:ARG0 (x6 / king))

# ::id 296
# ::snt " I have good reason to believe that somewhere on my planet there is an old rat .
(x3 / have-03
	:ARG0 (x2 / i)
	:ARG1 (x5 / reason
		:mod (x4 / good)
		:purpose (x7 / believe-01
			:ARG1 (x17 / rat
				:location (x9 / somewhere
					:location (x12 / planet))
				:mod (x16 / old)))))

# ::id 297
# ::snt I hear him at night .
(x2 / hear-01
	:ARG0 (x1 / i)
	:time (x5 / night))

# ::id 298
# ::snt You can judge this old rat .
(x2 / possible-01
	:ARG1 (x3 / judge-01
		:ARG0 (x1 / you)
		:ARG1 (x6 / rat
			:mod (x4 / this)
			:mod (x5 / old))))

# ::id 299
# ::snt From time to time you will condemn him to death .
(x7 / condemn-01
	:ARG0 (x5 / you)
	:ARG2 (x10 / die-01))

# ::id 300
# ::snt Thus his life will depend on your justice .
(x5 / depend-01
	:ARG0 (x3 / life)
	:ARG1 (x8 / justice))

# ::id 301
# ::snt But you will pardon him on each occasion ; for he must be treated thriftily .
(x1 / contrast-01)

# ::id 302
# ::snt He is the only one we have . "
(x1 / he
	:ARG0-of (x7 / have-03
		:mod (x4 / only)
		:ARG0 (x6 / we)))

# ::id 303
# ::snt " I , " replied the little prince , " do not like to condemn anyone to death .
(x13 / like-02
	:ARG0 (x2 / i)
	:ARG1 (x15 / condemn-01
		:ARG0 x2
		:ARG1-of (x5 / reply-01
			:ARG1 (x8 / prince
				:mod (x7 / little)))
		:ARG1 (x16 / anyone)
		:ARG2 (x18 / die-01)))

# ::id 304
# ::snt And now I think I will go on my way . "
(x1 / and
	:op2 (x4 / think-01
		:time (x2 / now)
		:ARG0 (x3 / i)
		:ARG1 (x7 / go-02
			:ARG0 (x5 / i)
			:manner (x10 / way))))

# ::id 305
# ::snt " No , " said the king .
(x5 / say-01
	:ARG0 (x7 / king))

# ::id 306
# ::snt But the little prince , having now completed his preparations for departure , had no wish to grieve the old monarch .
(x / xconcept
	:x (x1 / contrast-01)
	:x (x16 / wish-01
		:ARG1 (x4 / prince
			:mod (x3 / little))
		:ARG1-of (x8 / complete-01
			:time (x7 / now)
			:ARG1 (x10 / prepare-01
				:purpose (x12 / depart-01)))
		:polarity -
		:ARG1 (x18 / grieve
			:ARG1 (x21 / have-org-role-91
				:ARG2 (m / monarch)
				:mod (x20 / old)))))

# ::id 307
# ::snt " If Your Majesty wishes to be promptly obeyed , " he said , " he should be able to give me a reasonable order .
(x13 / say-01
	:ARG1 (x5 / wish-01
		:ARG0 (x4 / majesty)
		:ARG1 (x9 / obey
			:manner (x8 / prompt)))
	:ARG0 (x16 / he)
	:ARG1 (x17 / recommend-01
		:ARG1 (x19 / possible-01
			:ARG1 (x21 / give-01
				:ARG0 x16
				:ARG1 (x25 / order
					:ARG1-of (x24 / reasonable-02))))))

# ::id 308
# ::snt He should be able , for example , to order me to be gone by the end of one minute .
(x2 / recommend-01
	:ARG2 (x1 / he)
	:ARG1 (x4 / possible-01
		:ARG1 (x10 / order
			:ARG2 (x14 / go-02
				:time (x15 / by
					:op1 (x17 / end-01
						:ARG1 (x20 / temporal-quantity
							:unit (m / minute)
							:quant 1)))))))

# ::id 309
# ::snt It seems to me that conditions are favorable ... "
(x2 / seem-01
	:ARG1 (x8 / favorable
		:domain (x6 / condition)))

# ::id 310
# ::snt As the king made no answer , the little prince hesitated a moment .
(xap0 / cause-01
	:ARG1 (x11 / hesitate-01
		:ARG1 (x6 / answer-01
			:ARG0 (x3 / king)
			:polarity -)
		:ARG0 (x10 / prince
			:mod (x9 / little))
		:ARG1 (x13 / moment)))

# ::id 311
# ::snt Then , with a sigh , he took his leave .
(x5 / sigh-02
	:time (x1 / then)
	:domain (x7 / he)
	:mod (x10 / left
		:ARG1 x7))

# ::id 312
# ::snt " I made you my Ambassador , " the king called out , hastily .
(x11 / call-01
	:null_edge (x3 / make-02
		:ARG0 (x2 / i)
		:ARG1 (x6 / have-org-role-91
			:ARG2 (a / ambassador)
			:ARG0 (x4 / you)))
	:ARG0 (x10 / king)
	:manner (x14 / hasty))

# ::id 313
# ::snt He had a magnificent air of authority .
(x2 / have-03
	:ARG0 (x1 / he)
	:ARG1 (x7 / authority
		:mod (x5 / air
			:mod (x4 / magnificent))))

# ::id 314
# ::snt " The grown - ups are very strange , " the little prince said to himself , as he continued on his journey .
(x14 / say-01
	:ARG1 (x8 / strange
		:domain (x3 / grow-up-04)
		:degree (x7 / very))
	:ARG0 (x13 / prince
		:mod (x12 / little)
		:condition (x20 / continue-01
			:ARG1 (x23 / journey-01))))

# ::id 315
# ::snt Chapter 11 .
(x1 / chapter
	:null_edge 11)

# ::id 316
# ::snt The second planet was inhabited by a conceited man .
(x5 / inhabit-01
	:ARG1 (x3 / planet)
	:ARG0 (x9 / man
		:mod (x8 / conceited)))

# ::id 317
# ::snt " Ah !
(x2 / Ah)

# ::id 318
# ::snt Ah !
(x1 / Ah)

# ::id 319
# ::snt I am about to receive a visit from an admirer ! " he exclaimed from afar , when he first saw the little prince coming .
(x14 / exclaim
	:ARG0 (x1 / i
		:ARG0-of (x5 / receive-01
			:ARG1 (x7 / visit-01)
			:ARG2 (x10 / admirer)))
	:ARG0 (x13 / he)
	:ARG2 (x16 / afar)
	:time (x21 / see-01
		:ARG0 x13
		:ARG1 (x25 / come-01
			:ARG1 (x24 / prince
				:mod (x23 / little)))))

# ::id 320
# ::snt For , to conceited men , all other men are admirers .
(x11 / admirer
	:beneficiary (x5 / man
		:mod (x4 / conceit))
	:domain (x9 / man
		:mod (x7 / all)
		:mod (x8 / other)))

# ::id 321
# ::snt " Good morning , " said the little prince .
(x6 / say-01
	:ARG1 (x3 / morning
		:mod (x2 / good))
	:ARG0 (x9 / prince
		:mod (x8 / little)))

# ::id 322
# ::snt " That is a queer hat you are wearing . "
(x6 / hat
	:domain (x2 / that)
	:mod (x5 / queer)
	:ARG0-of (x9 / wear-01))

# ::id 323
# ::snt " It is a hat for salutes , " the conceited man replied .
(x13 / reply-01
	:ARG1 (x5 / hat
		:beneficiary (x7 / salute-01))
	:ARG0 (x12 / man
		:mod (x11 / conceited)))

# ::id 324
# ::snt " It is to raise in salute when people acclaim me .
(x5 / raise-01
	:location (x7 / salute-01)
	:time (x10 / acclaim))

# ::id 325
# ::snt Unfortunately , nobody at all ever passes this way . "
(x7 / pass-out-11
	:ARG0 (x3 / nobody)
	:time (x6 / ever)
	:ARG1 (x8 / this))

# ::id 326
# ::snt " Yes ? " said the little prince , who did not understand what the conceited man was talking about .
(x5 / say-01
	:ARG0 (x8 / prince
		:mod (x7 / little)
		:ARG1-of (x13 / person
			:ARG0-of (u / understand-01)
			:ARG1 (x19 / talk-01
				:ARG0 (x17 / man
					:mod (x16 / conceited))))))

# ::id 327
# ::snt " Clap your hands , one against the other , " the conceited man now directed him .
(x16 / direct-01
	:ARG1 (x2 / clap
		:ARG1 (x4 / hand)
		:direction (x7 / against
			:op1 (x9 / other)))
	:ARG0 (x14 / man
		:mod (x13 / conceited))
	:time (x15 / now))

# ::id 328
# ::snt The little prince clapped his hands .
(x4 / clap
	:ARG0 (x3 / prince
		:mod (x2 / little))
	:ARG1 (x6 / hand))

# ::id 329
# ::snt The conceited man raised his hat in a modest salute .
(x4 / raise-01
	:ARG0 (x3 / man
		:mod (x2 / conceited))
	:location (x10 / salute-01
		:mod (x9 / modest)))

# ::id 330
# ::snt " This is more entertaining than the visit to the king , " the little prince said to himself .
(x17 / say-01
	:ARG1 (x5 / entertain-01
		:ARG0 (x2 / this)
		:degree (x4 / more)
		:time (x8 / visit-01
			:ARG1 (x11 / king)))
	:ARG0 (x16 / prince
		:mod (x15 / little)))

# ::id 331
# ::snt And he began again to clap his hands , one against the other .
(x1 / and
	:op2 (x3 / begin-01
		:ARG0 (x2 / he)
		:mod (x4 / again)
		:ARG1 (x6 / clap
			:ARG0 x2
			:ARG1 (x8 / hand
				:ARG1 (x11 / against
					:op1 (x13 / other))))))

# ::id 332
# ::snt The conceited man against raised his hat in salute .
(x5 / raise-03
	:ARG0 (x3 / man
		:mod (x2 / conceited)
		:ARG0-of (x4 / against))
	:location (x9 / salute-01))

# ::id 333
# ::snt After five minutes of this exercise the little prince grew tired of the game 's monotony .
(x10 / grow-01
	:time (x1 / after
		:op1 (x6 / exercise-02
			:null_edge 5
			:mod (x5 / this)))
	:ARG1 (x9 / prince
		:mod (x8 / little))
	:manner (x11 / tire-01
		:ARG0 (x16 / monotony
			:ARG1 (x14 / game))))

# ::id 334
# ::snt " And what should one do to make the hat come down ? " he asked .
(x2 / and
	:op2 (x4 / recommend-01
		:ARG1 (x6 / do-02
			:ARG2 (x8 / make-02
				:ARG1 (x11 / come-01))))
	:op2 (x16 / ask-01
		:ARG0 (x15 / he)))

# ::id 335
# ::snt But the conceited man did not hear him .
(x1 / contrast-01
	:ARG2 (x7 / hear-01
		:ARG0 (x4 / man
			:mod (x3 / conceited))))

# ::id 336
# ::snt Conceited people never hear anything but praise .
(x / xconcept
	:x (x4 / hear-01
		:ARG0 (x1 / conceited)
		:ARG1 (x7 / praise-01
			:ARG0 x1
			:ARG1 (x5 / anything)))
	:x (x6 / contrast-01))

# ::id 337
# ::snt " Do you really admire me very much ? " he demanded of the little prince .
(x12 / demand-01
	:null_edge (x5 / admire-01
		:mod (x4 / really)
		:mod (x8 / much
			:degree (x7 / very)))
	:ARG0 (x11 / he)
	:ARG1 (x16 / prince
		:mod (x15 / little)))

# ::id 338
# ::snt " What does that mean - - ' admire ' ? "
(x5 / mean-01
	:ARG1 (x4 / that)
	:null_edge (x9 / admire-01))

# ::id 339
# ::snt " To admire mean that you regard me as the handsomest , the best - dressed , the richest , and the most intelligent man on this planet . "
(x4 / mean-01
	:ARG2 (x3 / admire-01)
	:ARG2 (x21 / and
		:domain (x6 / you)
		:op2 (x14 / good
			:degree (m / most))
		:op1 (x16 / dress-01)
		:op3 (x25 / man
			:domain x16
			:mod (x24 / person
				:ARG1-of (i / intelligent-01)
				:degree (x23 / most))
			:location (x28 / planet
				:mod (x27 / this)))))

# ::id 340
# ::snt " But you are the only man on your planet ! "
(x2 / contrast-01
	:ARG2 (x7 / man
		:domain (x3 / you)
		:mod (x6 / only)
		:location (x10 / planet)))

# ::id 341
# ::snt " Do me this kindness .
(x2 / do-02
	:ARG1 (x5 / kind-01
		:mod (x4 / this)))

# ::id 342
# ::snt Admire me just the same . "
(x1 / admire-01
	:ARG1 (x5 / same-01
		:mod (x3 / just)))

# ::id 343
# ::snt " I admire you , " said the little prince , shrugging his shoulders slightly , " but what is there in that to interest you so much ? "
(x18 / contrast-01
	:ARG1 (x7 / say-01
		:ARG1 (x3 / admire-01)
		:ARG1 (x10 / prince
			:mod (x9 / little))
		:ARG1 (x12 / shrug
			:ARG0 x10
			:ARG1 (x14 / shoulder)
			:degree (x15 / slight))
		:ARG1 (x25 / interest
			:ARG1 (x26 / you)
			:quant (x28 / much
				:degree (x27 / so)))))

# ::id 344
# ::snt And the little prince went away .
(x1 / and
	:op2 (x5 / go-02
		:ARG0 (x4 / prince
			:mod (x3 / little))
		:direction (x6 / away)))

# ::id 345
# ::snt " The grown - ups are certainly very odd , " he said to himself , as he continued on his journey .
(x13 / say-01
	:ARG1 (x9 / odd
		:domain (x3 / grow-up-04)
		:mod (x7 / certain)
		:degree (x8 / very))
	:ARG0 (x12 / he
		:condition (x19 / continue-01
			:ARG1 (x22 / journey-01))))

# ::id 346
# ::snt Chapter 12 .
(x1 / chapter
	:quant 12)

# ::id 347
# ::snt The next planet was inhabited by a tippler .
(x5 / inhabit-01
	:ARG1 (x3 / planet
		:mod (x2 / next))
	:ARG0 (x8 / tippler))

# ::id 348
# ::snt This was a very short visit , but it plunged the little prince into deep dejection .
(x8 / contrast-01
	:ARG1 (x6 / visit-01
		:domain (x1 / this)
		:mod (x5 / short
			:degree (x4 / very)))
	:ARG2 (x10 / plunge-01
		:ARG1 (x13 / prince
			:mod (x12 / little))
		:ARG2 (x16 / dejection
			:ARG1-of (x15 / deep-02))))

# ::id 349
# ::snt " What are you doing there ? " he said to the tippler , whom he found settled down in silence before a collection of empty bottles and also a collection of full bottles .
(x10 / say-01
	:ARG1 (x5 / do-02
		:ARG0 (x4 / you)
		:location (x6 / there))
	:ARG0 (x9 / he)
	:ARG1 (x17 / find-01
		:ARG1-of (x18 / settle-03
			:direction (x19 / down)
			:ARG4 (x21 / silence-01)
			:time (x22 / before
				:op1 (x28 / and
					:op1 (x24 / collect-01
						:ARG1 (x27 / volume-quantity
							:unit (b / bottle)
							:ARG1-of (x26 / empty-02)))
					:op2 (x31 / collect-01
						:ARG1 (x34 / volume-quantity
							:unit (b1 / bottle)
							:mod (x33 / full))))
				:mod (x29 / also)))))

# ::id 350
# ::snt " I am drinking , " replied the tippler , with a lugubrious air .
(x7 / reply-01
	:ARG1 (x4 / drink-01
		:ARG0 (x2 / i))
	:ARG0 (x9 / tippler)
	:manner (x14 / air
		:mod (x13 / lugubrious)))

# ::id 351
# ::snt " Why are you drinking ? " demanded the little prince .
(x8 / demand-01
	:ARG1 (x5 / drink-01
		:ARG0 (x4 / you))
	:ARG1 (x11 / prince
		:mod (x10 / little)))

# ::id 352
# ::snt " So that I may forget , " replied the tippler .
(x9 / reply-01
	:ARG1 (x6 / forget-01
		:ARG0 (x4 / i)
		:ARG1-of (x5 / possible-01))
	:ARG0 (x11 / tippler))

# ::id 353
# ::snt " Forget what ? " inquired the little prince , who already was sorry for him .
(x6 / inquire-01
	:null_edge (x2 / forget-01)
	:ARG0 (x9 / prince
		:mod (x8 / little)
		:ARG1-of (x14 / sorry-01
			:time (x12 / already))))

# ::id 354
# ::snt " Forget that I am ashamed , " the tippler confessed , hanging his head .
(x11 / confess-01
	:ARG1 (x2 / forget-01
		:ARG1 (x6 / ashamed
			:ARG1 (x4 / i)))
	:ARG0 (x10 / tippler)
	:ARG1 (x13 / hang-01
		:ARG0 x10
		:ARG1 (x15 / head)))

# ::id 355
# ::snt " Ashamed of what ? " insisted the little prince , who wanted to help him .
(x7 / insist-01
	:ARG1 (x3 / include-91)
	:ARG0 (x10 / prince
		:mod (x9 / little)
		:ARG0-of (x15 / help-01
			:ARG1-of (x13 / want-01))))

# ::id 356
# ::snt " Ashamed of drinking ! "
(x4 / drink-01
	:mod (x2 / ashamed))

# ::id 357
# ::snt The tippler brought his speech to an end , and shut himself up in an impregnable silence .
(x10 / and
	:op1 (x3 / bring-01
		:ARG0 (x2 / tippler)
		:ARG1 (x5 / speech)
		:ARG2 (x8 / end-01))
	:op2 (x11 / shut-out-02
		:ARG0 x2
		:ARG2 (x17 / silence-01
			:ARG1-of (x16 / impregnable))))

# ::id 358
# ::snt And the little prince went away , puzzled .
(x1 / and
	:op2 (x5 / go-02
		:ARG0 (x4 / prince
			:mod (x3 / little))
		:direction (x6 / away)
		:ARG1 (x8 / puzzle-01
			:ARG1 x4)))

# ::id 359
# ::snt " The grown - ups are certainly very , very odd , " he said to himself , as he continued on his journey .
(x15 / say-01
	:ARG1 (x11 / odd
		:domain (x3 / grow-up-04)
		:mod (x7 / certain)
		:degree (x8 / very)
		:degree (x10 / very))
	:ARG0 (x14 / he
		:condition (x21 / continue-01
			:ARG1 (x24 / journey-01))))

# ::id 360
# ::snt Chapter 13 .
(x / xconcept)

# ::id 361
# ::snt The fourth planet belonged to a businessman .
(x4 / belong-01
	:ARG0 (x3 / planet)
	:ARG1 (x7 / businessman))

# ::id 362
# ::snt This man was so much occupied that he did not even raise his head at the little prince 's arrival .
(x6 / occupy-01
	:ARG1 (x2 / man
		:mod (x1 / this))
	:degree (x5 / much
		:degree (x4 / so))
	:ARG1 (x12 / raise-01
		:ARG0 x2
		:mod (x11 / even)
		:ARG1 (x14 / head)
		:time (x20 / arrive-01
			:ARG1 (x18 / prince
				:mod (x17 / little)))))

# ::id 363
# ::snt " Good morning , " the little prince said to him .
(x9 / say-01
	:frequency (x3 / morning
		:mod (x2 / good))
	:ARG0 (x8 / prince
		:mod (x7 / little)))

# ::id 364
# ::snt " Your cigarette has gone out . "
(x5 / go-02
	:ARG0 (x3 / cigarette))

# ::id 365
# ::snt " Three and two make five .
(x3 / and
	:op1 3
	:null_edge 2
	:null_edge 5)

# ::id 366
# ::snt Five and seven make twelve .
(x4 / make-01
	:ARG1 (x2 / and
		:op1 5
		:null_edge 7))

# ::id 367
# ::snt Twelve and three make fifteen .
(x4 / make-01
	:ARG1 (x2 / and
		:op1 (x1 / twelve)
		:op2 3
		:quant (x5 / fifteen)))

# ::id 368
# ::snt Good morning .
(x2 / morning
	:mod (x1 / good))

# ::id 369
# ::snt FIfteen and seven make twenty - two .
(x4 / make-01
	:ARG1 (x2 / and
		:op1 (x1 / fifteen
			:null_edge 7)
		:quant (x5 / twenty
			:null_edge 2)))

# ::id 370
# ::snt Twenty - two and six make twenty - eight .
(x1 / twenty
	:null_edge (x4 / and
		:null_edge 2)
	:null_edge 6
	:null_edge 8)

# ::id 371
# ::snt I have n't time to light it again .
(x2 / have-03
	:ARG0 (x1 / i)
	:ARG1 (x4 / time
		:purpose (x6 / light-06
			:ARG1 (x7 / it)
			:mod (x8 / again))))

# ::id 372
# ::snt Twenty - six and five make thirty - one .
(x1 / twenty
	:null_edge (x4 / and
		:quant 6
		:null_edge 5)
	:null_edge 1)

# ::id 373
# ::snt Phew !
(x1 / phew)

# ::id 374
# ::snt Then that makes five - hundred - and - one - million , six - hundred - twenty - two - thousand , seven - hundred - thirty - one . "
(x8 / and
	:time (x1 / then)
	:domain (x2 / that)
	:op1 5
	:null_edge 6
	:null_edge 2
	:null_edge 7
	:null_edge 1)

# ::id 375
# ::snt " Five hundred million what ? " asked the little prince .
(x8 / ask-01
	:ARG0 (x11 / prince
		:mod (x10 / little)))

# ::id 376
# ::snt " Eh ?
(x2 / eh)

# ::id 377
# ::snt Are you still there ?
(x1 / be-02
	:null_edge (x2 / you)
	:null_edge (x3 / still))

# ::id 378
# ::snt Five - hundred - and - one million - - I can n't stop ...
(xap0 / multi-sentence
	:ARG1 5
	:snt2 (x5 / and)
	:ARG2 (x14 / stop-01
		:ARG0 (x11 / i)
		:ARG1-of (x12 / possible-01)))

# ::id 379
# ::snt I have so much to do !
(x2 / have-03
	:ARG0 (x1 / i)
	:mod (x4 / much
		:degree (x3 / so))
	:null_edge (x6 / do-02))

# ::id 380
# ::snt I am concerned with matters of consequence .
(x3 / concern-01
	:ARG0 (x1 / i)
	:ARG1 (x5 / matter
		:ARG1 (x7 / consequence)))

# ::id 381
# ::snt I do n't amuse myself with balderdash .
(x4 / amuse-01
	:ARG0 (x1 / i)
	:prep-with (x7 / balderdash))

# ::id 382
# ::snt Two and five make seven ... "
(x4 / make-01
	:ARG1 (x2 / and
		:op1 2
		:op2 5)
	:ARG1 7)

# ::id 383
# ::snt " Five - hundred - and - one million what ? " repeated the little prince , who never in his life had let go of a question once he had asked it .
(x13 / repeat-01
	:ARG1 (x6 / and
		:op1 5)
	:ARG0 (x16 / prince
		:mod (x15 / little)
		:ARG1-of (x24 / let-01
			:time (x22 / life)
			:ARG1 (x25 / go-02
				:ARG1 (x28 / question-01)
				:condition (x32 / ask-01
					:ARG0 (x30 / he))))))

# ::id 384
# ::snt The businessman raised his head .
(x3 / raise-01
	:ARG0 (x2 / businessman)
	:ARG1 (x5 / head))

# ::id 385
# ::snt " During the fifty - four years that I have inhabited this planet , I have been disturbed only three times .
(x18 / disturb-01
	:duration (x7 / temporal-quantity
		:unit (y / year)
		:quant 4
		:ARG1-of (x11 / inhabit-01
			:ARG0 (x9 / i)
			:ARG1 (x13 / planet
				:mod (x12 / this))))
	:ARG1 (x15 / i)
	:mod (x19 / only)
	:frequency 3)

# ::id 386
# ::snt The first time was twenty - two years ago , when some giddy goose fell from goodness knows where .
(x5 / date-entity
	:null_edge (x15 / fall-01
		:ARG1 (x3 / time)
		:ARG1 (x14 / goose
			:mod (x12 / some)
			:mod (x13 / giddy))
		:ARG2 (x18 / know-01
			:ARG0 (x17 / goodness))
		:time (xap0 / before
			:quant (x8 / temporal-quantity
				:unit (y / year)
				:quant 2))))

# ::id 387
# ::snt He made the most frightful noise that resounded all over the place , and I made four mistakes in my addition .
(x14 / and
	:op1 (x2 / make-02
		:ARG0 (x1 / he)
		:ARG1 (x6 / noise
			:mod (x5 / frightful
				:degree (x4 / most))
			:ARG1-of (x8 / resound
				:ARG2 (x12 / place
					:mod (x9 / all)))))
	:op2 (x18 / mistake-02
		:ARG0 (x15 / i)
		:null_edge 4))

# ::id 388
# ::snt The second time , eleven years ago , I was disturbed by an attack of rheumatism .
(x11 / disturb-01
	:frequency (x3 / time)
	:ARG1 (x9 / i)
	:ARG0 (x14 / attack-01
		:ARG0 (x16 / rheumatism))
	:time (xap0 / before
		:quant (x6 / temporal-quantity
			:unit (y / year)
			:quant (x5 / event
				:name (n / name
					:op1 "eleven")))))

# ::id 389
# ::snt I do n't get enough exercise .
(x4 / get-01
	:ARG0 (x1 / i)
	:ARG1 (x6 / exercise-02
		:quant (x5 / enough)))

# ::id 390
# ::snt I have no time for loafing .
(x2 / have-03
	:ARG0 (x1 / i)
	:polarity -
	:ARG1 (x6 / loaf))

# ::id 391
# ::snt The third time - - well , this is it !
(x3 / time
	:domain (x8 / this))

# ::id 392
# ::snt I was saying , then , five - hundred - and - one millions - - "
(x3 / say-01
	:ARG0 (x1 / i)
	:time (x5 / then)
	:ARG1 (x11 / and))

# ::id 393
# ::snt " Millions of what ? "
(x2 / millions)

# ::id 394
# ::snt The businessman suddenly realized that there was no hope of being left in peace until he answered this question .
(x4 / realize-01
	:ARG0 (x2 / businessman)
	:manner (x3 / sudden)
	:ARG1 (x9 / hopeful-03
		:polarity -
		:ARG1 (x12 / leave-17
			:ARG1 (x14 / peace)
			:time (x15 / until
				:op1 (x17 / answer-01
					:ARG0 (x16 / he)
					:ARG1 (x19 / question-01
						:ARG1 (x18 / this)))))))

# ::id 395
# ::snt " Millions of those little objects , " he said , " which one sometimes sees in the sky . "
(x2 / millions
	:ARG1 (x6 / object
		:mod (x5 / little))
	:null_edge (x16 / see-01
		:ARG0 (x10 / say-01
			:ARG0 (x9 / he))
		:ARG0 (x14 / one)
		:frequency (x15 / sometimes)
		:location (x19 / sky)))

# ::id 396
# ::snt " Flies ? "
(x2 / fly-01)

# ::id 397
# ::snt " Oh , no .
(x2 / oh
	:null_edge -)

# ::id 398
# ::snt Little glittering objects . "
(x3 / object
	:mod (x1 / little)
	:mod (x2 / glittering))

# ::id 399
# ::snt " Bees ? "
(x2 / bees)

# ::id 400
# ::snt " Oh , no .
(x2 / oh
	:null_edge -)

# ::id 401
# ::snt Little golden objects that set lazy men to idle dreaming .
(x3 / object
	:mod (x1 / little)
	:mod (x2 / gold)
	:ARG0-of (x5 / set-02
		:ARG1 (x7 / man
			:mod (x6 / lazy))
		:null_edge (x9 / idle
			:ARG2 (x10 / dream-01))))

# ::id 402
# ::snt As for me , I am concerned with matters of consequence .
(x7 / concern-01
	:ARG0 (x5 / i)
	:ARG1 (x9 / matter
		:ARG1 (x11 / consequence)))

# ::id 403
# ::snt There is no time for idle dreaming in my life . "
(x2 / be-02
	:null_edge (x6 / idle
		:polarity -
		:ARG1-of (x7 / dream-01)
		:ARG2 (x10 / life)))

# ::id 404
# ::snt " Ah !
(x2 / Ah)

# ::id 405
# ::snt You mean the stars ? "
(x2 / mean-01
	:ARG0 (x1 / you)
	:ARG2 (x4 / star))

# ::id 406
# ::snt " Yes , that 's it .
(x6 / it)

# ::id 407
# ::snt The stars . "
(x2 / star)

# ::id 408
# ::snt " And what do you do with five - hundred millions of stars ? "
(x2 / and
	:null_edge (x5 / you)
	:null_edge 5
	:op2 (x13 / star))

# ::id 409
# ::snt " Five - hundred - and - one million , six - hundred - twenty - two thousand , seven - hundred - thirty - one .
(x6 / and
	:op1 5
	:null_edge 6
	:null_edge 7
	:null_edge 1)

# ::id 410
# ::snt I am concerned with matters of consequence : I am accurate . "
(x3 / concern-01
	:ARG0 (x1 / i)
	:ARG1 (x5 / matter
		:ARG1 (x7 / consequence))
	:null_edge (x11 / accurate
		:domain (x9 / i)))

# ::id 411
# ::snt " And what do you do with these stars ? "
(x2 / and
	:op2 (x9 / star
		:ARG0 (x5 / you)))

# ::id 412
# ::snt " What do I do with them ? "
(x5 / do-02
	:ARG0 (x4 / i))

# ::id 413
# ::snt " Yes . "
(x2 / yes)

# ::id 414
# ::snt " Nothing .
(x2 / nothing)

# ::id 415
# ::snt I own them . "
(x2 / own-01
	:ARG0 (x1 / i))

# ::id 416
# ::snt " You own the stars ? "
(x3 / own-01
	:ARG0 (x2 / you)
	:ARG1 (x5 / star))

# ::id 417
# ::snt " Yes . "
(x2 / yes)

# ::id 418
# ::snt " But I have already seen a king who - - "
(x2 / contrast-01
	:ARG2 (x6 / see-01
		:ARG0 (x3 / i)
		:time (x5 / already)
		:ARG1 (x8 / king)))

# ::id 419
# ::snt " Kings do not own , they reign over .
(x8 / reign-01
	:ARG1 (x5 / own-01
		:null_edge (x2 / kings))
	:ARG0 (x7 / they))

# ::id 420
# ::snt It is a very different matter . "
(x6 / matter
	:ARG1-of (x5 / differ-02
		:degree (x4 / very)))

# ::id 421
# ::snt " And what good does it do you to own the stars ? "
(x2 / and
	:op2 (x4 / good)
	:null_edge (x10 / own-01
		:ARG0 (x8 / you)
		:ARG1 (x12 / star)))

# ::id 422
# ::snt " It does me the good of making me rich . "
(x6 / good-04
	:domain (x2 / it)
	:mod (x8 / make-01
		:ARG1 (x10 / rich)))

# ::id 423
# ::snt " And what good does it do you to be rich ? "
(x2 / and
	:op2 (x4 / good)
	:op2 (x11 / rich
		:domain (x8 / you)))

# ::id 424
# ::snt " It makes it possible for me to buy more stars , if any are ever discovered . "
(x3 / make-02
	:ARG0 (x2 / it)
	:ARG1 (x9 / buy-01
		:ARG1-of (x5 / possible-01)
		:ARG1 (x11 / star
			:quant (x10 / more))
		:ARG0 (x17 / discover-01
			:ARG1 (x14 / any)
			:time (x16 / ever))))

# ::id 425
# ::snt " This man , " the little prince said to himself , " reasons a little like my poor tippler ... "
(x9 / say-01
	:ARG0 (x3 / man
		:mod (x2 / this))
	:ARG0 (x8 / prince
		:mod (x7 / little))
	:ARG1 (x16 / little
		:null_edge (x20 / tippler
			:mod (x19 / poor))))

# ::id 426
# ::snt Nevertheless , he still had some more questions .
(x5 / have-03
	:ARG0 (x3 / he)
	:ARG1 (x8 / question-01
		:mod (x4 / still)
		:quant (x6 / some)
		:quant (x7 / more)))

# ::id 427
# ::snt " How is it possible for one to own the stars ? "
(x5 / possible-01
	:ARG1 (x9 / own-01
		:null_edge (x7 / one)
		:ARG1 (x11 / star)))

# ::id 428
# ::snt " To whom do they belong ? " the businessman retorted , peevishly .
(x11 / retort-01
	:ARG1 (x6 / belong-01)
	:ARG0 (x10 / businessman)
	:manner (x13 / peevishly))

# ::id 429
# ::snt " I do n't know .
(x5 / know-01
	:ARG0 (x2 / i))

# ::id 430
# ::snt To nobody . "
(x2 / nobody)

# ::id 431
# ::snt " Then they belong to me , because I was the first person to think of it . "
(x4 / belong-01
	:time (x2 / then)
	:ARG0 (x3 / they)
	:ARG1-of (x8 / cause-01
		:ARG0 (x13 / person
			:domain (x9 / i)
			:ARG0-of (x15 / think-01
				:ARG0 x9))))

# ::id 432
# ::snt " Is that all that is necessary ? "
(x7 / necessary
	:null_edge (x4 / all))

# ::id 433
# ::snt " Certainly .
(x2 / certain)

# ::id 434
# ::snt When you find a diamond that belongs to nobody , it is yours .
(x13 / yours
	:null_edge (x3 / find-01
		:ARG0 (x2 / you)
		:ARG1 (x5 / diamond
			:ARG0-of (x7 / belong-01
				:ARG3 (x9 / nobody)))))

# ::id 435
# ::snt When you discover an island that belongs to nobody , it is yours .
(x13 / yours
	:null_edge (x3 / discover-01
		:ARG0 (x2 / you)
		:ARG1 (x5 / island
			:ARG0-of (x7 / belong-01
				:ARG3 (x9 / nobody)))))

# ::id 436
# ::snt When you get an idea before any one else , you take out a patent on it : it is yours .
(x12 / take-01
	:time (x6 / before
		:domain (x2 / you)
		:op1 (x5 / idea)
		:op1 (x9 / else
			:mod (x7 / any)))
	:ARG0 (x11 / you)
	:ARG1 (x15 / patent-01))

# ::id 437
# ::snt So with me : I own the stars , because nobody else before me ever thought of owning them . "
(x6 / own-01
	:ARG0 (x5 / i)
	:ARG1 (x8 / star)
	:ARG1-of (x10 / cause-01
		:ARG0 (x16 / think-01
			:ARG0 (x11 / nobody
				:mod (x12 / else
					:time (x13 / before)))
			:time (x15 / ever)
			:ARG1 (x18 / own-01))))

# ::id 438
# ::snt " Yes , that is true , " said the little prince .
(x9 / say-01
	:ARG1 (x6 / true-01
		:domain (x4 / that))
	:ARG0 (x12 / prince
		:mod (x11 / little)))

# ::id 439
# ::snt " And what do you do with them ? "
(x2 / and
	:null_edge (x5 / you))

# ::id 440
# ::snt " I administer them , " replied the businessman .
(x7 / reply-01
	:ARG1 (x3 / administer-01
		:ARG0 (x2 / i))
	:ARG0 (x9 / businessman))

# ::id 441
# ::snt " I count them and recount them .
(x5 / and
	:op1 (x3 / count-04
		:ARG0 (x2 / i))
	:op2 (x6 / recount-01))

# ::id 442
# ::snt It is difficult .
(x3 / difficult)

# ::id 443
# ::snt But I am a man who is naturally interested in matters of consequence . "
(x1 / contrast-01
	:ARG2 (x5 / man
		:domain (x2 / i)
		:ARG1-of (x9 / interest-01
			:ARG1-of (x8 / natural-03)
			:ARG2 (x11 / matter
				:ARG1 (x13 / consequence)))))

# ::id 444
# ::snt The little prince was still not satisfied .
(x7 / satisfy-01
	:ARG1 (x3 / prince
		:mod (x2 / little))
	:mod (x5 / still))

# ::id 445
# ::snt " If I owned a silk scarf , " he said , " I could put it around my neck and take it away with me .
(x / xconcept
	:x (x11 / say-01
		:ARG1 (x4 / own-01
			:ARG0 (x3 / i)
			:ARG1 (x7 / scarf
				:mod (x6 / silk))))
	:x (x15 / possible-01
		:ARG1 (x16 / put-01
			:ARG0 (x14 / i)
			:ARG1 (x17 / it)
			:ARG2 (x18 / around
				:op1 (x20 / neck
					:ARG1-of (x22 / take-01))))
		:ARG1 (x21 / and)))

# ::id 446
# ::snt If I owned a flower , I could pluck that flower and take it away with me .
(x12 / and
	:op1 (x8 / possible-01
		:condition (x3 / own-01
			:ARG0 (x2 / i)
			:ARG1 (x5 / flower))
		:ARG1 (x9 / pluck-01
			:ARG0 (x7 / i)
			:ARG1 (x11 / flower)
			:ARG1 (x13 / take-01
				:ARG0 x7))))

# ::id 447
# ::snt But you can not pluck the stars from heaven ... "
(x1 / contrast-01
	:ARG2 (x5 / pluck-01
		:ARG0 (x2 / you)
		:ARG1-of (x3 / possible-01)
		:ARG1 (x7 / star
			:source (x9 / heaven))))

# ::id 448
# ::snt " No .
(x2 / no)

# ::id 449
# ::snt But I can put them in the bank . "
(x1 / contrast-01
	:ARG2 (x3 / possible-01)
	:ARG2 (x4 / put-01
		:ARG0 (x2 / i)
		:ARG2 (x8 / bank)))

# ::id 450
# ::snt " Whatever does that mean ? "
(x5 / mean-01
	:ARG2 (x2 / whatever)
	:ARG1 (x4 / that))

# ::id 451
# ::snt " That means that I write the number of my stars on a little paper .
(x3 / mean-01
	:ARG1 (x2 / that)
	:ARG2 (x6 / write-01
		:ARG0 (x5 / i)
		:ARG1 (x11 / star
			:quant (x8 / number))
		:medium (x15 / paper
			:mod (x14 / little))))

# ::id 452
# ::snt And then I put this paper in a drawer and lock it with a key . "
(x1 / and
	:op2 (x4 / put-01
		:time (x2 / then)
		:ARG0 (x3 / i)
		:ARG1 (x6 / paper
			:mod (x5 / this))
		:ARG2 (x9 / drawer)
		:ARG1 (x10 / and
			:op2 (x11 / lock-01
				:ARG1-of (x15 / key-02)))))

# ::id 453
# ::snt " And that is all ? "
(x5 / all
	:null_edge (x2 / and))

# ::id 454
# ::snt " That is enough , " said the businessman .
(x7 / say-01
	:ARG1 (x4 / enough
		:domain (x2 / that))
	:ARG0 (x9 / businessman))

# ::id 455
# ::snt " It is entertaining , " thought the little prince .
(x7 / think-01
	:ARG1 (x4 / entertain-01)
	:ARG0 (x10 / prince
		:mod (x9 / little)))

# ::id 456
# ::snt " It is rather poetic .
(x5 / poetry
	:domain (x2 / it))

# ::id 457
# ::snt But it is of no great consequence . "
(x1 / contrast-01
	:null_edge (x6 / great
		:polarity -))

# ::id 458
# ::snt On matters of consequence , the little prince had ideas which were very different from those of the grown - ups .
(x2 / matter
	:topic (x4 / consequence)
	:ARG1 (x8 / prince
		:mod (x7 / little))
	:ARG1 (x10 / idea
		:ARG1-of (x14 / differ-02
			:degree (x13 / very)
			:ARG2 (x19 / grow-up-04))))

# ::id 459
# ::snt " I myself own a flower , " he continued his conversation with the businessman , " which I water every day .
(x10 / continue-01
	:null_edge (x4 / own-01
		:ARG0 (x2 / i)
		:ARG1 (x6 / flower))
	:ARG0 (x9 / he)
	:ARG1 (x12 / converse-01
		:ARG1 (x15 / businessman)
		:mod (x20 / water
			:ARG0 (x19 / i)
			:frequency (xap0 / rate-entity-91
				:ARG3 (x22 / temporal-quantity
					:unit (d / day))))))

# ::id 460
# ::snt I own three volcanoes , which I clean out every week ( for I also clean out the one that is extinct ; one never knows ) .
(x2 / own-01
	:ARG0 (x1 / i)
	:ARG1 (x4 / volcano
		:quant 3
		:ARG1-of (x8 / clean-04
			:ARG0 (x7 / i)
			:frequency (xap0 / rate-entity-91
				:ARG4 (x11 / week)))))

# ::id 461
# ::snt It is of some use to my volcanoes , and it is of some use to my flower , that I own them .
(x10 / and
	:op1 (x5 / use-01
		:null_edge (x4 / some)
		:ARG1 (x8 / volcano))
	:op3 (x15 / use-01
		:null_edge (x14 / some)
		:ARG1 (x18 / flower
			:ARG1-of (x22 / own-01
				:ARG0 (x21 / i)))))

# ::id 462
# ::snt But you are of no use to the stars ... "
(x1 / contrast-01
	:ARG2 (x6 / use-01
		:ARG1 (x2 / you)
		:polarity -
		:ARG2 (x9 / star)))

# ::id 463
# ::snt The businessman opened his mouth , but he found nothing to say in answer .
(x7 / contrast-01
	:ARG1 (x3 / open-01
		:ARG0 (x2 / businessman)
		:ARG1 (x5 / mouth))
	:ARG2 (x9 / find-01
		:ARG0 x2
		:ARG1 (x10 / nothing
			:ARG1-of (x12 / say-01)
			:ARG2-of (x14 / answer-01))))

# ::id 464
# ::snt And the little prince went away .
(x1 / and
	:op2 (x5 / go-02
		:ARG0 (x4 / prince
			:mod (x3 / little))
		:direction (x6 / away)))

# ::id 465
# ::snt " The grown - ups are certainly altogether extraordinary , " he said simply , talking to himself as he continued on his journey .
(x13 / say-01
	:ARG1 (x9 / extraordinary
		:null_edge (x3 / grow-up-04)
		:mod (x7 / certain)
		:mod (x8 / altogether))
	:ARG0 (x12 / he)
	:mod (x14 / simple)
	:ARG1 (x16 / talk-01
		:ARG0 x12
		:condition (x21 / continue-01
			:ARG1 (x24 / journey-01))))

# ::id 466
# ::snt Chapter 14 .
(x1 / chapter
	:quant 14)

# ::id 467
# ::snt The fifth planet was very strange .
(x6 / strange
	:domain (x3 / planet)
	:degree (x5 / very))

# ::id 468
# ::snt It was the smallest of all .
(x4 / small
	:degree (m / most)
	:domain (x1 / it))

# ::id 469
# ::snt There was just enough room on it for a street lamp and a lamplighter .
(x5 / room
	:mod (x3 / just)
	:mod (x4 / enough)
	:purpose (x12 / and
		:op1 (x11 / lamp
			:mod (x10 / street))
		:op2 (x14 / lamplighter)))

# ::id 470
# ::snt The little prince was not able to reach any explanation of the use of a street lamp and a lamplighter , somewhere in the heavens , on a planet which had no people , and not one house .
(x6 / possible-01
	:ARG1 (x8 / reach-01
		:ARG0 (x3 / prince
			:mod (x2 / little))
		:ARG1 (x10 / explain-01
			:mod (x9 / any)
			:ARG1 (x13 / use-01
				:ARG1 (x18 / and
					:op1 (x17 / lamp
						:mod (x16 / street))
					:op2 (x20 / lamplighter))))
		:ARG1 (x35 / and
			:location (x22 / somewhere)
			:op1 (x25 / heaven)
			:op2 (x29 / planet
				:ARG0-of (x31 / have-03
					:polarity -))
			:op2 (x38 / house
				:ARG3 x25))))

# ::id 471
# ::snt But he said to himself , nevertheless : " It may well be that this man is absurd .
(x1 / contrast-01
	:ARG2 (x3 / say-01
		:ARG0 (x2 / he)
		:ARG1 (x11 / possible-01
			:ARG1 (x18 / absurd
				:ARG0 (x16 / man
					:mod (x15 / this))))))

# ::id 472
# ::snt But he is not so absurd as the king , the conceited man , the businessman , and the tippler .
(x / xconcept
	:x (x1 / contrast-01)
	:x (x6 / absurd
		:example (x18 / and
			:op1 (x9 / king)
			:op1 (x13 / man
				:mod (x12 / conceited))
			:op2 (x16 / businessman)
			:op2 (x20 / tippler))))

# ::id 473
# ::snt For at least his work has some meaning .
(x8 / mean-01
	:ARG1 (x5 / work-01)
	:quant (x7 / some))

# ::id 474
# ::snt When he lights his street lamp , it is as if he brought one more star to life , or one flower .
(x3 / light
	:ARG0 (x2 / he)
	:ARG1 (x6 / lamp
		:mod (x5 / street))
	:ARG1-of (x13 / bring-up-02
		:ARG1 (x16 / star
			:quant 1
			:degree (x15 / more))
		:ARG2 (x20 / or
			:op1 (x18 / life)
			:op2 (x22 / flower
				:quant 1))))

# ::id 475
# ::snt When he puts out his lamp , he sends the flower , or the star , to sleep .
(x9 / send-03
	:ARG1 (x3 / put-01
		:ARG1 (x6 / lamp))
	:ARG0 (x8 / he)
	:ARG1 (x13 / or
		:op1 (x11 / flower)
		:op2 (x15 / star)
		:op3 (x18 / sleep-01)))

# ::id 476
# ::snt That is a beautiful occupation .
(x5 / occupy-01
	:domain (x1 / that)
	:ARG1-of (x4 / beautiful-02))

# ::id 477
# ::snt And since it is beautiful , it is truly useful . "
(x / xconcept
	:x (x1 / and)
	:x (x10 / useful-05
		:condition (x5 / beautiful-02)))

# ::id 478
# ::snt When he arrived on the planet he respectfully saluted the lamplighter .
(x9 / salute-01
	:time (x3 / arrive-01
		:ARG1 (x2 / he)
		:ARG4 (x6 / planet))
	:ARG0 (x7 / he)
	:manner (x8 / respect-01)
	:ARG1 (x11 / lamplighter))

# ::id 479
# ::snt " Good morning .
(x3 / morning
	:mod (x2 / good))

# ::id 480
# ::snt Why have you just put out your lamp ? "
(x5 / put-01
	:ARG0 (x3 / you)
	:time (x4 / just)
	:ARG1 (x8 / lamp))

# ::id 481
# ::snt " Those are the orders , " replied the lamplighter .
(x8 / reply-01
	:ARG1 (x5 / order-01)
	:ARG0 (x10 / lamplighter))

# ::id 482
# ::snt " Good morning . "
(x3 / morning
	:mod (x2 / good))

# ::id 483
# ::snt " What are the orders ? "
(x5 / order-01)

# ::id 484
# ::snt " The orders are that I put out my lamp .
(x3 / order-01
	:ARG1-of (x7 / thing
		:ARG1-of (p / put-01)
		:ARG0 (x6 / i)
		:ARG1 (x10 / lamp)))

# ::id 485
# ::snt Good evening . "
(x2 / evening
	:mod (x1 / good))

# ::id 486
# ::snt And he lighted his lamp again .
(x1 / and
	:op2 (x3 / light-06
		:ARG0 (x2 / he)
		:ARG1 (x5 / lamp
			:poss x2)
		:mod (x6 / again)))

# ::id 487
# ::snt " But why have you just lighted it again ? "
(x2 / contrast-01
	:ARG2 (x7 / light-06
		:ARG0 (x5 / you)
		:mod (x6 / just)
		:ARG1 (x8 / it)
		:mod (x9 / again)))

# ::id 488
# ::snt " Those are the orders , " replied the lamplighter .
(x8 / reply-01
	:ARG1 (x5 / order-01)
	:ARG0 (x10 / lamplighter))

# ::id 489
# ::snt " I do not understand , " said the little prince .
(x8 / say-01
	:ARG1 (x5 / understand-01
		:ARG0 (x2 / i)
		:ARG0 (x11 / prince
			:mod (x10 / little)))
	:ARG0 x11)

# ::id 490
# ::snt " There is nothing to understand , " said the lamplighter .
(x9 / say-01
	:ARG1 (x6 / understand-01
		:ARG0 (x4 / nothing)
		:ARG0 (x11 / lamplighter))
	:ARG0 x11)

# ::id 491
# ::snt " Orders are orders .
(x4 / order-01
	:ARG0 (x2 / order-01))

# ::id 492
# ::snt Good morning . "
(x2 / morning
	:mod (x1 / good))

# ::id 493
# ::snt And he put out his lamp .
(x1 / and
	:op2 (x3 / put-01
		:ARG0 (x2 / he)
		:ARG1 (x6 / lamp)))

# ::id 494
# ::snt Then he mopped his forehead with a handkerchief decorated with red squares .
(x3 / mop
	:time (x1 / then)
	:ARG0 (x2 / he)
	:ARG1 (x5 / forehead)
	:ARG2 (x8 / handkerchief
		:ARG1-of (x9 / decorate-01
			:ARG2 (x12 / square
				:mod (x11 / red)))))

# ::id 495
# ::snt " I follow a terrible profession .
(x3 / follow-01
	:ARG0 (x2 / i)
	:ARG2 (x6 / profession
		:mod (x5 / terrible)))

# ::id 496
# ::snt In the old days it was reasonable .
(x7 / reasonable-02
	:time (x4 / temporal-quantity
		:unit (d / day))
	:ARG1 (x5 / it))

# ::id 497
# ::snt I put the lamp out in the morning , and in the evening I lighted it again .
(x10 / and
	:op1 (x2 / put-01
		:ARG0 (x1 / i)
		:ARG1 (x4 / lamp)
		:time (x8 / morning))
	:op2 (x15 / light-06
		:time (x13 / evening)
		:ARG0 (x14 / i)
		:mod (x17 / again)))

# ::id 498
# ::snt I had the rest of the day for relaxation and the rest of the night for sleep . "
(x4 / rest
	:ARG1 (x1 / i)
	:part-of (x7 / day
		:time-of (x9 / relax-01))
	:ARG2 (x10 / and
		:op2 (x12 / rest
			:part-of (x17 / sleep-01
				:time (x15 / night)))))

# ::id 499
# ::snt " And the orders have been changed since that time ? "
(x7 / change-01
	:ARG1 (x4 / order-01
		:null_edge (x2 / and))
	:time (x8 / since
		:op1 (x10 / time)))

# ::id 500
# ::snt " The orders have not been changed , " said the lamplighter .
(x10 / say-01
	:ARG1 (x7 / change-01)
	:ARG0 (x12 / lamplighter))

# ::id 501
# ::snt " That is the tragedy !
(x5 / tragedy
	:domain (x2 / that))

# ::id 502
# ::snt From year to year the planet has turned more rapidly and the orders have not been changed ! "
(x11 / and
	:op1 (x8 / turn-01
		:time (x2 / year
			:op1 (x4 / year))
		:ARG0 (x6 / planet)
		:manner (x10 / rapid
			:degree (x9 / more)))
	:op2 (x17 / change-01))

# ::id 503
# ::snt " Then what ? " asked the little prince .
(x6 / ask-01
	:time (x2 / then)
	:ARG0 (x9 / prince
		:mod (x8 / little)))

# ::id 504
# ::snt " Then - - the planet now makes a complete turn every minute , and I no longer have a single second for repose .
(x15 / and
	:op1 (x11 / turn-01
		:time (x2 / then)
		:ARG1 (x6 / planet)
		:time (x7 / now)
		:ARG1-of (x10 / complete-02)
		:frequency (xap0 / rate-entity-91
			:ARG3 (x13 / temporal-quantity
				:unit (m / minute))))
	:op2 (x19 / have-03
		:ARG0 x6
		:ARG0 (x16 / i)
		:polarity -
		:ARG1 (x21 / single-02
			:purpose (x24 / repose))))

# ::id 505
# ::snt Once every minute I have to light my lamp and put it out ! "
(x5 / have-03
	:null_edge (x1 / null_tag
		:op1 (x3 / temporal-quantity
			:unit (m / minute)))
	:ARG0 (x4 / i)
	:ARG1 (x10 / and
		:op1 (x7 / light
			:ARG1 (x9 / lamp))
		:op2 (x11 / put-01)))

# ::id 506
# ::snt " That is very funny !
(x5 / funny
	:domain (x2 / that)
	:degree (x4 / very))

# ::id 507
# ::snt A day lasts only one minute , here where you live ! "
(x3 / last-01
	:ARG1 (x2 / day)
	:ARG1 (x11 / live-01
		:duration (x6 / temporal-quantity
			:unit (m / minute)
			:mod (x4 / only)
			:quant 1)
		:location (x8 / here)
		:ARG0 (x10 / you)))

# ::id 508
# ::snt " It is not funny at all ! " said the lamplighter .
(x5 / funny
	:domain (x10 / say-01
		:ARG0 (x12 / lamplighter)))

# ::id 509
# ::snt " While we have been talking together a month has gone by . "
(x11 / go-02
	:ARG0 (x6 / talk-01
		:ARG0 (x3 / we)
		:mod (x7 / together)
		:time (x9 / temporal-quantity
			:unit (m / month))))

# ::id 510
# ::snt " A month ? "
(x3 / temporal-quantity
	:unit (m / month))

# ::id 511
# ::snt " Yes , a month .
(x5 / temporal-quantity
	:unit (m / month))

# ::id 512
# ::snt Thirty minutes .
(x2 / temporal-quantity
	:unit (m / minute))

# ::id 513
# ::snt Thirty days .
(x2 / temporal-quantity
	:unit (d / day))

# ::id 514
# ::snt Good evening . "
(x2 / evening
	:mod (x1 / good))

# ::id 515
# ::snt And he lighted his lamp again .
(x1 / and
	:op2 (x3 / light-06
		:ARG0 (x2 / he)
		:ARG1 (x5 / lamp
			:poss x2)
		:mod (x6 / again)))

# ::id 516
# ::snt As the little prince watched him , he felt that he loved this lamplighter who was so faithful to his orders .
(x9 / feel-01
	:time (x5 / watch-01
		:ARG0 (x4 / prince
			:mod (x3 / little)))
	:ARG0 (x8 / he)
	:ARG1 (x12 / love-01
		:ARG0 (x11 / he)
		:ARG1 (x14 / lamplighter
			:mod (x13 / this))
		:ARG0 (x18 / faithful
			:degree (x17 / so))))

# ::id 517
# ::snt He remembered the sunsets which he himself had gone to seek , in other days , merely by pulling up his chair ; and he wanted to help his friend .
(x / xconcept
	:x (x23 / and
		:op1 (x24 / and
			:op1 (x2 / remember-01
				:ARG0 (x1 / he)
				:ARG1 (x4 / sunset
					:null_edge (x11 / seek-01
						:ARG0 (x6 / he)
						:duration (x15 / temporal-quantity
							:unit (d / day)
							:mod (x14 / other))
						:manner (x19 / person
							:ARG0-of (p / pull-01)
							:ARG0 x6
							:ARG1 (x22 / chair-01)))))
			:op2 (x26 / want-01
				:ARG0 x1
				:ARG1 (x28 / help-01
					:ARG1 (x30 / have-rel-role-91
						:ARG2 (f / friend)))))))

# ::id 518
# ::snt " You know , " he said , " I can tell you a way you can rest whenever you want to ... "
(x7 / say-01
	:ARG1 (x3 / know-01
		:ARG0 (x2 / you))
	:ARG0 (x6 / he)
	:ARG1 (x11 / possible-01
		:ARG1 (x12 / tell-01
			:ARG0 (x10 / i)
			:ARG2 (x15 / way
				:manner-of (x17 / possible-01
					:ARG1 (x18 / rest-01
						:ARG1 (x16 / you))
					:condition (x21 / want-01
						:ARG0 x16
						:ARG0 (x20 / you)))))))

# ::id 519
# ::snt " I always want to rest , " said the lamplighter .
(x9 / say-01
	:ARG1 (x4 / want-01
		:ARG0 (x2 / i)
		:time (x3 / always)
		:ARG1 (x6 / rest-02))
	:ARG0 (x11 / lamplighter))

# ::id 520
# ::snt For it is possible for a man to be faithful and lazy at the same time .
(x4 / possible-01
	:ARG1 (x11 / and
		:op1 (x10 / faithful
			:ARG0 (x7 / man)
			:time (x16 / time
				:ARG1-of (x15 / same-01)))
		:op2 (x12 / lazy)))

# ::id 521
# ::snt The little prince went on with his explanation : " Your planet is so small that three strides will take you all the way around it .
(x8 / explain-01
	:ARG1 (x3 / prince
		:mod (x2 / little))
	:mod (x15 / small
		:domain (x12 / planet)
		:degree (x14 / so)
		:domain (x18 / stride-01
			:quant 3
			:ARG1 (x21 / you)
			:manner (x24 / way
				:poss x21
				:quant (x22 / all)
				:location (x25 / around)))))

# ::id 522
# ::snt To be always in the sunshine , you need only walk along rather slowly .
(x9 / need-01
	:mod (x10 / only)
	:ARG1 (x11 / walk-01
		:ARG1 (x6 / sunshine
			:time (x3 / always))
		:ARG0 (x8 / you)
		:manner (x14 / slow)))

# ::id 523
# ::snt When you want to rest , you will walk - - and the day will last as long as you like . "
(x12 / and
	:op1 (x9 / walk-01
		:null_edge (x3 / want-01
			:ARG0 (x2 / you)
			:ARG1 (x5 / rest-02))
		:ARG0 (x7 / you))
	:op2 (x16 / last-01
		:ARG1 x7
		:ARG1 (x14 / day)
		:condition (xap0 / as-long-as
			:op1 (x21 / like-01
				:ARG0 (x20 / you)))))

# ::id 524
# ::snt " That does n't do me much good , " said the lamplighter .
(x11 / say-01
	:ARG1 (x5 / do-02
		:null_edge (x2 / that)
		:ARG1 (x8 / good
			:quant (x7 / much)))
	:ARG0 (x13 / lamplighter))

# ::id 525
# ::snt " The one thing I love in life is to sleep . "
(x11 / sleep-over-05
	:ARG1 (x4 / thing
		:quant 1
		:ARG1-of (x6 / love-01
			:ARG0 (x5 / i)
			:prep-in (x8 / life))))

# ::id 526
# ::snt " Then you 're unlucky , " said the little prince .
(x8 / say-01
	:ARG1 (x5 / unlucky
		:time (x2 / then)
		:domain (x3 / you))
	:ARG0 (x11 / prince
		:mod (x10 / little)))

# ::id 527
# ::snt " I am unlucky , " said the lamplighter .
(x7 / say-01
	:ARG1 (x4 / unlucky
		:domain (x2 / i))
	:ARG0 (x9 / lamplighter))

# ::id 528
# ::snt " Good morning . "
(x3 / morning
	:mod (x2 / good))

# ::id 529
# ::snt And he put out his lamp .
(x1 / and
	:op2 (x3 / put-01
		:ARG0 (x2 / he)
		:ARG1 (x6 / lamp)))

# ::id 530
# ::snt " That man , " said the little prince to himself , as he continued farther on his journey , " that man would be scorned by all the others : by the king , by the conceited man , by the tippler , by the businessman .
(x6 / say-01
	:ARG1 (x9 / prince
		:mod (x8 / little))
	:ARG1 (x26 / scorn
		:ARG1 (x3 / man
			:mod (x2 / that))
		:condition (x15 / continue-01
			:location (x19 / journey-01))
		:ARG1 (x23 / man
			:mod (x22 / that))
		:ARG0 (x30 / other
			:quant (x28 / all))
		:ARG0 (x34 / king)
		:ARG0 (x39 / man
			:mod (x38 / conceited))
		:ARG0 (x43 / tippler)
		:ARG0 (x47 / businessman)))

# ::id 531
# ::snt Nevertheless he is the only one of them all who does not seem to me ridiculous .
(x13 / seem-01
	:ARG1 (x2 / he)
	:mod (x5 / only)
	:ARG1 (x9 / all)
	:ARG1 (x16 / ridiculous-02))

# ::id 532
# ::snt Perhaps that is because he is thinking of something else besides himself . "
(x4 / cause-01
	:ARG1 (x2 / that)
	:ARG0 (x7 / think-01
		:ARG1 (x9 / something
			:mod (x10 / else)
			:mod (x11 / besides))))

# ::id 533
# ::snt He breathed a sigh of regret , and said to himself , again : " That man is the only one of them all whom I could have made my friend .
(x8 / and
	:op1 (x2 / breathe-01
		:ARG0 (x1 / he)
		:ARG1 (x6 / regret-01
			:mod (x4 / sigh-02))
		:ARG1 (x27 / possible-01
			:ARG1 (x29 / make-02
				:mod (x24 / all)
				:ARG0 (x26 / i)
				:ARG1 (x31 / have-rel-role-91
					:ARG2 (f / friend)))))
	:op2 (x9 / say-01
		:ARG0 x1
		:mod (x13 / again)
		:ARG0 (x17 / man)
		:mod (x20 / only)))

# ::id 534
# ::snt But his planet is indeed too small .
(x / xconcept
	:x (x1 / contrast-01)
	:x (x7 / small
		:domain (x3 / planet)
		:mod (x5 / indeed)
		:degree (x6 / too)))

# ::id 535
# ::snt There is no room on it for two people ... "
(x4 / room
	:polarity -
	:quant 2)

# ::id 536
# ::snt What the little prince did not dare confess was that he was sorry most of all to leave this planet , because it was blest every day with 1440 sunsets !
(x7 / dare-01
	:ARG1 (x4 / prince
		:mod (x3 / little))
	:ARG1 (x8 / confess-01)
	:ARG1 (x13 / sorry-01
		:ARG1 (x11 / he)
		:ARG2 (x18 / leave-11
			:ARG0 x11
			:ARG1 (x15 / include-91
				:ARG3 (x14 / most))
			:ARG1 (x20 / planet
				:mod (x19 / this)))
		:ARG1-of (x22 / cause-01
			:ARG0 (xap0 / rate-entity-91
				:ARG3 (x27 / temporal-quantity
					:unit (d / day))
				:ARG1 (x30 / sunset
					:time (x29 / date-entity
						:year 1440))))))

# ::id 537
# ::snt Chapter 15 .
(x / xconcept)

# ::id 538
# ::snt The sixth planet was ten times larger than the last one .
(x7 / large
	:domain (x3 / planet)
	:mod (x6 / time)
	:mod (x10 / last))

# ::id 539
# ::snt It was inhabited by an old gentleman who wrote voluminous books .
(x3 / inhabit-01
	:ARG0 (x7 / gentleman
		:mod (x6 / old)
		:ARG1-of (x9 / write-01
			:ARG1 (x11 / book
				:ARG1-of (x10 / voluminous)))))

# ::id 540
# ::snt " Oh , look !
(x4 / look-01
	:mod (x2 / oh))

# ::id 541
# ::snt Here is an explorer ! " he exclaimed to himself when he saw the little prince coming .
(x8 / exclaim
	:ARG1 (x4 / explorer
		:location (x1 / here))
	:ARG0 (x7 / he)
	:time (x13 / see-01
		:ARG0 x7
		:ARG1 (x17 / come-01
			:ARG1 (x16 / prince
				:mod (x15 / little)))))

# ::id 542
# ::snt The little prince sat down on the table and panted a little .
(x9 / and
	:op1 (x4 / sit-01
		:ARG1 (x3 / prince
			:mod (x2 / little))
		:ARG2 (x8 / table))
	:op2 (x10 / pant
		:ARG0 x3
		:ARG1 (x12 / little)))

# ::id 543
# ::snt He had already traveled so much and so far !
(x4 / travel-01
	:ARG0 (x1 / he)
	:time (x3 / already)
	:ARG0 (x7 / and
		:degree (x5 / so)))

# ::id 544
# ::snt " Where do you come from ? " the old gentleman said to him .
(x12 / say-01
	:ARG1 (x5 / come-01
		:ARG1 (x4 / you))
	:ARG0 (x11 / gentleman
		:mod (x10 / old)))

# ::id 545
# ::snt " What is that big book ? " said the little prince .
(x9 / say-01
	:ARG0 (x6 / book
		:mod (x4 / that)
		:mod (x5 / big))
	:ARG0 (x12 / prince
		:mod (x11 / little)))

# ::id 546
# ::snt " What are you doing ? "
(x5 / do-02
	:ARG0 (x4 / you))

# ::id 547
# ::snt " I am a geographer , " the old gentleman said to him .
(x11 / say-01
	:ARG1 (x5 / geographer
		:ARG0 (x2 / i))
	:ARG0 (x10 / gentleman
		:mod (x9 / old)))

# ::id 548
# ::snt " What is a geographer ? " asked the little prince .
(x8 / ask-01
	:ARG1 (x5 / geographer)
	:ARG0 (x11 / prince
		:mod (x10 / little)))

# ::id 549
# ::snt " A geographer is a scholar who knows the location of all the seas , rivers , towns , mountains , and deserts . "
(x6 / scholar
	:domain (x3 / geographer)
	:ARG0-of (x8 / know-01
		:ARG1 (x10 / location
			:poss (x22 / and
				:op1 (x14 / sea
					:quant (x12 / all))
				:op2 (x20 / mountain
					:location (x18 / town
						:mod (x16 / river)))
				:op2 (x23 / desert)))))

# ::id 550
# ::snt " That is very interesting , " said the little prince .
(x8 / say-01
	:ARG1 (x5 / interest-01
		:domain (x2 / that)
		:degree (x4 / very))
	:ARG0 (x11 / prince
		:mod (x10 / little)))

# ::id 551
# ::snt " Here at last is a man who has a real profession ! "
(x7 / man
	:location (x2 / here)
	:ARG0-of (x9 / have-03
		:time (x4 / last)
		:ARG1 (x12 / profession
			:mod (x11 / real))))

# ::id 552
# ::snt And he cast a look around him at the planet of the geographer .
(x1 / and
	:op2 (x3 / cast-01
		:ARG0 (x2 / he)
		:ARG1 (x5 / look-01
			:ARG1 (x6 / around)
			:location (x10 / planet
				:mod (x13 / geographer)))))

# ::id 553
# ::snt It was the most magnificent and stately planet that he had ever seen .
(x8 / planet
	:domain (x1 / it)
	:null_edge (x6 / and
		:op1 (x5 / magnificent
			:degree (x4 / most))
		:op2 (x7 / stately)
		:op1 (x13 / see-01
			:ARG0 (x10 / he)
			:time (x12 / ever))))

# ::id 554
# ::snt " Your planet is very beautiful , " he said .
(x10 / say-01
	:ARG1 (x6 / beautiful-02
		:ARG0 (x3 / planet)
		:degree (x5 / very))
	:ARG0 (x9 / he))

# ::id 555
# ::snt " Has it any oceans ? "
(x2 / have-03
	:ARG1 (x5 / ocean
		:mod (x4 / any)))

# ::id 556
# ::snt " I could n't tell you , " said the geographer .
(x9 / say-01
	:ARG1 (x3 / possible-01
		:ARG1 (x5 / tell-01
			:ARG0 (x2 / i)
			:ARG2 (x6 / you)))
	:ARG0 (x11 / geographer))

# ::id 557
# ::snt " Ah ! "
(x2 / Ah)

# ::id 558
# ::snt The little prince was disappointed .
(x5 / disappoint-01
	:ARG0 (x3 / prince
		:mod (x2 / little)))

# ::id 559
# ::snt " Has it any mountains ? "
(x2 / have-03
	:ARG1 (x5 / mountain
		:mod (x4 / any)))

# ::id 560
# ::snt " I could n't tell you , " said the geographer .
(x9 / say-01
	:ARG1 (x3 / possible-01
		:ARG1 (x5 / tell-01
			:ARG0 (x2 / i)
			:ARG2 (x6 / you)))
	:ARG0 (x11 / geographer))

# ::id 561
# ::snt " And towns , and rivers , and deserts ? "
(x / xconcept
	:x (x5 / and
		:op1 (x3 / town
			:null_edge (x2 / null_tag))
		:op2 (x9 / desert))
	:x (x8 / and
		:op2 (x6 / river)))

# ::id 562
# ::snt " I could n't tell you that , either . "
(x3 / possible-01
	:ARG1 (x5 / tell-01
		:ARG0 (x2 / i)
		:ARG2 (x6 / you)
		:mod (x9 / either)))

# ::id 563
# ::snt " But you are a geographer ! "
(x2 / contrast-01
	:ARG2 (x6 / geographer
		:domain (x3 / you)))

# ::id 564
# ::snt " Exactly , " the geographer said .
(x7 / say-01
	:mod (x2 / exact)
	:ARG0 (x6 / geographer))

# ::id 565
# ::snt " But I am not an explorer .
(x2 / contrast-01
	:ARG2 (x7 / explorer
		:ARG0 (x3 / i)))

# ::id 566
# ::snt I have n't a single explorer on my planet .
(x2 / have-03
	:ARG0 (x1 / i)
	:ARG1 (x6 / explorer
		:ARG1-of (x5 / single-02)
		:location (x9 / planet)))

# ::id 567
# ::snt It is not the geographer who goes out to count the towns , the rivers , the mountains , the seas , the oceans , and the deserts .
(x5 / geographer
	:domain (x1 / it)
	:ARG1-of (x7 / go-01
		:ARG1 (x10 / count-01
			:ARG1 (x18 / mountain)
			:ARG1 (x21 / sea)
			:ARG1 (x26 / and
				:op1 (x12 / town)
				:op2 (x15 / river)
				:op2 (x24 / ocean)
				:op2 (x28 / desert)))))

# ::id 568
# ::snt The geographer is much too important to go loafing about .
(x6 / important
	:domain (x2 / geographer)
	:degree (x5 / too
		:quant (x4 / much))
	:domain (x8 / go-02
		:manner (x9 / loaf)))

# ::id 569
# ::snt He does not leave his desk .
(x4 / leave-11
	:ARG0 (x1 / he)
	:ARG1 (x6 / desk))

# ::id 570
# ::snt But he receives the explorers in his study .
(x1 / contrast-01
	:ARG2 (x3 / receive-01
		:ARG0 (x2 / he)
		:ARG1 (x5 / explorer)
		:ARG2 (x8 / study)))

# ::id 571
# ::snt He asks them questions , and he notes down what they recall of their travels .
(x6 / and
	:op1 (x2 / ask-01
		:ARG0 (x1 / he)
		:ARG1 (x4 / question-01))
	:op2 (x8 / note-01
		:ARG1 (x12 / recall-02
			:ARG1 (x15 / travels))))

# ::id 572
# ::snt And if the recollections of any one among them seem interesting to him , the geographer orders an inquiry into that explorer 's moral character . "
(x1 / and
	:op2 (x17 / order-01
		:ARG1-of (x10 / seem-01
			:ARG1 (x11 / interesting
				:domain (x4 / recollection
					:poss (x7 / one
						:mod (x6 / any)))))
		:ARG0 (x16 / geographer)
		:ARG1 (x19 / inquire-01
			:ARG1 (x25 / character
				:poss (x22 / explorer)
				:ARG1-of (x24 / moral-02)))))

# ::id 573
# ::snt " Why is that ? "
(x / xconcept)

# ::id 574
# ::snt " Because an explorer who told lies would bring disaster on the books of the geographer .
(x2 / cause-01
	:ARG1 (x9 / bring-01
		:ARG0 (x4 / explorer
			:ARG1-of (x6 / tell-01
				:ARG1 (x7 / thing
					:ARG1-of (l / lie-08))))
		:ARG1 (x10 / disaster)
		:ARG1 (x13 / book
			:ARG1 (x16 / geographer))))

# ::id 575
# ::snt So would an explorer who drank too much . "
(x4 / explorer
	:ARG1-of (x6 / drink-01
		:mod (x8 / much
			:degree (x7 / too))))

# ::id 576
# ::snt " Why is that ? " asked the little prince .
(x7 / ask-01
	:ARG0 (x10 / prince
		:mod (x9 / little)))

# ::id 577
# ::snt " Because intoxicated men see double .
(x2 / cause-01
	:ARG0 (x5 / see-01
		:ARG0 (x4 / man
			:ARG1-of (x3 / intoxicated))
		:mod (x6 / doublecross-01)))

# ::id 578
# ::snt Then the geographer would note down two mountains in a place where there was only one . "
(x5 / note-01
	:time (x1 / then)
	:ARG0 (x3 / geographer)
	:ARG1 (x8 / mountain
		:quant 2
		:location (x11 / place
			:mod (x15 / only)
			:domain (x16 / one))))

# ::id 579
# ::snt " I know some one , " said the little prince , " who would make a bad explorer . "
(x8 / say-01
	:ARG1 (x3 / know-01
		:ARG0 (x2 / i)
		:null_edge (x4 / some))
	:ARG0 (x11 / prince
		:mod (x10 / little)
		:ARG0-of (x16 / make-02
			:ARG1 (x19 / explorer
				:ARG1-of (x18 / bad-07)))))

# ::id 580
# ::snt " That is possible .
(x4 / possible-01
	:ARG1 (x2 / that))

# ::id 581
# ::snt Then , when the moral character of the explorer is shown to be good , an inquiry is ordered into his discovery . "
(x19 / order-01
	:time (x1 / then)
	:ARG1-of (x11 / show-01
		:ARG1 (x6 / character
			:ARG1-of (x5 / moral-02)
			:poss (x9 / explorer))
		:ARG1 (x14 / good))
	:ARG1 (x17 / inquire-01)
	:ARG2 (x22 / discover-01))

# ::id 582
# ::snt " One goes to see it ? "
(x3 / go-01
	:li (x2 / one)
	:ARG1 (x5 / see-01
		:ARG0 x2))

# ::id 583
# ::snt " No .
(x2 / no)

# ::id 584
# ::snt That would be too complicated .
(x5 / complicate-01
	:ARG1 (x1 / that)
	:degree (x4 / too))

# ::id 585
# ::snt But one requires the explorer to furnish proofs .
(x1 / contrast-01
	:ARG2 (x3 / require-01
		:ARG0 (x2 / one)
		:ARG1 (x5 / explorer)
		:ARG1 (x7 / furnish
			:ARG0 x2
			:ARG1 (x8 / proof))))

# ::id 586
# ::snt For example , if the discovery in question is that of a large mountain , one requires that large stones be brought back from it . "
(x17 / require-01
	:ARG0 (x6 / discover-01
		:ARG1 (x8 / question-01)
		:ARG1 (x14 / mountain
			:mod (x13 / large)))
	:ARG0 (x16 / one)
	:ARG1 (x22 / bring-01
		:ARG1 (x20 / stone
			:mod (x19 / large))
		:direction (x23 / back)))

# ::id 587
# ::snt The geographer was suddenly stirred to excitement .
(x5 / stir-up-04
	:ARG1 (x2 / geographer)
	:manner (x4 / sudden)
	:ARG2 (x7 / excitement))

# ::id 588
# ::snt " But you - - you come from far away !
(x2 / contrast-01
	:ARG2 (x3 / you)
	:ARG2 (x7 / come-01
		:ARG1 (x6 / you)
		:ARG3 (x10 / away
			:mod (x9 / far))))

# ::id 589
# ::snt You are an explorer !
(x4 / explorer
	:ARG0 (x1 / you))

# ::id 590
# ::snt You shall describe your planet to me ! "
(x3 / describe-01
	:ARG0 (x1 / you)
	:ARG1 (x5 / planet))

# ::id 591
# ::snt And , having opened his big register , the geographer sharpened his pencil .
(x1 / and
	:op2 (x11 / sharpen
		:ARG1-of (x4 / open-01
			:ARG1 (x7 / register-02
				:mod (x6 / big)))
		:ARG0 (x10 / geographer)
		:ARG1 (x13 / pencil)))

# ::id 592
# ::snt The recitals of explorers are put down first in pencil .
(x6 / put-01
	:ARG1 (x2 / recital
		:ARG0 (x4 / explorer))
	:time (x8 / first)
	:ARG2 (x10 / pencil))

# ::id 593
# ::snt One waits until the explorer has furnished proofs , before putting them down in ink .
(x2 / wait-01
	:ARG1 (x1 / one)
	:time (x3 / until
		:op1 (x7 / furnish
			:ARG0 (x5 / explorer)
			:ARG1 (x8 / proof)
			:time (x10 / before
				:op1 (x11 / put-03
					:ARG2 (x15 / ink))))))

# ::id 594
# ::snt " Well ? " said the geographer expectantly .
(x5 / say-01
	:mod (x2 / well)
	:ARG1 (x7 / geographer)
	:time (x8 / expectantly))

# ::id 595
# ::snt " Oh , where I live , " said the little prince , " it is not very interesting .
(x9 / say-01
	:time (x6 / live-01
		:ARG0 (x5 / i))
	:ARG1 (x12 / prince
		:mod (x11 / little))
	:ARG1 (x19 / interest-01
		:null_edge (x2 / oh)
		:degree (x18 / very)))

# ::id 596
# ::snt It is all so small .
(x5 / small
	:domain (x1 / it
		:quant (x3 / all))
	:degree (x4 / so))

# ::id 597
# ::snt I have three volcanoes .
(x2 / have-03
	:ARG0 (x1 / i)
	:ARG1 (x4 / volcano
		:quant 3))

# ::id 598
# ::snt Two volcanoes are active and the other is extinct .
(x5 / and
	:op1 (x4 / activity-06
		:ARG0 (x2 / volcano
			:quant 2)
		:mod (x7 / other))
	:op2 (x9 / extinct
		:ARG0 x2))

# ::id 599
# ::snt But one never knows . "
(x1 / contrast-01
	:ARG2 (x4 / know-01
		:ARG0 (x2 / one)))

# ::id 600
# ::snt " One never knows , " said the geographer .
(x7 / say-01
	:ARG1 (x4 / know-01
		:ARG0 (x2 / one))
	:ARG0 (x9 / geographer))

# ::id 601
# ::snt " I have also a flower . "
(x3 / have-03
	:ARG0 (x2 / i)
	:mod (x4 / also)
	:ARG1 (x6 / flower))

# ::id 602
# ::snt " We do not record flowers , " said the geographer .
(x9 / say-01
	:ARG1 (x5 / record
		:ARG0 (x2 / we)
		:ARG1 (x6 / flower))
	:ARG0 (x11 / geographer))

# ::id 603
# ::snt " Why is that ?
(x / xconcept)

# ::id 604
# ::snt The flower is the most beautiful thing on my planet ! "
(x7 / thing
	:domain (x2 / flower)
	:ARG1-of (x6 / beautiful-02
		:degree (x5 / most))
	:location (x10 / planet))

# ::id 605
# ::snt " We do not record them , " said the geographer , " because they are ephemeral . "
(x9 / say-01
	:ARG1 (x5 / record-01
		:ARG0 (x2 / we))
	:ARG1 (x11 / geographer)
	:ARG1 (x14 / cause-01
		:ARG0 (x17 / ephemeral)))

# ::id 606
# ::snt " What does that mean - - ' ephemeral ' ? "
(x5 / mean-01
	:ARG1 (x4 / that)
	:ARG2 (x9 / ephemeral))

# ::id 607
# ::snt " Geographies , " said the geographer , " are the books which , of all books , are most concerned with matters of consequence .
(x5 / say-01
	:ARG1 (x7 / geographer)
	:ARG1 (x12 / book
		:null_edge (x2 / geographies)
		:ARG1-of (x21 / concern-01
			:ARG1 x2
			:ARG0 (x17 / book
				:quant (x16 / all))
			:degree (x20 / most)
			:ARG1 (x23 / matter
				:ARG1 (x25 / consequence)))))

# ::id 608
# ::snt They never become old - fashioned .
(x3 / become-01
	:ARG1 (x1 / they)
	:ARG2 (x6 / fashion
		:ARG1 x1
		:null_edge (x4 / old)))

# ::id 609
# ::snt It is very rarely that a mountain changes its position .
(x8 / change-01
	:time (x4 / rare-02
		:degree (x3 / very))
	:ARG1 (x7 / mountain)
	:ARG1 (x10 / position))

# ::id 610
# ::snt It is very rarely that an ocean empties itself of its waters .
(x8 / empty-02
	:time (x4 / rare-02
		:degree (x3 / very))
	:ARG0 (x7 / ocean)
	:ARG2 (x12 / water))

# ::id 611
# ::snt We write of eternal things . "
(x2 / write-01
	:ARG0 (x1 / we)
	:ARG1 (x5 / thing
		:ARG1-of (x4 / eternal)))

# ::id 612
# ::snt " But extinct volcanoes may come to life again , " the little prince interrupted .
(x15 / interrupt-01
	:null_edge (x2 / contrast-01
		:ARG2 (x5 / possible-01
			:ARG1 (x4 / volcano
				:mod (x3 / extinct)))
		:ARG2 (x8 / life)
		:mod (x9 / again))
	:ARG0 (x14 / prince
		:mod (x13 / little)))

# ::id 613
# ::snt " What does that mean - - ' ephemeral ' ? "
(x5 / mean-01
	:ARG1 (x4 / that)
	:ARG2 (x9 / ephemeral))

# ::id 614
# ::snt " Whether volcanoes are extinct or alive , it comes to the same thing for us , " said the geographer .
(x19 / say-01
	:ARG1 (x10 / come-01
		:ARG1 (x6 / or
			:op3 (x3 / volcano)
			:op1 (x5 / extinct)
			:op2 (x7 / live-01
				:op (a / alive)
				:ARG0 x3))
		:ARG2 (x14 / thing
			:ARG1-of (x13 / same-01)))
	:ARG0 (x21 / geographer))

# ::id 615
# ::snt " The thing that matters to us is the mountain .
(x5 / matter-01
	:ARG1 (x10 / mountain))

# ::id 616
# ::snt It does not change . "
(x4 / change-01
	:ARG0 (x1 / it))

# ::id 617
# ::snt " But what does that mean - - ' ephemeral ' ? " repeated the little prince , who never in his life had let go of a question , once he had asked it .
(x14 / repeat-01
	:ARG1 (x2 / contrast-01
		:ARG2 (x6 / mean-01
			:ARG2 (x10 / ephemeral)))
	:ARG0 (x17 / prince
		:mod (x16 / little)
		:ARG1-of (x25 / let-01
			:ARG1 (x26 / go-02
				:ARG1 (x29 / question-01)
				:condition (x34 / ask-01
					:ARG0 (x32 / he))))))

# ::id 618
# ::snt " It means , ' which is in danger of speedy disappearance . ' "
(x3 / mean-01
	:ARG2 (x12 / disappear-01
		:mod (x11 / speedy)))

# ::id 619
# ::snt " Is my flower in danger of speedy disappearance ? "
(x4 / flower
	:purpose (x9 / disappear-01
		:mod (x8 / speedy)))

# ::id 620
# ::snt " Certainly it is . "
(x2 / certain)

# ::id 621
# ::snt " My flower is ephemeral , " the little prince said to himself , " and she has only four thorns to defend herself against the world .
(x16 / and
	:op1 (x11 / say-01
		:ARG1 (x5 / ephemeral
			:domain (x3 / flower))
		:ARG0 (x10 / prince
			:mod (x9 / little))
		:ARG1 (x23 / defend-01
			:ARG0 x10
			:ARG1 (x21 / thorn
				:mod (x19 / only)
				:quant 4)
			:ARG3 (x27 / world))))

# ::id 622
# ::snt And I have left her on my planet , all alone ! "
(x1 / and
	:op1 (x4 / leave-11
		:ARG0 (x2 / i)
		:location (x8 / planet
			:mod (x11 / alone
				:mod (x10 / all)))))

# ::id 623
# ::snt That was his first moment of regret .
(x5 / moment
	:domain (x1 / that)
	:mod (x7 / regret-01))

# ::id 624
# ::snt But he took courage once more .
(x1 / contrast-01
	:ARG2 (x3 / take-01
		:ARG0 (x2 / he)
		:ARG1 (x4 / courage)
		:degree (x6 / more)))

# ::id 625
# ::snt " What place would you advise me to visit now ? " he asked .
(x14 / ask-01
	:ARG1 (x6 / advise-01
		:ARG0 (x5 / you)
		:ARG2 (x9 / visit-01
			:ARG0 x5
			:time (x10 / now)))
	:ARG0 (x13 / he))

# ::id 626
# ::snt " The planet Earth , " replied the geographer .
(x7 / reply-01
	:null_edge (x4 / planet
		:name (n / name
			:op1 "Earth")
		:location (x3 / planet))
	:ARG0 (x9 / geographer))

# ::id 627
# ::snt " It has a good reputation . "
(x3 / have-03
	:ARG0 (x2 / it)
	:ARG1 (x6 / reputation
		:mod (x5 / good)))

# ::id 628
# ::snt And the little prince went away , thinking of his flower .
(x1 / and
	:op2 (x5 / go-02
		:ARG0 (x4 / prince
			:mod (x3 / little))
		:direction (x6 / away)
		:ARG1 (x8 / think-01
			:ARG1 (x11 / flower))))

# ::id 629
# ::snt Chapter 16 .
(x1 / chapter
	:null_edge 16)

# ::id 630
# ::snt So then the seventh planet was the Earth .
(x / xconcept
	:x (x5 / planet
		:time (x2 / then))
	:x (x8 / planet
		:name (n / name
			:op1 "Earth")))

# ::id 631
# ::snt The Earth is not just an ordinary planet !
(x8 / planet
	:null_edge (x2 / planet
		:name (n / name
			:op1 "Earth"))
	:mod (x5 / just)
	:mod (x7 / ordinary))

# ::id 632
# ::snt One can count , there 111 kings ( not forgetting , to be sure , the Negro kings among them ) , 7000 geographers , 900,000 businessmen , 7,500,000 tipplers , 311,000,000 conceited men - - that is to say , about 2,000,000,000 grown - ups .
(x / xconcept
	:x (x10 / forget-01
		:ARG1 (x2 / possible-01
			:ARG1 (x3 / count-01))
		:ARG1 (x7 / king
			:location (x5 / there)
			:quant (x6 / 111)
			:domain (x27 / businessman
				:quant (x26 / 900,000)))
		:null_edge (x14 / sure-02)
		:ARG1 (x18 / king
			:mod (x17 / country
				:name (n / name
					:op1 "Negro")))
		:ARG0 (x34 / man
			:mod (x33 / conceited)))
	:x (x40 / say-01
		:ARG0 x27
		:ARG0 x34
		:topic (x46 / up
			:ARG1-of (x44 / grow-03))))

# ::id 633
# ::snt To give you an idea of the size of the Earth , I will tell you that before the invention of electricity it was necessary to maintain , over the whole of the six continents , a veritable army of 462,511 lamplighters for the street lamps .
(x15 / tell-01
	:null_edge (x2 / give-01
		:ARG1 (x5 / idea
			:topic (x8 / size
				:poss (x11 / planet
					:name (n / name
						:op1 "Earth")))))
	:ARG0 (x13 / i)
	:ARG2 (x16 / you)
	:ARG1 (xap0 / need-01
		:time (x18 / before
			:op1 (x20 / invent-01
				:ARG1 (x22 / electricity)))
		:ARG2 (x27 / maintain-01
			:null_edge (x35 / continent
				:quant 6)
			:ARG1 (x39 / army
				:mod (x38 / veritable)
				:consist-of (x46 / lamp
					:mod (x45 / street))))))

# ::id 634
# ::snt Seen from a slight distance , that would make a splendid spectacle .
(x9 / make-02
	:purpose (x1 / see-01
		:ARG2 (x5 / distance-01
			:degree (x4 / slight)))
	:ARG1 (x12 / spectacle))

# ::id 635
# ::snt The movements of this army would be regulated like those of the ballet in the opera .
(x8 / regulate-01
	:ARG1 (x2 / move-01
		:ARG1 (x5 / army
			:mod (x4 / this)))
	:ARG1 (x13 / ballet
		:location (x16 / opera)))

# ::id 636
# ::snt First would come the turn of the lamplighters of New Zealand and Australia .
(x5 / turn-01
	:ARG1 (x12 / and
		:op1 (x10 / country
			:name (n / name
				:op1 "New"
				:op2 "Zealand"))
		:op2 (x13 / country
			:name (n1 / name
				:op1 "Australia"))))

# ::id 637
# ::snt Having set their lamps alight , these would go off to sleep .
(x12 / sleep-over-05
	:ARG1 (x2 / set-01
		:ARG1 (x4 / lamp
			:ARG1-of (x5 / alight))))

# ::id 638
# ::snt Next , the lamplighters of China and Siberia would enter for their steps in the dance , and then they too would be waved back into the wings .
(x18 / and
	:op1 (x10 / enter-01
		:time (x1 / next)
		:ARG1 (x7 / and
			:op1 (x6 / country
				:name (n / name
					:op1 "China")))
		:ARG1-of (x13 / step-01))
	:op2 (x16 / dance-01)
	:op2 (x24 / wave-01
		:degree (x21 / too)
		:ARG2 (x28 / wing)))

# ::id 639
# ::snt After that would come the turn of the lamplighters of Russia and the Indies ; then those of Africa and Europe , then those of South America ; then those of South America ; then those of North America .
(x / xconcept
	:x (x34 / and
		:op1 (x6 / turn-01
			:time (x1 / after)
			:ARG1 (x12 / and
				:op1 (x11 / country
					:name (n / name
						:op1 "Russia"))
				:op2 (x14 / country
					:name (n1 / name
						:op1 "Indies")))))
	:x (x15 / and
		:op5 (x39 / country
			:name (n2 / name
				:op1 "America")
			:null_edge (x38 / null_tag)))
	:x (x28 / and
		:op1 (x20 / and
			:op1 (x19 / continent
				:name (n3 / name
					:op1 "Africa"))
			:op2 (x21 / continent
				:name (n4 / name
					:op1 "Europe"))
			:null_edge (x27 / country
				:name (n5 / name
					:op1 "America")
				:null_edge (x26 / null_tag)
				:null_edge (x33 / country
					:name (n6 / name
						:op1 "America")
					:null_edge (x32 / null_tag))))))

# ::id 640
# ::snt And never would they make a mistake in the order of their entry upon the stage .
(x1 / and
	:op2 (x7 / mistake-02
		:ARG1 (x4 / they)
		:ARG1 (x10 / order
			:mod (x16 / stage))))

# ::id 641
# ::snt It would be magnificent .
(x4 / magnificent
	:domain (x1 / it))

# ::id 642
# ::snt Only the man who was in charge of the single lamp at the North Pole , and his colleague who was responsible for the single lamp at the South Pole - - only these two would live free from toil and care : they would be busy twice a year .
(x17 / and
	:op1 (x3 / man
		:mod (x1 / only)
		:ARG0-of (x37 / live-01
			:null_edge (x33 / only
				:null_edge 2)
			:ARG1-of (x38 / free-03
				:ARG2 (x41 / and
					:op1 (x40 / toil)
					:op2 (x42 / care-01)))
			:null_edge (x47 / busy
				:time (x50 / year))))
	:op2 (x7 / charge-05
		:ARG2 (x11 / lamp
			:ARG1-of (x10 / single-02)
			:location (x15 / event
				:name (n / name
					:op1 "Pole")
				:null_edge (x14 / null_tag))))
	:op2 (x19 / colleague
		:ARG0-of (x22 / responsible-01
			:ARG1 (x26 / lamp
				:ARG1-of (x25 / single-02)
				:location (x30 / pole
					:null_edge (x29 / null_tag))))))

# ::id 643
# ::snt Chapter 17 .
(x1 / chapter
	:mod 17)

# ::id 644
# ::snt When one wishes to play the wit , he sometimes wanders a little from the truth .
(x13 / little
	:condition (x3 / wish-01
		:ARG0 (x2 / one)
		:ARG1 (x5 / play-01
			:ARG0 x2
			:ARG1 (x7 / wit))
		:ARG0 (x9 / he))
	:domain x9
	:frequency (x10 / sometimes)
	:null_edge (x11 / wander-01)
	:source (x16 / truth))

# ::id 645
# ::snt I have not been altogether honest in what I have told you about the lamplighters .
(x6 / honest
	:domain (x1 / i)
	:mod (x5 / altogether)
	:ARG2 (x11 / tell-01
		:ARG0 (x9 / i)
		:ARG2 (x12 / you)
		:ARG2 (x15 / lamplighter)))

# ::id 646
# ::snt And I realize that I run the risk of giving a false idea of our planet to those who do not know it .
(x1 / and
	:op2 (x3 / realize-01
		:ARG0 (x2 / i)
		:ARG1 (x6 / run-04
			:ARG0 (x5 / i)
			:ARG1 (x8 / risk-01
				:ARG2 (x10 / give-01
					:ARG1 (x13 / idea
						:mod (x12 / false)
						:mod (x16 / planet)))))))

# ::id 647
# ::snt Men occupy a very small place upon the Earth .
(x2 / occupy-01
	:ARG0 (x1 / man)
	:ARG1 (x6 / place
		:mod (x5 / small
			:degree (x4 / very))
		:location (x9 / planet
			:name (n / name
				:op1 "Earth"))))

# ::id 648
# ::snt If the two billion inhabitants who people its surface were all to stand upright and somewhat crowded together , as they do for some big public assembly , they could easily be put into one public square twenty miles long and twenty miles wide .
(x30 / possible-01
	:ARG1 (x33 / put-01
		:purpose (x15 / and
			:op1 (x13 / stand-01
				:ARG1 (x5 / person
					:ARG0-of (i / inhabit-01)
					:ARG1 (x9 / surface)
					:quant (x11 / all))
				:ARG1 (x14 / upright
					:ARG1 x5))
			:op2 (x17 / crowd-01
				:ARG1 x5
				:ARG1 x14
				:degree (x16 / somewhat)
				:mod (x18 / together)
				:ARG0 (x27 / assembly
					:mod (x24 / some)
					:mod (x25 / big)
					:mod (x26 / public))))
		:ARG1 (x29 / they)
		:ARG2 (x37 / square
			:quant 1
			:mod (x36 / public)
			:ARG1 (x41 / and
				:ARG1-of (x40 / long-03)
				:op2 (x44 / wide-02
					:compared-to (xap1 / multiple
						:quant (x43 / distance-quantity
							:unit (m1 / mile))))
				:quant (xap0 / multiple
					:op1 (x39 / distance-quantity
						:unit (m / mile)))))))

# ::id 649
# ::snt All humanity could be piled up on a small Pacific islet .
(x3 / possible-01
	:ARG1 (x5 / pile-up-02
		:ARG1 (x2 / humanity
			:quant (x1 / all))
		:location (x11 / islet
			:mod (x9 / small))))

# ::id 650
# ::snt The grown - ups , to be sure , will not believe you when you tell them that .
(x12 / believe-01
	:concession (x2 / grow-up-04
		:ARG0-of (x8 / sure-02))
	:ARG1 (x13 / you)
	:time (x16 / tell-01
		:ARG2 x13
		:ARG0 (x15 / you)))

# ::id 651
# ::snt They imagine that they fill a great deal of space .
(x2 / imagine-01
	:ARG0 (x1 / they)
	:ARG1 (x5 / fill-in-05
		:ARG1 (x8 / deal-01
			:mod (x7 / great)
			:mod (x10 / space))))

# ::id 652
# ::snt They fancy themselves as important as the baobabs .
(x2 / fancy-02
	:ARG0 (x1 / they)
	:null_edge (x5 / important
		:compared-to (x8 / baobab)))

# ::id 653
# ::snt You should advise them , then , to make their own calculations .
(x2 / recommend-01
	:ARG1 (x3 / advise-01
		:ARG0 (x1 / you)
		:ARG2 (x9 / make-02
			:ARG1 (x12 / calculate-01))))

# ::id 654
# ::snt They adore figures , and that will please them .
(x5 / and
	:op1 (x2 / adore-01
		:ARG0 (x1 / they)
		:ARG1 (x3 / figure)))

# ::id 655
# ::snt But do not waste your time on this extra task .
(x1 / contrast-01
	:ARG2 (x4 / waste-01
		:ARG1 (x6 / time)
		:ARG1 (x10 / task-01
			:mod (x8 / this)
			:mod (x9 / extra))))

# ::id 656
# ::snt It is unnecessary .
(x3 / unnecessary
	:ARG0 (x1 / it))

# ::id 657
# ::snt You have , I know , confidence in me .
(x2 / have-03
	:ARG0 (x1 / you)
	:null_edge (x5 / know-01
		:ARG0 (x4 / i))
	:ARG1 (x7 / confident-01))

# ::id 658
# ::snt When the little prince arrived on the Earth , he was very much surprised not to see any people .
(x14 / surprise-01
	:time (x5 / arrive-01
		:ARG1 (x4 / prince
			:mod (x3 / little))
		:ARG4 (x8 / planet
			:name (n / name
				:op1 "Earth")))
	:ARG1 (x10 / he)
	:degree (x13 / much
		:degree (x12 / very))
	:ARG0 (x17 / see-01
		:manner (x18 / any)))

# ::id 659
# ::snt He was beginning to be afraid he had come to the wrong planet , when a coil of gold , the color of the moonlight , flashed across the sand .
(x3 / begin-01
	:ARG0 (x1 / he)
	:ARG1 (x6 / fear-01
		:op (a / afraid)
		:ARG1 (x9 / come-01
			:ARG1 (x7 / he)
			:ARG3 (x13 / planet
				:mod (x12 / wrong)
				:time-of (x27 / flash-back-03
					:ARG0 (x17 / coil
						:consist-of (x19 / gold)
						:mod (x22 / colour
							:mod (x25 / moonlight-01)))
					:path (x28 / across
						:op1 (x30 / sand-01)))))))

# ::id 660
# ::snt " Good evening , " said the little prince courteously .
(x6 / say-01
	:ARG1 (x3 / evening
		:mod (x2 / good))
	:ARG1 (x9 / prince
		:mod (x8 / little))
	:ARG1 (x10 / courteously))

# ::id 661
# ::snt " Good evening , " said the snake .
(x6 / say-01
	:ARG1 (x3 / evening
		:mod (x2 / good))
	:ARG1 (x8 / snake))

# ::id 662
# ::snt " What planet is this on which I have come down ? " asked the little prince .
(x14 / ask-01
	:ARG1 (x3 / planet
		:null_edge (x10 / come-01
			:ARG1 (x8 / i)))
	:ARG0 (x17 / prince
		:mod (x16 / little)))

# ::id 663
# ::snt " This is the Earth ; this is Africa , " the snake answered .
(x / xconcept
	:x (x6 / and
		:op2 (x14 / answer-01
			:ARG2 (x5 / planet
				:name (n / name
					:op1 "Earth")
				:domain (x2 / this)
				:null_edge (x9 / continent
					:name (n1 / name
						:op1 "Africa")
					:domain (x7 / this)))
			:ARG0 (x13 / snake))))

# ::id 664
# ::snt " Ah !
(x2 / Ah)

# ::id 665
# ::snt Then there are no people on the Earth ? "
(x1 / then
	:null_edge (x8 / planet
		:name (n / name
			:op1 "Earth")
		:polarity -))

# ::id 666
# ::snt " This is the desert .
(x5 / desert
	:domain (x2 / this))

# ::id 667
# ::snt There are no people in the desert .
(x4 / people
	:polarity -
	:location (x7 / desert))

# ::id 668
# ::snt The Earth is large , " said the snake .
(x7 / say-01
	:ARG1 (x4 / large
		:domain (x2 / planet
			:name (n / name
				:op1 "Earth")))
	:ARG0 (x9 / snake))

# ::id 669
# ::snt The little prince sat down on a stone , and raised his eyes toward the sky .
(x10 / and
	:op1 (x4 / sit-01
		:ARG1 (x3 / prince
			:mod (x2 / little))
		:ARG2 (x8 / stone))
	:op2 (x11 / raise-01
		:ARG0 x3
		:ARG1 (x13 / eye)
		:location (x16 / sky)))

# ::id 670
# ::snt " I wonder , " he said , " whether the stars are set alight in heaven so that one day each one of us may find his own again ...
(x7 / say-01
	:ARG1 (x3 / wonder-01
		:ARG0 (x2 / i)
		:ARG1 (x12 / star
			:domain (x17 / heaven
				:ARG1 (x26 / possible-01
					:ARG1 (x27 / find-01
						:time (x21 / day
							:quant 1
							:null_edge (x22 / each
								:null_edge 1)
							:ARG1-of (x24 / include-91))
						:mod (x30 / again)))))))

# ::id 671
# ::snt Look at my planet .
(x1 / look-01
	:location (x4 / planet))

# ::id 672
# ::snt It is right there above us .
(x5 / above
	:op1 (x4 / there
		:mod (x3 / right)))

# ::id 673
# ::snt But how far away it is ! "
(x1 / contrast-01
	:ARG2 (x4 / away
		:mod (x3 / far)))

# ::id 674
# ::snt " It is beautiful , " the snake said .
(x9 / say-01
	:ARG1 (x4 / beautiful-02)
	:ARG0 (x8 / snake))

# ::id 675
# ::snt " What has brought you here ? "
(x4 / bring-01
	:ARG1 (x5 / you)
	:location (x6 / here))

# ::id 676
# ::snt " I have been having some trouble with a flower , " said the little prince .
(x13 / say-01
	:ARG1 (x10 / flower
		:ARG0 (x2 / i)
		:ARG1-of (x7 / trouble
			:quant (x6 / some)))
	:ARG0 (x16 / prince
		:mod (x15 / little)))

# ::id 677
# ::snt " Ah ! " said the snake .
(x5 / say-01
	:ARG1 (x2 / Ah)
	:ARG0 (x7 / snake))

# ::id 678
# ::snt And they were both silent .
(x1 / and
	:mod (x4 / both)
	:op2 (x5 / silent
		:domain (x2 / they)))

# ::id 679
# ::snt " Where are the men ? " the little prince at last took up the conversation again .
(x10 / prince
	:domain (x5 / man)
	:mod (x9 / little)
	:location (x12 / last)
	:time (x16 / converse-01)
	:mod (x17 / again))

# ::id 680
# ::snt " It is a little lonely in the desert ... "
(x6 / lonely
	:domain (x2 / it)
	:degree (x5 / little)
	:location (x9 / desert))

# ::id 681
# ::snt " It is also lonely among men , " the snake said .
(x12 / say-01
	:ARG1 (x5 / lonely
		:mod (x4 / also)
		:ARG2 (x7 / man))
	:ARG0 (x11 / snake))

# ::id 682
# ::snt The little prince gazed at him for a long time .
(x4 / gaze-01
	:ARG0 (x3 / prince
		:mod (x2 / little))
	:ARG1-of (x9 / long-03))

# ::id 683
# ::snt " You are a funny animal , " he said at last .
(x10 / say-01
	:ARG1 (x6 / animal
		:ARG0 (x2 / you)
		:mod (x5 / funny))
	:ARG0 (x9 / he)
	:time (x12 / last))

# ::id 684
# ::snt " You are no thicker than a finger ... "
(x5 / thick-03
	:ARG1 (x2 / you)
	:polarity -
	:compared-to (x8 / finger))

# ::id 685
# ::snt " But I am more powerful than the finger of a king , " said the snake .
(x15 / say-01
	:ARG1 (x2 / contrast-01
		:ARG2 (x6 / powerful-02
			:ARG1 (x3 / i)
			:degree (x5 / more)
			:compared-to (x9 / finger
				:ARG2 (x12 / king))))
	:ARG0 (x17 / snake))

# ::id 686
# ::snt The little prince smiled .
(x4 / smile-01
	:ARG1 (x3 / prince
		:mod (x2 / little)))

# ::id 687
# ::snt " You are not very powerful .
(x6 / powerful-02
	:ARG1 (x2 / you)
	:degree (x5 / very))

# ::id 688
# ::snt You have n't even any feet .
(x6 / distance-quantity
	:unit (f / foot)
	:ARG0 (x1 / you)
	:mod (x4 / even)
	:mod (x5 / any))

# ::id 689
# ::snt You can not even travel ... "
(x2 / possible-01
	:ARG1 (x5 / travel-01
		:ARG0 (x1 / you)
		:mod (x4 / even-as)))

# ::id 690
# ::snt " I can carry you farther than any ship could take you , " said the snake .
(x15 / say-01
	:ARG1 (x3 / possible-01
		:ARG1 (x4 / carry-out-03
			:ARG0 (x2 / i)
			:ARG1 (x5 / you)
			:null_edge (x6 / null_tag
				:null_edge (x10 / possible-01
					:ARG1 (x9 / ship
						:mod (x8 / any))
					:ARG1 (x12 / you)))))
	:ARG0 (x17 / snake))

# ::id 691
# ::snt He twined himself around the little prince 's ankle , like a golden bracelet .
(x2 / twine
	:ARG0 (x1 / he)
	:location (x4 / around
		:op1 (x9 / ankle
			:poss (x7 / prince
				:mod (x6 / little))))
	:null_edge (x14 / bracelet
		:mod (x13 / gold)))

# ::id 692
# ::snt " Whomever I touch , I send back to the earth from whence he came , " the snake spoke again .
(x20 / speak-01
	:ARG1 (x4 / touch-01
		:ARG0 (x2 / whomever)
		:ARG0 (x3 / i)
		:null_edge (x7 / send-03
			:ARG0 (x6 / i)
			:ARG4 (x11 / earth)
			:source (x13 / whence
				:ARG1-of (x15 / come-out-09
					:ARG1 (x14 / he)))))
	:ARG0 (x19 / snake)
	:mod (x21 / again))

# ::id 693
# ::snt " But you are innocent and true , and you come from a star ... "
(x2 / contrast-01
	:ARG2 (x5 / innocent-01
		:ARG1 (x3 / you))
	:ARG2 (x6 / and)
	:ARG2 (x9 / and
		:op2 (x7 / true))
	:ARG2 (x11 / come-01
		:ARG1 x3
		:ARG1 (x10 / you)
		:ARG3 (x14 / star)))

# ::id 694
# ::snt The little prince made no reply .
(x4 / make-02
	:ARG0 (x3 / prince
		:mod (x2 / little))
	:ARG1 (x6 / reply-01
		:polarity -))

# ::id 695
# ::snt " You move me to pity - - you are so weak on this Earth made of granite , " the snake said .
(x23 / say-01
	:ARG1 (x3 / move-01
		:ARG1 (x2 / you)
		:ARG2 (x6 / pity
			:ARG0 x2)
		:ARG2 (x12 / weak
			:ARG1 (x9 / you)
			:compared-to (x15 / planet
				:name (n / name
					:op1 "Earth")
				:mod (x14 / this)
				:ARG1-of (x16 / make-01
					:ARG1 (x18 / granite)))))
	:ARG0 (x22 / snake))

# ::id 696
# ::snt " I can help you , some day , if you grow too homesick for your own planet .
(x3 / possible-01
	:ARG1 (x4 / help-01
		:ARG0 (x2 / i)
		:ARG2 (x5 / you)
		:time (x8 / day
			:quant (x7 / some))
		:condition (x12 / grow-01
			:ARG1 (x11 / you)
			:ARG1 (x14 / homesick
				:degree (x13 / too
					:beneficiary (x18 / planet))))))

# ::id 697
# ::snt I can - - "
(x2 / possible-01
	:null_edge (x1 / i))

# ::id 698
# ::snt " Oh !
(x2 / oh)

# ::id 699
# ::snt I understand you very well , " said the little prince .
(x8 / say-01
	:ARG1 (x2 / understand-01
		:ARG0 (x1 / i)
		:ARG1 (x3 / you)
		:mod (x5 / well
			:degree (x4 / very)))
	:ARG0 (x11 / prince
		:mod (x10 / little)))

# ::id 700
# ::snt " But why do you always speak in riddles ? "
(x2 / contrast-01
	:ARG2 (x7 / speak-01
		:ARG0 (x5 / you)
		:time (x6 / always)
		:manner (x9 / riddle)))

# ::id 701
# ::snt " I solve them all , " said the snake .
(x8 / say-01
	:ARG1 (x3 / solve-01
		:ARG0 (x2 / i
			:quant (x5 / all)))
	:ARG0 (x10 / snake))

# ::id 702
# ::snt And they were both silent .
(x1 / and
	:mod (x4 / both)
	:op2 (x5 / silent
		:domain (x2 / they)))

# ::id 703
# ::snt Chapter 18 .
(x1 / chapter
	:null_edge 18)

# ::id 704
# ::snt The little prince crossed the desert and met with only one flower .
(x7 / and
	:op1 (x4 / cross-02
		:ARG0 (x3 / prince
			:mod (x2 / little))
		:ARG1 (x6 / desert))
	:op2 (x8 / meet-02
		:ARG0 x3
		:ARG1 (x12 / flower
			:mod (x10 / only)
			:quant 1)))

# ::id 705
# ::snt It was a flower with three petals , a flower of no account at all .
(x4 / flower
	:domain (x1 / it)
	:ARG2 (x7 / petal
		:quant 3
		:ARG0-of (x10 / flower
			:poss (x13 / account
				:polarity -))))

# ::id 706
# ::snt " Good morning , " said the little prince .
(x6 / say-01
	:ARG1 (x3 / morning
		:mod (x2 / good))
	:ARG0 (x9 / prince
		:mod (x8 / little)))

# ::id 707
# ::snt " Good morning , " said the flower .
(x6 / say-01
	:ARG1 (x3 / morning
		:mod (x2 / good))
	:ARG0 (x8 / flower))

# ::id 708
# ::snt " Where are the men ? " the little prince asked , politely .
(x11 / ask-01
	:ARG1 (x5 / man)
	:ARG0 (x10 / prince
		:mod (x9 / little))
	:manner (x13 / politely))

# ::id 709
# ::snt The flower had once seen a caravan passing .
(x5 / see-01
	:ARG1 (x2 / flower)
	:time (x4 / once)
	:ARG1 (x8 / pass-20
		:mod (x7 / caravan)))

# ::id 710
# ::snt " Men ? " she echoed .
(x6 / echo-01
	:ARG0 (x2 / man)
	:ARG0 (x5 / she))

# ::id 711
# ::snt " I think there are six or seven of them in existence .
(x3 / think-01
	:ARG0 (x2 / i)
	:ARG1 (x7 / or
		:op1 6
		:op2 7
		:op2 (x9 / include-91)
		:op1 (x12 / exist-01)))

# ::id 712
# ::snt I saw them , several years ago .
(x2 / see-01
	:ARG0 (x1 / i)
	:null_edge (x5 / several
		:op1 (x6 / temporal-quantity
			:unit (y / year))))

# ::id 713
# ::snt But one never knows where to find them .
(x1 / contrast-01
	:ARG2 (x4 / know-01
		:ARG0 (x2 / one)
		:ARG1 (x7 / find-01
			:ARG0 x2)))

# ::id 714
# ::snt The wind blows them away .
(x3 / blow-up-06
	:ARG0 (x2 / wind)
	:direction (x5 / away))

# ::id 715
# ::snt They have no roots , and that makes their life very difficult . "
(x6 / and
	:op1 (x2 / have-03
		:ARG0 (x1 / they)
		:ARG1 (x4 / root
			:polarity -))
	:op2 (x8 / make-02
		:ARG1 (x12 / difficult
			:domain (x10 / life)
			:degree (x11 / very))))

# ::id 716
# ::snt " Goodbye , " said the little prince .
(x5 / say-01
	:ARG1 (x2 / goodbye)
	:ARG1 (x8 / prince
		:mod (x7 / little)))

# ::id 717
# ::snt " Goodbye , " said the flower .
(x5 / say-01
	:ARG1 (x2 / goodbye)
	:ARG1 (x7 / flower))

# ::id 718
# ::snt Chapter 19 .
(x1 / chapter
	:null_edge 19)

# ::id 719
# ::snt After that , the little prince climbed a high mountain .
(x7 / climb-01
	:time (x1 / after)
	:ARG0 (x6 / prince
		:mod (x5 / little))
	:ARG1 (x10 / mountain
		:ARG1-of (x9 / high-02)))

# ::id 720
# ::snt The only mountains he had ever known were the three volcanoes , which came up to his knees .
(x11 / volcano
	:domain (x3 / mountain
		:mod (x2 / only)
		:ARG1-of (x7 / know-02
			:time (x6 / ever)))
	:quant 3
	:ARG1-of (x14 / come-out-09
		:ARG2 (x18 / kneel-01)))

# ::id 721
# ::snt And he used the extinct volcano as a footstool .
(x1 / and
	:op2 (x3 / use-01
		:ARG0 (x2 / he)
		:ARG1 (x6 / volcano
			:mod (x5 / extinct))
		:ARG2 (x9 / footstool)))

# ::id 722
# ::snt " From a mountain as high as this one , " he said to himself , " I shall be able to see the whole planet at one glance , and all the people ... "
(x13 / say-01
	:ARG1 (x21 / possible-01
		:null_edge (x4 / mountain
			:ARG1-of (x6 / high-02
				:null_edge (x9 / one
					:mod (x8 / this))))
		:ARG1 (x23 / see-01
			:ARG0 (x18 / i)
			:ARG1 (x26 / planet
				:mod (x25 / whole))
			:ARG1 (x31 / and
				:op1 (x29 / glance-01
					:quant 1
					:mod (x32 / all))))))

# ::id 723
# ::snt But he saw nothing , save peaks of rock that were sharpened like needles .
(x1 / contrast-01
	:ARG2 (x3 / see-01
		:ARG0 (x2 / he)
		:ARG1 (x4 / nothing
			:ARG1-of (x6 / save-01
				:ARG1 (x7 / peak-01
					:ARG1 (x9 / rock)
					:ARG1-of (x12 / sharpen
						:ARG2 (x14 / needle)))))))

# ::id 724
# ::snt " Good morning , " he said courteously .
(x7 / say-01
	:frequency (x3 / morning
		:mod (x2 / good))
	:ARG0 (x6 / he)
	:manner (x8 / courteously))

# ::id 725
# ::snt " Good morning - - Good morning - - Good morning , " answered the echo .
(x14 / answer-01
	:ARG2 (x11 / morning
		:mod (x3 / morning
			:mod (x2 / good))
		:mod (x7 / morning
			:mod (x6 / good))
		:mod (x10 / good))
	:ARG1 (x16 / echo-01))

# ::id 726
# ::snt " Who are you ? " said the little prince .
(x7 / say-01
	:ARG0 (x4 / you)
	:ARG0 (x10 / prince
		:mod (x9 / little)))

# ::id 727
# ::snt " Who are you - - Who are you - - Who are you ? " answered the echo .
(x17 / answer-01
	:ARG1 (x4 / you)
	:ARG1 (x19 / echo-01))

# ::id 728
# ::snt " Be my friends .
(xap0 / person
	:ARG0-of (x4 / have-rel-role-91
		:ARG2 (f / friend)))

# ::id 729
# ::snt I am all alone , " he said .
(x8 / say-01
	:ARG0 (x1 / i
		:null_edge (x3 / all))
	:ARG0 (x7 / he))

# ::id 730
# ::snt " I am all alone - - all alone - - all alone , " answered the echo .
(x16 / answer-01
	:ARG1 (x5 / alone
		:ARG0 (x2 / i)
		:mod (x4 / all)
		:null_edge (x9 / alone
			:mod (x8 / all)
			:location (x13 / alone
				:degree (x12 / all))))
	:ARG1 (x18 / echo-01))

# ::id 731
# ::snt " What a queer planet ! " he thought .
(x9 / think-01
	:ARG1 (x4 / queer
		:domain (x5 / planet))
	:ARG0 (x8 / he))

# ::id 732
# ::snt " It is altogether dry , and altogether pointed , and altogether harsh and forbidding .
(x11 / and
	:op2 (x7 / and
		:op1 (x5 / dry-08
			:mod (x4 / altogether))
		:op1 (x13 / harsh-02
			:mod (x12 / altogether))
		:op2 (x15 / forbid-01))
	:op2 (x9 / point-out-02
		:mod (x8 / altogether))
	:op2 (x14 / and))

# ::id 733
# ::snt And the people have no imagination .
(x1 / and
	:op2 (x4 / have-03
		:ARG1 (x6 / imagination
			:polarity -)))

# ::id 734
# ::snt They repeat whatever one says to them ...
(x2 / repeat-01
	:ARG0 (x1 / they)
	:ARG1 (x5 / say-01
		:ARG0 (x4 / one
			:mod (x3 / whatever))))

# ::id 735
# ::snt On my planet I had a flower ; she always was the first to speak ... "
(x5 / have-03
	:location (x3 / planet)
	:ARG0 (x4 / i)
	:ARG1 (x7 / flower)
	:time (x13 / first
		:time (x10 / always)))

# ::id 736
# ::snt Chapter 20 .
(x1 / chapter
	:quant 20)

# ::id 737
# ::snt But it happened that after walking for a long time through sand , and rocks , and snow , the little prince at last came upon a road .
(x1 / contrast-01
	:ARG2 (x28 / road
		:time (x5 / after
			:op1 (x6 / walk-01
				:ARG1-of (x9 / long-03)
				:path (x14 / and
					:op1 (x12 / sand-01)
					:op2 (x17 / and
						:op2 (x15 / rock))
					:op2 (x18 / snow))))
		:mod (x22 / prince
			:mod (x21 / little)
			:location (x24 / last))))

# ::id 738
# ::snt And all roads lead to the abodes of men .
(x1 / and
	:op2 (x4 / lead-01
		:ARG0 (x3 / road
			:quant (x2 / all))
		:ARG2 (x7 / abode
			:ARG0 (x9 / man))))

# ::id 739
# ::snt " Good morning , " he said .
(x7 / say-01
	:frequency (x3 / morning
		:mod (x2 / good))
	:ARG0 (x6 / he))

# ::id 740
# ::snt He was standing before a garden , all a - bloom with roses .
(x3 / stand-01
	:ARG1 (x1 / he)
	:time (x4 / before
		:op1 (x6 / garden
			:ARG2-of (x11 / bloom
				:mod (x8 / all)
				:prep-with (x13 / rose)))))

# ::id 741
# ::snt " Good morning , " said the roses .
(x6 / say-01
	:ARG1 (x3 / morning
		:mod (x2 / good))
	:ARG0 (x8 / rose))

# ::id 742
# ::snt The little prince gazed at them .
(x4 / gaze-01
	:ARG0 (x3 / prince
		:mod (x2 / little)))

# ::id 743
# ::snt They all looked like his flower .
(x3 / look-01
	:null_edge (x2 / all)
	:ARG1 (x6 / flower))

# ::id 744
# ::snt " Who are you ? " he demanded , thunderstruck .
(x8 / demand-01
	:ARG0 (x4 / you)
	:ARG0 (x7 / he)
	:ARG1 (x10 / thunderstruck))

# ::id 745
# ::snt " We are roses , " the roses said .
(x9 / say-01
	:ARG1 (x4 / rose
		:ARG0 (x2 / we)
		:domain (x8 / rose))
	:ARG0 x8)

# ::id 746
# ::snt And he was overcome with sadness .
(x4 / overcome-01
	:ARG0 (x1 / and))

# ::id 747
# ::snt His flower had told him that she was the only one of her kind in all the universe .
(x4 / tell-01
	:ARG0 (x2 / flower)
	:ARG2 (x14 / kind
		:mod (x10 / only)
		:location (x18 / universe
			:mod (x16 / all))))

# ::id 748
# ::snt And here were five thousand of them , all alike , in one single garden !
(x / xconcept
	:x (x1 / and)
	:x (x5 / thousand
		:null_edge (x2 / here
			:location (x10 / alike-05
				:degree (x9 / all))
			:location (x15 / garden
				:quant 1
				:ARG1-of (x14 / single-02)))))

# ::id 749
# ::snt " She would be very much annoyed , " he said to himself , " if she should see that ... she would cough most dreadfully , and she would pretend that she was dying , to avoid being laughed at .
(x / xconcept
	:x (x11 / say-01
		:ARG1 (x7 / annoy-01
			:ARG1 (x2 / she)
			:degree (x6 / much
				:degree (x5 / very))
			:null_edge (x31 / pretend-01
				:ARG0 x2
				:ARG1 (x35 / die-01
					:ARG1 (x33 / she)
					:purpose (x38 / avoid-01
						:ARG0 x33
						:ARG1 (x40 / laugh-01))))))
	:x (x18 / recommend-01
		:ARG1 (x19 / see-01)
		:ARG1 (x28 / and
			:op2 (x24 / cough
				:ARG0 x2
				:manner (x26 / dreadfully
					:degree (x25 / most))))))

# ::id 750
# ::snt And I should be obliged to pretend that I was nursing her back to life - - for if I did not do that , to humble myself also , she would really allow herself to die ... "
(x1 / and
	:op2 (x3 / recommend-01
		:ARG1 (x5 / oblige-02
			:ARG1 (x2 / i)
			:ARG2 (x7 / pretend-01
				:ARG0 x2
				:ARG1 (x11 / nurse
					:ARG0 (x9 / i)
					:ARG1 (x15 / life)
					:purpose (x34 / allow-01
						:ARG1 (x27 / humble
							:ARG1 (x20 / i)
							:mod (x29 / also))
						:mod (x33 / really)
						:ARG1 (x37 / die-01)))))))

# ::id 751
# ::snt Then he went on with his reflections : " I thought that I was rich , with a flower that was unique in all the world ; and all I had was a common rose .
(x / xconcept
	:x (x27 / and
		:op1 (x28 / and
			:op1 (x3 / go-02
				:time (x1 / then)
				:ARG0 (x2 / he)
				:ARG2 (x7 / reflect-01))
			:op2 (x11 / think-01
				:ARG0 x2
				:ARG1 (x19 / flower
					:poss (x13 / i)
					:mod (x22 / unique
						:location (x26 / world
							:mod (x24 / all)))))
			:op2 (x35 / rise-01
				:ARG1 (x29 / all
					:null_edge (x30 / i))
				:mod (x34 / common)))))

# ::id 752
# ::snt A common rose , and three volcanoes that come up to my knees - - and one of them perhaps extinct forever ... that does n't make me a very great prince ... "
(x16 / and
	:op1 (x3 / rise-01
		:mod (x2 / common)
		:ARG1 (x5 / and
			:op1 (x7 / volcano
				:quant 3
				:ARG1-of (x9 / come-01
					:ARG4 (x13 / kneel-01))))
		:ARG1 (x32 / prince
			:mod (x31 / great
				:degree (x30 / very))))
	:op2 (x21 / extinct
		:quant 1
		:duration (x22 / forever)))

# ::id 753
# ::snt And he lay down in the grass and cried .
(x1 / and
	:op2 (x8 / and
		:op1 (x3 / lay-01
			:ARG0 (x2 / he)
			:direction (x4 / down)
			:ARG2 (x7 / grass))
		:op2 (x9 / cry-02
			:ARG0 x2)))

# ::id 754
# ::snt Chapter 21 .
(x1 / chapter
	:mod 21)

# ::id 755
# ::snt It was then that the fox appeared .
(x7 / appear-02
	:ARG1 (x1 / it)
	:time (x3 / then)
	:ARG1 (x6 / fox))

# ::id 756
# ::snt " Good morning , " said the fox .
(x6 / say-01
	:ARG1 (x3 / morning
		:mod (x2 / good))
	:ARG0 (x8 / fox))

# ::id 757
# ::snt " Good morning , " the little prince responded politely , although when he turned around he saw nothing .
(x9 / respond-01
	:mod (x3 / morning
		:mod (x2 / good)
		:null_edge (x18 / see-01
			:time (x15 / turn-02
				:direction (x16 / around))
			:ARG0 (x17 / he)
			:ARG1 (x19 / nothing)))
	:ARG0 (x8 / prince
		:mod (x7 / little))
	:manner (x10 / politely))

# ::id 758
# ::snt " I am right here , " the voice said , " under the apple tree . "
(x10 / say-01
	:ARG0 (x2 / i)
	:location (x5 / here
		:mod (x4 / right))
	:ARG0 (x9 / voice)
	:ARG1 (x13 / under
		:op1 (x16 / tree
			:mod (x15 / apple))))

# ::id 759
# ::snt " Who are you ? " asked the little prince , and added , " You are very pretty to look at . "
(x12 / and
	:op1 (x7 / ask-01
		:ARG2 (x4 / you)
		:ARG1 (x10 / prince
			:mod (x9 / little))
		:ARG0 (x16 / you))
	:op2 (x13 / add-01
		:ARG1 (x21 / look-02
			:ARG0 x16
			:degree (x18 / very))))

# ::id 760
# ::snt " I am a fox , " said the fox .
(x8 / say-01
	:ARG1 (x5 / fox
		:domain (x2 / i))
	:ARG0 (x10 / fox))

# ::id 761
# ::snt " Come and play with me , " proposed the little prince .
(x9 / propose-01
	:ARG1 (x3 / and
		:op1 (x2 / come-01)
		:op2 (x4 / play-01))
	:ARG1 (x12 / prince
		:mod (x11 / little)))

# ::id 762
# ::snt " I am so unhappy . "
(x5 / happy
	:domain (x2 / i))

# ::id 763
# ::snt " I can not play with you , " the fox said .
(x12 / say-01
	:ARG1 (x3 / possible-01
		:ARG1 (x5 / play-02
			:ARG0 (x2 / i)
			:ARG2 (x7 / you)))
	:ARG0 (x11 / fox))

# ::id 764
# ::snt " I am not tamed . "
(x5 / tame
	:ARG1 (x2 / i))

# ::id 765
# ::snt " Ah !
(x2 / Ah)

# ::id 766
# ::snt Please excuse me , " said the little prince .
(x6 / say-01
	:ARG1 (x2 / excuse-02)
	:ARG0 (x9 / prince
		:mod (x8 / little)))

# ::id 767
# ::snt But , after some thought , he added : " What does that mean - - ' tame ' ? "
(x1 / contrast-01
	:ARG2 (x8 / add-01
		:time (x3 / after
			:op1 (x5 / think-01
				:ARG1 (x4 / some)))
		:ARG0 (x7 / he)
		:ARG1 (x14 / mean
			:ARG2 (x18 / tame))))

# ::id 768
# ::snt " You do not live here , " said the fox .
(x9 / say-01
	:ARG1 (x5 / live-01
		:ARG0 (x2 / you)
		:location (x6 / here))
	:ARG0 (x11 / fox))

# ::id 769
# ::snt " What is it that you are looking for ? "
(x8 / look-01
	:ARG0 (x6 / you))

# ::id 770
# ::snt " I am looking for men , " said the little prince .
(x9 / say-01
	:ARG1 (x4 / look-01
		:ARG0 (x2 / i)
		:ARG1 (x6 / man))
	:ARG0 (x12 / prince
		:mod (x11 / little)))

# ::id 771
# ::snt " What does that mean - - ' tame ' ? "
(x5 / mean-01
	:ARG1 (x4 / that)
	:ARG2 (x9 / tame))

# ::id 772
# ::snt " Men , " said the fox .
(x5 / say-01
	:ARG0 (x2 / man)
	:ARG1 (x7 / fox))

# ::id 773
# ::snt " They have guns , and they hunt .
(x6 / and
	:op1 (x3 / have-03
		:ARG0 (x2 / they)
		:ARG1 (x4 / gun))
	:op2 (x8 / hunt-01))

# ::id 774
# ::snt It is very disturbing .
(x4 / disturb-01
	:degree (x3 / very))

# ::id 775
# ::snt They also raise chickens .
(x3 / raise-01
	:ARG0 (x1 / they)
	:mod (x2 / also)
	:ARG1 (x4 / chicken))

# ::id 776
# ::snt These are their only interests .
(x5 / interest
	:mod (x4 / only))

# ::id 777
# ::snt Are you looking for chickens ? "
(x3 / look-01
	:ARG0 (x2 / you)
	:ARG1 (x5 / chicken))

# ::id 778
# ::snt " No , " said the little prince .
(x5 / say-01
	:ARG0 (x8 / prince
		:mod (x7 / little)))

# ::id 779
# ::snt " I am looking for friends .
(x4 / look-01
	:ARG0 (x2 / i)
	:ARG1 (xap0 / person
		:ARG0-of (x6 / have-rel-role-91
			:ARG2 (f / friend))))

# ::id 780
# ::snt What does that mean - - ' tame ' ? "
(x4 / mean-01
	:ARG1 (x3 / that)
	:ARG2 (x8 / tame))

# ::id 781
# ::snt " It is an act too often neglected , " said the fox .
(x11 / say-01
	:ARG1 (x5 / act-02
		:domain (x2 / it)
		:ARG1-of (x8 / neglect-01
			:frequency (x7 / often
				:mod (x6 / too))))
	:ARG0 (x13 / fox))

# ::id 782
# ::snt It means to establish ties . "
(x2 / mean-01
	:ARG0 (x1 / it)
	:ARG2 (x4 / establish-01
		:ARG0 x1
		:ARG1 (x5 / tie-01)))

# ::id 783
# ::snt " ' To establish ties ' ? "
(x4 / establish-01
	:ARG1 (x5 / tie-01))

# ::id 784
# ::snt " Just that , " said the fox .
(x6 / say-01
	:ARG1 (x3 / that
		:null_edge (x2 / just))
	:ARG0 (x8 / fox))

# ::id 785
# ::snt " To me , you are still nothing more than a little boy who is just like a hundred thousand other little boys .
(x8 / nothing
	:domain (x5 / you)
	:mod (x7 / still)
	:mod (x9 / more
		:compared-to (x13 / boy
			:mod (x12 / little)
			:compared-to (x23 / boy
				:mod (x16 / just)
				:mod (x21 / other)
				:mod (x22 / little)))))

# ::id 786
# ::snt And I have no need of you .
(x1 / and
	:op2 (x3 / have-03
		:ARG0 (x2 / i)
		:ARG1 (x5 / need-01
			:polarity -
			:ARG0 (x7 / you))))

# ::id 787
# ::snt And you , on your part , have no need of me .
(x1 / and
	:op7 (x6 / part
		:ARG0 (x2 / you))
	:op2 (x10 / need-01
		:polarity -))

# ::id 788
# ::snt To you , I am nothing more than a fox like a hundred thousand other foxes .
(x6 / nothing
	:null_edge (x2 / you)
	:domain (x4 / i)
	:mod (x7 / more
		:compared-to (x10 / fox))
	:null_edge (x16 / fox
		:mod (x15 / other)))

# ::id 789
# ::snt But if you tame me , then we shall need each other .
(x1 / contrast-01
	:ARG2 (x10 / need-01
		:ARG0 (x3 / you)
		:condition (x4 / tame)
		:ARG0 (x8 / we)
		:ARG1 (x12 / other
			:mod (x11 / each))))

# ::id 790
# ::snt To me , you will be unique in all the world .
(x7 / unique
	:domain (x4 / you)
	:location (x11 / world
		:mod (x9 / all)))

# ::id 791
# ::snt To you , I shall be unique in all the world ... "
(x7 / unique
	:domain (x2 / you)
	:domain (x4 / i)
	:location (x11 / world
		:mod (x9 / all)))

# ::id 792
# ::snt " I am beginning to understand , " said the little prince .
(x9 / say-01
	:ARG1 (x4 / begin-01
		:ARG0 (x2 / i)
		:ARG1 (x6 / understand-01
			:ARG0 x2))
	:ARG0 (x12 / prince
		:mod (x11 / little)))

# ::id 793
# ::snt " There is a flower ...
(x5 / flower)

# ::id 794
# ::snt I think that she has tamed me ... "
(x2 / think-01
	:ARG0 (x1 / i)
	:ARG1 (x6 / tame
		:ARG0 (x4 / she)))

# ::id 795
# ::snt " It is possible , " said the fox .
(x7 / say-01
	:ARG1 (x4 / possible-01)
	:ARG0 (x9 / fox))

# ::id 796
# ::snt " On the Earth one sees all sorts of things . "
(x6 / see-01
	:null_edge (x4 / planet
		:name (n / name
			:op1 "Earth"))
	:ARG0 (x5 / one)
	:ARG1 (x10 / thing
		:mod (x8 / sort
			:quant (x7 / all))))

# ::id 797
# ::snt " Oh , but this is not on the Earth ! " said the little prince .
(x13 / say-01
	:mod (x2 / oh
		:ARG1 (x5 / this)
		:null_edge (x10 / planet
			:name (n / name
				:op1 "Earth")))
	:ARG0 (x16 / prince
		:mod (x15 / little)))

# ::id 798
# ::snt The fox seemed perplexed , and very curious .
(x6 / and
	:op1 (x3 / seem-01
		:ARG1 (x4 / perplex-01
			:ARG1 (x2 / fox))
		:ARG1 (x8 / curious-01
			:ARG1 x2
			:degree (x7 / very))))

# ::id 799
# ::snt " On another planet ? "
(x4 / planet
	:mod (x3 / another))

# ::id 800
# ::snt " Yes . "
(x2 / yes)

# ::id 801
# ::snt " Are there hunters on this planet ? "
(x4 / person
	:ARG0-of (h / hunt-01)
	:location (x3 / there)
	:location (x7 / planet
		:mod (x6 / this)))

# ::id 802
# ::snt " No . "
(x2 / no)

# ::id 803
# ::snt " Ah , that is interesting !
(x6 / interest-01
	:mod (x2 / ah)
	:domain (x4 / that))

# ::id 804
# ::snt Are there chickens ? "
(x3 / chicken)

# ::id 805
# ::snt " No . "
(x2 / no)

# ::id 806
# ::snt " Nothing is perfect , " sighed the fox .
(x7 / sigh-02
	:ARG1-of (x4 / perfect-02
		:ARG1 (x2 / nothing))
	:ARG0 (x9 / fox))

# ::id 807
# ::snt But he came back to his idea .
(x1 / contrast-01
	:ARG2 (x3 / come-01
		:ARG1 (x2 / he)
		:direction (x4 / back)
		:ARG1 (x7 / idea)))

# ::id 808
# ::snt " My life is very monotonous , " the fox said .
(x11 / say-01
	:ARG1 (x6 / monotonous
		:ARG1 (x3 / life)
		:degree (x5 / very))
	:ARG0 (x10 / fox))

# ::id 809
# ::snt " I hunt chickens ; men hunt me .
(xap0 / multi-sentence
	:ARG2 (x3 / hunt-01
		:ARG0 (x2 / i)
		:ARG1 (x4 / chicken))
	:snt2 (x7 / hunt-01
		:ARG1 (x6 / man)))

# ::id 810
# ::snt All the chickens are just alike , and all the men are just alike .
(x8 / and
	:op3 (x3 / chicken
		:quant (x1 / all)
		:location (x6 / alike-05
			:mod (x5 / just)))
	:domain (x11 / man
		:mod (x9 / all)
		:mod (x14 / alike-05
			:mod (x13 / just))))

# ::id 811
# ::snt And , in consequence , I am a little bored .
(x1 / and
	:op2 (x10 / bored
		:ARG2 (x4 / consequence)
		:ARG1 (x6 / i)
		:mod (x9 / little)))

# ::id 812
# ::snt But if you tame me , it will be as if the sun came to shine on my life .
(x1 / contrast-01
	:ARG2 (x4 / tame
		:domain (x3 / you))
	:time (x14 / come-01
		:ARG1 (x13 / sun)
		:ARG1 (x16 / shine-01
			:ARG1 (x19 / life))))

# ::id 813
# ::snt I shall know the sound of a step that will be different from all the others .
(x3 / know-01
	:ARG0 (x1 / i)
	:ARG1 (x5 / thing
		:ARG2-of (s / sound-01)
		:mod (x8 / step
			:ARG1-of (x12 / differ-02
				:ARG2 (x16 / other
					:quant (x14 / all))))))

# ::id 814
# ::snt Other steps send me hurrying back underneath the ground .
(x3 / send-03
	:ARG0 (x2 / step-01
		:mod (x1 / other))
	:ARG1 (x5 / hurry-01
		:direction (x6 / back)
		:ARG1 (x9 / ground)))

# ::id 815
# ::snt Yours will call me , like music , out of my burrow .
(x3 / call-01
	:ARG0 (x1 / yours)
	:ARG1 (x7 / music)
	:ARG2 (x12 / burrow))

# ::id 816
# ::snt And then look : you see the grain - fields down yonder ?
(x1 / and
	:op2 (x3 / look-01
		:time (x2 / then)
		:ARG1 (x6 / see-01
			:ARG0 (x5 / you)
			:ARG1 (x8 / grain
				:ARG1 (x10 / field
					:null_edge (x12 / yonder))))))

# ::id 817
# ::snt I do not eat bread .
(x4 / eat-01
	:ARG0 (x1 / i)
	:ARG1 (x5 / bread))

# ::id 818
# ::snt Wheat is of no use to me .
(x1 / wheat
	:ARG1 (x5 / use-01
		:polarity -))

# ::id 819
# ::snt The wheat fields have nothing to say to me .
(x4 / have-03
	:ARG0 (x3 / field
		:mod (x2 / wheat))
	:ARG1 (x5 / nothing
		:ARG1-of (x7 / say-01)))

# ::id 820
# ::snt And that is sad .
(x1 / and
	:op2 (x4 / sad-02
		:ARG1 (x2 / that)))

# ::id 821
# ::snt But you have hair that is the colour of gold .
(x1 / contrast-01
	:ARG2 (x3 / have-03
		:ARG0 (x2 / you)
		:ARG1 (x4 / hair
			:ARG0-of (x8 / colour
				:consist-of (x10 / gold)))))

# ::id 822
# ::snt Think how wonderful that will be when you have tamed me !
(x1 / think-01
	:ARG1 (x6 / be-02
		:null_edge (x3 / wonderful-03
			:condition (x10 / tame
				:ARG0 (x8 / you)))))

# ::id 823
# ::snt The grain , which is also golden , will bring me back the thought of you .
(x10 / bring-01
	:ARG0 (x2 / grain
		:mod (x7 / gold
			:mod (x6 / also)))
	:direction (x12 / back)
	:ARG1 (x14 / think-01
		:ARG1 (x16 / you)))

# ::id 824
# ::snt And I shall love to listen to the wind in the wheat ... "
(x1 / and
	:op2 (x4 / love-02
		:ARG0 (x2 / i)
		:ARG1 (x6 / listen-01
			:ARG0 x2
			:ARG1 (x9 / wind)
			:ARG1 (x12 / wheat))))

# ::id 825
# ::snt The fox gazed at the little prince , for a long time .
(x3 / gaze-01
	:ARG0 (x2 / fox)
	:location (x7 / prince
		:mod (x6 / little))
	:ARG1-of (x11 / long-03))

# ::id 826
# ::snt " Please - - tame me ! " he said .
(x10 / say-01
	:ARG1 (x5 / tame)
	:ARG0 (x9 / he))

# ::id 827
# ::snt " I want to , very much , " the little prince replied .
(x13 / reply-01
	:null_edge (x3 / want-01
		:ARG0 (x2 / i)
		:mod (x7 / much
			:degree (x6 / very)))
	:ARG0 (x12 / prince
		:mod (x11 / little)))

# ::id 828
# ::snt " But I have not much time .
(x2 / contrast-01
	:ARG2 (x4 / have-03
		:ARG0 (x3 / i)
		:ARG1 (x7 / time
			:quant (x6 / much))))

# ::id 829
# ::snt I have friends to discover , and a great many things to understand . "
(x7 / and
	:null_edge (x1 / i)
	:op2 (x13 / understand-01
		:ARG0 x1
		:ARG1 (x11 / thing
			:mod (x9 / great)
			:quant (x10 / many)))
	:op2 (xap0 / person
		:ARG0-of (x3 / have-rel-role-91
			:ARG2 (f / friend)
			:ARG1-of (x5 / discover-01))))

# ::id 830
# ::snt " One only understands the things that one tames , " said the fox .
(x12 / say-01
	:ARG1 (x4 / understand-01
		:ARG0 (x2 / one)
		:mod (x3 / only)
		:ARG1 (x6 / thing
			:ARG1-of (x9 / tame
				:ARG0 (x8 / one))))
	:ARG0 (x14 / fox))

# ::id 831
# ::snt " Men have no more time to understand anything .
(xap0 / obligate-01
	:ARG1 (x2 / man)
	:time (x6 / time
		:quant (x5 / more
			:polarity -)
		:mod (x8 / understand-01
			:ARG1 (x9 / anything))))

# ::id 832
# ::snt They buy things all ready made at the shops .
(x2 / buy-01
	:ARG0 (x1 / they)
	:ARG1 (x3 / thing)
	:ARG1 (x5 / ready-02
		:quant (x4 / all)
		:ARG2 (x9 / shop)))

# ::id 833
# ::snt But there is no shop anywhere where one can buy friendship , and so men have no friends any more .
(x1 / contrast-01
	:ARG2 (x5 / shop
		:polarity -
		:location (x6 / anywhere)
		:purpose (x10 / buy-01
			:ARG1-of (x9 / possible-01)
			:ARG1 (x11 / friendship)))
	:ARG2 (x13 / and
		:op2 (x16 / have-03
			:ARG0 (x15 / man)
			:ARG1 (x20 / more
				:mod (x19 / any))
			:ARG1 (xap0 / person
				:ARG0-of (x18 / have-rel-role-91
					:ARG2 (f / friend)
					:polarity -)))))

# ::id 834
# ::snt If you want a friend , tame me ... "
(x7 / tame
	:condition (x3 / want-01
		:ARG0 (x2 / you)
		:ARG1 (x5 / have-rel-role-91
			:ARG2 (f / friend))))

# ::id 835
# ::snt " What must I do , to tame you ? " asked the little prince .
(x12 / ask-01
	:null_edge (x5 / do-02
		:ARG0 (x4 / i)
		:ARG2 (x8 / tame
			:ARG1 (x9 / you)))
	:ARG0 (x15 / prince
		:mod (x14 / little)))

# ::id 836
# ::snt " You must be very patient , " replied the fox .
(x9 / reply-01
	:ARG1 (x6 / have-rel-role-91
		:ARG2 (p / patient)
		:domain (x2 / you)
		:degree (x5 / very))
	:ARG0 (x11 / fox))

# ::id 837
# ::snt " First you will sit down at a little distance from me - - like that - - in the grass .
(x5 / sit-01
	:ARG1 (x3 / you)
	:ARG2 (x10 / distance-01
		:quant (x9 / little)
		:ARG2 (x16 / that))
	:ARG2 (x21 / grass))

# ::id 838
# ::snt I shall look at you out of the corner of my eye , and you will say nothing .
(x14 / and
	:op1 (x3 / look-01
		:ARG0 (x1 / i)
		:ARG0 (x5 / you)
		:ARG1 (x9 / corner
			:mod (x12 / eye)))
	:op2 (x17 / say-01
		:ARG0 x1
		:ARG0 (x15 / you)
		:ARG1 (x18 / nothing)))

# ::id 839
# ::snt Words are the source of misunderstandings .
(x4 / source-02
	:ARG1 (x1 / word)
	:ARG1 (x6 / misunderstand-01))

# ::id 840
# ::snt But you will sit a little closer to me , every day ... "
(x1 / contrast-01
	:ARG2 (x4 / sit-01
		:ARG1 (x2 / you)
		:ARG2 (x7 / close-10
			:ARG1 x2
			:degree (xap0 / more
				:mod (x6 / little)))
		:frequency (xap1 / rate-entity-91
			:ARG3 (x12 / temporal-quantity
				:unit (d / day)))))

# ::id 841
# ::snt The next day the little prince came back .
(x6 / prince
	:domain (x3 / day
		:mod (x2 / next))
	:mod (x5 / little)
	:mod (x8 / back))

# ::id 842
# ::snt " It would have been better to come back at the same hour , " said the fox .
(x16 / say-01
	:ARG1 (x6 / good
		:ARG1 (x8 / come-01
			:direction (x9 / back)
			:time (x13 / temporal-quantity
				:unit (h / hour)
				:mod (x12 / same))))
	:ARG0 (x18 / fox))

# ::id 843
# ::snt " If , for example , you come at four o'clock in the afternoon , then at three o'clock I shall begin to be happy .
(x22 / begin-01
	:time (x8 / come-01
		:ARG1 (x7 / you)
		:time (x14 / afternoon)
		:ARG1 (x20 / i))
	:ARG0 x20
	:ARG1 (x25 / happy
		:ARG1 x20))

# ::id 844
# ::snt I shall feel happier and happier as the hour advances .
(x3 / feel-01
	:ARG0 (x1 / i)
	:ARG1 (x5 / and
		:op1 (x4 / happier)
		:op2 (x6 / happier))
	:ARG2 (x10 / advance-01
		:duration (x9 / temporal-quantity
			:unit (h / hour))))

# ::id 845
# ::snt At four o'clock , I shall already be worrying and jumping about .
(x10 / and
	:op1 (x9 / worry-02
		:ARG1 (x5 / i)
		:time (x7 / already))
	:op2 (x11 / jump-03
		:ARG0 x5))

# ::id 846
# ::snt I shall show you how happy I am !
(x3 / show-01
	:ARG0 (x1 / i)
	:ARG1 (x4 / you)
	:ARG0 (x7 / i))

# ::id 847
# ::snt But if you come at just any time , I shall never know at what hour my heart is to be ready to greet you ...
(x1 / contrast-01
	:ARG2 (x13 / know-01
		:time (x4 / come-01
			:ARG1 (x3 / you)
			:time (x7 / any
				:mod (x6 / just)))
		:ARG0 (x10 / i)
		:ARG1 (x18 / heart
			:part-of (x16 / temporal-quantity
				:unit (h / hour))
			:ARG1-of (x22 / ready-02
				:ARG2 (x24 / greet-01
					:ARG1 (x25 / you))))))

# ::id 848
# ::snt One must observe the proper rites ... "
(x3 / observe-01
	:ARG0 (x1 / one)
	:ARG1 (x6 / rite
		:mod (x5 / proper)))

# ::id 849
# ::snt " What is a rite ? " asked the little prince .
(x8 / ask-01
	:ARG2 (x5 / rite)
	:ARG0 (x11 / prince
		:mod (x10 / little)))

# ::id 850
# ::snt " Those also are actions too often neglected , " said the fox .
(x11 / say-01
	:ARG1 (x5 / action
		:mod (x3 / also)
		:ARG1-of (x8 / neglect-01
			:frequency (x7 / often
				:mod (x6 / too))))
	:ARG0 (x13 / fox))

# ::id 851
# ::snt " They are what make one day different from other days , one hour from other hours .
(x5 / make-05
	:ARG0 (x2 / they)
	:ARG1 (x8 / differ-02
		:ARG1 (x7 / day
			:quant 1)
		:ARG2 (x11 / temporal-quantity
			:unit (d / day)
			:mod (x10 / other
				:duration (x17 / temporal-quantity
					:unit (h / hour)
					:quant 1
					:mod (x16 / other))))))

# ::id 852
# ::snt There is a rite , for example , among my hunters .
(x4 / rite
	:ARG0 (x11 / person
		:ARG0-of (h / hunt-01)))

# ::id 853
# ::snt Every Thursday they dance with the village girls .
(x4 / dance-01
	:ARG0 (x3 / they)
	:ARG2 (x8 / girl
		:mod (x7 / village))
	:time (xap0 / date-entity
		:weekday (x2 / thursday)))

# ::id 854
# ::snt So Thursday is a wonderful day for me !
(x6 / day
	:ARG1-of (x5 / wonderful-03)
	:time (xap0 / date-entity
		:weekday (x2 / thursday)))

# ::id 855
# ::snt I can take a walk as far as the vineyards .
(x2 / possible-01
	:ARG1 (x3 / take-01
		:ARG0 (x1 / i)
		:ARG1 (x5 / walk-01)
		:extent (x7 / far)))

# ::id 856
# ::snt But if the hunters danced at just any time , every day would be like every other day , and I should never have any vacation at all . "
(x1 / contrast-01
	:ARG2 (x20 / and
		:op1 (x5 / dance-01
			:ARG0 (x4 / person
				:ARG0-of (h / hunt-01))
			:time (x8 / any
				:mod (x7 / just)))
		:op2 (x22 / recommend-01
			:ARG1 (x24 / have-03
				:ARG0 (x21 / i)
				:ARG1 (x26 / vacation-01
					:mod (x25 / any)))))
	:ARG2 (xap0 / rate-entity-91
		:ARG3 (x12 / temporal-quantity
			:unit (d / day)))
	:ARG2 (xap1 / rate-entity-91
		:ARG2 (x18 / temporal-quantity
			:unit (d1 / day))))

# ::id 857
# ::snt So the little prince tamed the fox .
(x5 / tame
	:ARG0 (x4 / prince
		:mod (x3 / little))
	:ARG1 (x7 / fox))

# ::id 858
# ::snt And when the hour of his departure drew near - - " Ah , " said the fox , " I shall cry . "
(x / xconcept
	:x (x1 / and)
	:x (x16 / say-01
		:ARG1 (x18 / fox)
		:ARG1 (x23 / cry-02
			:time (x8 / draw-02
				:ARG0 (x7 / depart-01
					:ARG2 (x4 / temporal-quantity
						:unit (h / hour)))
				:ARG2 (x9 / near-02))
			:mod (x13 / ah)
			:ARG0 (x21 / i))))

# ::id 859
# ::snt " It is your own fault , " said the little prince .
(x9 / say-01
	:ARG1 (x6 / fault-01)
	:ARG0 (x12 / prince
		:mod (x11 / little)))

# ::id 860
# ::snt " I never wished you any sort of harm ; but you wanted me to tame you ... "
(x11 / contrast-01
	:ARG1 (x4 / wish-01
		:ARG0 (x2 / i)
		:ARG1 (x9 / harm-01
			:mod (x7 / sort
				:ARG0 (x5 / you)
				:mod (x6 / any)))))

# ::id 861
# ::snt " Yes , that is so , " said the fox .
(x9 / say-01
	:ARG0 (x11 / fox))

# ::id 862
# ::snt " But now you are going to cry ! " said the little prince .
(x11 / say-01
	:ARG1 (x2 / contrast-01
		:ARG2 (x8 / cry-02
			:time (x3 / now)
			:ARG0 (x4 / you)))
	:ARG0 (x14 / prince
		:mod (x13 / little)))

# ::id 863
# ::snt " Yes , that is so , " said the fox .
(x9 / say-01
	:ARG0 (x11 / fox))

# ::id 864
# ::snt " Then it has done you no good at all ! "
(x5 / do-02
	:time (x2 / then)
	:ARG1 (x3 / it)
	:ARG1 (x6 / you)
	:ARG1 (x8 / good
		:polarity -))

# ::id 865
# ::snt " It has done me good , " said the fox , " because of the color of the wheat fields . "
(x9 / say-01
	:ARG1 (x4 / do-02
		:ARG0 (x2 / it)
		:ARG1 (x6 / good))
	:ARG1 (x11 / fox)
	:ARG1 (x14 / cause-01
		:ARG0 (x17 / colour
			:ARG1 (x21 / field
				:mod (x20 / wheat)))))

# ::id 866
# ::snt And then he added : " Go and look again at the roses .
(x1 / and
	:op2 (x4 / add-01
		:time (x2 / then)
		:ARG0 (x3 / he)
		:ARG1 (x8 / and
			:op1 (x7 / go-02)
			:op2 (x9 / look-01
				:mod (x10 / again)
				:ARG1 (x13 / rose)))))

# ::id 867
# ::snt You will understand now that yours is unique in all the world .
(x3 / understand-01
	:ARG0 (x1 / you)
	:mod (x4 / now)
	:ARG1 (x8 / unique
		:polarity -
		:location (x12 / world
			:mod (x10 / all))))

# ::id 868
# ::snt Then come back to say goodbye to me , and I will make you a present of a secret . "
(x10 / and
	:op1 (x2 / come-01
		:time (x1 / then)
		:direction (x3 / back)
		:ARG1 (x5 / say-01
			:ARG1 (x6 / goodbye)))
	:op2 (x13 / make-02
		:ARG0 (x11 / i)
		:ARG1 (x16 / present
			:ARG1 (x14 / you)
			:ARG1 (x19 / secret))))

# ::id 869
# ::snt The little prince went away , to look again at the roses .
(x4 / go-02
	:ARG0 (x3 / prince
		:mod (x2 / little))
	:direction (x5 / away)
	:purpose (x8 / look-02
		:mod (x9 / again)
		:ARG1 (x12 / rose)))

# ::id 870
# ::snt " You are not at all like my rose , " he said .
(x13 / say-01
	:ARG0 (x2 / you
		:null_edge (x9 / rose))
	:ARG0 (x12 / he))

# ::id 871
# ::snt " As yet you are nothing .
(x6 / nothing
	:mod (x3 / yet)
	:ARG0 (x4 / you))

# ::id 872
# ::snt No one has tamed you , and you have tamed no one .
(x7 / and
	:op1 (x4 / tame
		:ARG0 (x2 / one)
		:ARG1 (x5 / you))
	:op2 (x10 / tame
		:ARG0 x2
		:ARG0 (x8 / you)
		:polarity -))

# ::id 873
# ::snt You are like my fox when I first knew him .
(x9 / know-01
	:ARG0 (x1 / you
		:null_edge (x5 / fox)))

# ::id 874
# ::snt He was only a fox like a hundred thousand other foxes .
(x5 / fox
	:domain (x1 / he)
	:mod (x3 / only)
	:null_edge (x11 / fox
		:mod (x10 / other)))

# ::id 875
# ::snt But I have made him my friend , and now he is unique in all the world . "
(x1 / contrast-01
	:ARG2 (x9 / and
		:op1 (x4 / make-02
			:ARG0 (x2 / i)
			:ARG1 (x7 / friend))
		:mod (x13 / unique
			:time (x10 / now)
			:domain (x11 / he)
			:location (x17 / world
				:mod (x15 / all)))))

# ::id 876
# ::snt And the roses were very much embarassed .
(x1 / and
	:op2 (x7 / embarrass-01
		:ARG1 (x3 / rose)
		:degree (x6 / much
			:degree (x5 / very))))

# ::id 877
# ::snt " You are beautiful , but you are empty , " he went on .
(x6 / contrast-01
	:ARG1 (x4 / beautiful-02
		:ARG1 (x2 / you))
	:ARG2 (x9 / empty-02
		:ARG0 (x7 / you))
	:ARG1 (x13 / go-02
		:ARG0 (x12 / he)))

# ::id 878
# ::snt " One could not die for you .
(x3 / possible-01
	:ARG1 (x5 / die-01
		:ARG1 (x2 / one)
		:ARG2 (x7 / you)))

# ::id 879
# ::snt To be sure , an ordinary passerby would think that my rose looked just like you - - the rose that belongs to me .
(x9 / think-01
	:concession (x3 / sure-02)
	:ARG0 (x7 / passerby
		:mod (x6 / ordinary))
	:ARG1 (x13 / look-02
		:ARG0 (x12 / rose)
		:condition (x20 / rise-01
			:mod (x14 / just)
			:ARG4 (x22 / belong-01))))

# ::id 880
# ::snt But in herself alone she is more important than all the hundreds of you other roses : because it is she that I have watered ; because it is she that I have put under the glass globe ; because it is she that I have sheltered behind the screen ; because it is for her that I have killed the caterpillars ( except the two or three that we saved to become butterflies ) ; because it is she that I have listened to , when she grumbled , or boasted , or ever sometimes when she said nothing .
(x1 / contrast-01)

# ::id 881
# ::snt Because she is my rose .
(x1 / cause-01
	:ARG0 (x5 / rose
		:ARG0 (x2 / she)))

# ::id 882
# ::snt And he went back to meet the fox .
(x1 / and
	:op2 (x3 / go-02
		:ARG0 (x2 / he)
		:direction (x4 / back)
		:purpose (x6 / meet-03
			:ARG0 x2
			:ARG1 (x8 / fox))))

# ::id 883
# ::snt " Goodbye , " he said .
(x6 / say-01
	:ARG1 (x2 / goodbye)
	:ARG0 (x5 / he))

# ::id 884
# ::snt " Goodbye , " said the fox .
(x5 / say-01
	:ARG1 (x2 / goodbye)
	:ARG1 (x7 / fox))

# ::id 885
# ::snt " And now here is my secret , a very simple secret : It is only with the heart that one can see rightly ; what is essential is invisible to the eye . "
(x / xconcept
	:x (x25 / and
		:op1 (x7 / secret
			:domain (x2 / and)
			:location (x4 / here
				:time (x3 / now))
			:mod (x12 / secret
				:ARG1-of (x11 / simple-02
					:degree (x10 / very)))
			:concession-of (x30 / invisible
				:ARG1 (x28 / essential)
				:ARG1 (x33 / eye))
			:domain (xap0 / and
				:ARG1 (x19 / heart)
				:ARG1 (x22 / possible-01
					:ARG1 (x23 / see-01
						:manner (x24 / right)))))
		:mod (x16 / only)))

# ::id 886
# ::snt " What is essential is invisible to the eye , " the little prince repeated , so that he would be sure to remember .
(x22 / sure-02
	:ARG1 (x14 / prince
		:mod (x13 / little))
	:ARG1 (x15 / repeat-01
		:ARG1 (x4 / essential
			:domain (x6 / invisible
				:ARG2 (x9 / eye)))
		:ARG0 x14)
	:ARG1 (x24 / remember-01
		:ARG0 x14))

# ::id 887
# ::snt " It is the time you have wasted for your rose that makes your rose so important . "
(x8 / waste-01
	:ARG1 (x2 / it)
	:beneficiary (x11 / rise-01
		:ARG0-of (x13 / make-02
			:ARG1 (x17 / important
				:domain (x15 / rise-01)
				:degree (x16 / so)))))

# ::id 888
# ::snt " It is the time I have wasted for my rose - - " said the little prince , so that he would be sure to remember .
(x8 / waste-01
	:ARG1 (x2 / it)
	:purpose (x11 / rose)
	:ARG1-of (x15 / say-01
		:ARG1 (x18 / prince
			:mod (x17 / little)))
	:time (x25 / sure-02
		:ARG1 (x27 / remember-01)))

# ::id 889
# ::snt " Men have forgotten this truth , " said the fox .
(x9 / say-01
	:ARG1 (x4 / forget-01
		:ARG0 (x2 / man)
		:ARG1 (x6 / truth
			:mod (x5 / this)))
	:ARG0 (x11 / fox))

# ::id 890
# ::snt " But you must not forget it .
(x2 / contrast-01
	:ARG2 (x6 / forget-01
		:ARG0 (x3 / you)
		:ARG1 (x7 / it)))

# ::id 891
# ::snt You become responsible , forever , for what you have tamed .
(x2 / become-01
	:ARG2 (x3 / responsible-03
		:ARG0 (x1 / you)
		:extent (x5 / forever)
		:ARG1 (x11 / tame
			:ARG0 (x9 / you))))

# ::id 892
# ::snt You are responsible for your rose ... "
(x3 / responsible-03
	:ARG0 (x1 / you)
	:ARG1 (x6 / rose))

# ::id 893
# ::snt " I am responsible for my rose , " the little prince repeated , so that he would be sure to remember .
(x4 / responsible-03
	:ARG0 (x2 / i)
	:ARG1 (x7 / rose)
	:ARG1-of (x13 / repeat-01
		:ARG1 (x12 / prince
			:mod (x11 / little)))
	:null_edge (x20 / sure-02
		:ARG1 (x22 / remember-01)))

# ::id 894
# ::snt Chapter 22 .
(x1 / chapter
	:mod (x2 / person
		:op 22))

# ::id 895
# ::snt " Good morning , " said the little prince .
(x6 / say-01
	:ARG1 (x3 / morning
		:mod (x2 / good))
	:ARG0 (x9 / prince
		:mod (x8 / little)))

# ::id 896
# ::snt " Good morning , " said the railway switchman .
(x6 / say-01
	:ARG1 (x3 / morning
		:mod (x2 / good))
	:ARG0 (x9 / switchman
		:mod (x8 / railway)))

# ::id 897
# ::snt " What do you do here ? " the little prince asked .
(x12 / ask-01
	:location (x6 / here
		:ARG0 (x4 / you))
	:ARG0 (x11 / prince
		:mod (x10 / little)))

# ::id 898
# ::snt " I sort out travelers , in bundles of a thousand , " said the switchman .
(x14 / say-01
	:ARG1 (x8 / bundle-01
		:mod (x3 / sort
			:ARG0 (x2 / i)
			:ARG1 (x5 / person
				:ARG0-of (t / travel-01)))
		:ARG2-of (x9 / include-91))
	:ARG0 (x16 / switchman))

# ::id 899
# ::snt " I send off the trains that carry them ; now to the right , now to the left . "
(x3 / send-03
	:ARG0 (x2 / i)
	:ARG1 (x6 / train
		:ARG0-of (x8 / carry-01))
	:time (x11 / now)
	:ARG2 (x14 / right-05)
	:time (x16 / now
		:mod (x19 / left)))

# ::id 900
# ::snt And a brilliantly lighted express train shook the switchman 's cabin as it rushed by with a roar like thunder .
(x1 / and
	:op2 (x7 / shake-01
		:ARG1 (x6 / train
			:ARG1-of (x4 / light-06
				:degree (x3 / brilliant-01))
			:mod (x5 / express-01))
		:ARG1 (x11 / cabin)
		:time (x14 / rush-01
			:ARG2 (x18 / roar
				:ARG2-of (x20 / thunder)))))

# ::id 901
# ::snt " They are in a great hurry , " said the little prince .
(x10 / say-01
	:ARG1 (x7 / hurry-01
		:ARG0 (x2 / they)
		:mod (x6 / great))
	:ARG0 (x13 / prince
		:mod (x12 / little)))

# ::id 902
# ::snt " What are they looking for ? "
(x5 / look-01
	:ARG0 (x4 / they))

# ::id 903
# ::snt " Not even the locomotive engineer knows that , " said the switchman .
(x11 / say-01
	:ARG1 (x7 / know-01
		:ARG0 (x6 / person
			:name (n / name
				:op1 "engineer")
			:mod (x3 / even)
			:ARG1 (x5 / locomotive)))
	:ARG0 (x13 / switchman))

# ::id 904
# ::snt And a second brilliantly lighted express thundered by , in the opposite direction .
(x1 / and
	:op2 (x7 / thunder
		:ARG0 (x6 / express-01
			:ARG1-of (x5 / light-06
				:degree (x4 / brilliant-01)))
		:ARG2 (x13 / direction
			:mod (x12 / opposite))))

# ::id 905
# ::snt " Are they coming back already ? " demanded the little prince .
(x9 / demand-01
	:ARG1 (x4 / come-01
		:ARG1 (x3 / they)
		:direction (x5 / back)
		:time (x6 / already))
	:ARG1 (x12 / prince
		:mod (x11 / little)))

# ::id 906
# ::snt " These are not the same ones , " said the switchman .
(x10 / say-01
	:ARG1 (x7 / one
		:ARG1-of (x6 / same-01))
	:ARG0 (x12 / switchman))

# ::id 907
# ::snt " It is an exchange . "
(x5 / exchange-01)

# ::id 908
# ::snt " Were they not satisfied where they were ? " asked the little prince .
(x11 / ask-01
	:null_edge (x5 / satisfy-01
		:ARG1 (x14 / prince
			:mod (x13 / little)))
	:ARG0 x14)

# ::id 909
# ::snt " No one is ever satisfied where he is , " said the switchman .
(x12 / say-01
	:ARG1 (x6 / satisfy-01
		:mod (x5 / ever))
	:ARG0 (x14 / switchman))

# ::id 910
# ::snt And they heard the roaring thunder of a third brilliantly lighted express .
(x1 / and
	:op2 (x3 / hear-01
		:ARG0 (x2 / they)
		:ARG1 (x6 / thunder
			:ARG1-of (x5 / roar)
			:instrument-of (x12 / express-01
				:ARG1-of (x11 / light-06
					:degree (x10 / brilliant-01))))))

# ::id 911
# ::snt " Are they pursuing the first travelers ? " demanded the little prince .
(x10 / demand-01
	:ARG1 (x4 / pursue-01
		:ARG0 (x3 / they)
		:ARG1 (x7 / person
			:ARG0-of (t / travel-01)))
	:ARG1 (x13 / prince
		:mod (x12 / little)))

# ::id 912
# ::snt " They are pursuing nothing at all , " said the switchman .
(x10 / say-01
	:ARG1 (x4 / pursue-01
		:ARG0 (x2 / they)
		:ARG1 (x5 / nothing))
	:ARG0 (x12 / switchman))

# ::id 913
# ::snt " They are asleep in there , or if they are not asleep they are yawning .
(x8 / or
	:concession (x4 / sleep-01
		:op (a / asleep)
		:ARG0 (x2 / they))
	:op2 (x16 / yawn
		:manner (x13 / sleep-01
			:op (a1 / asleep))))

# ::id 914
# ::snt Only the children are flattening their noses against the windowpanes . "
(x5 / flatten-01
	:ARG0 (x3 / child
		:mod (x1 / only))
	:ARG1 (x7 / nose)
	:ARG1 (x10 / windowpane))

# ::id 915
# ::snt " Only the children know what they are looking for , " said the little prince .
(x13 / say-01
	:ARG1 (x5 / know-01
		:ARG0 (x4 / child
			:mod (x2 / only))
		:ARG1 (x9 / look-01
			:ARG0 (x7 / they)))
	:ARG0 (x16 / prince
		:mod (x15 / little)))

# ::id 916
# ::snt " They waste their time over a rag doll and it becomes very important to them ; and if anybody takes it away from them , they cry ... "
(x / xconcept
	:x (x17 / and
		:op1 (x10 / and
			:op1 (x3 / waste-01
				:ARG0 (x2 / they)
				:ARG1 (x5 / time)
				:purpose (x9 / doll
					:mod (x8 / rag-01))
				:null_edge (x18 / and))
			:op2 (x12 / become-01
				:ARG1 (x14 / important
					:degree (x13 / very))))
		:op2 (x28 / cry-02
			:time (x21 / take-04
				:ARG0 (x20 / anybody)))))

# ::id 917
# ::snt " They are lucky , " the switchman said .
(x9 / say-01
	:ARG1 (x4 / lucky
		:domain (x2 / they))
	:ARG0 (x8 / switchman))

# ::id 918
# ::snt Chapter 23 .
(x1 / chapter
	:mod 23)

# ::id 919
# ::snt " Good morning , " said the little prince .
(x6 / say-01
	:ARG1 (x3 / morning
		:mod (x2 / good))
	:ARG0 (x9 / prince
		:mod (x8 / little)))

# ::id 920
# ::snt " Good morning , " said the merchant .
(x6 / say-01
	:ARG1 (x3 / morning
		:mod (x2 / good))
	:ARG0 (x8 / merchandise-01))

# ::id 921
# ::snt This was a merchant who sold pills that had been invented to quench thirst .
(x11 / invent-01
	:ARG0 (x1 / this)
	:ARG1 (x7 / pill)
	:purpose (x13 / quench
		:ARG1 (x14 / thirst-01)))

# ::id 922
# ::snt You need only swallow one pill a week , and you would feel no need of anything to drink .
(x10 / and
	:op1 (x2 / need-01
		:ARG1 (x4 / swallow-01
			:ARG0 (x1 / you)
			:mod (x3 / only)
			:ARG1 (x6 / pill
				:quant 1)
			:time (x8 / temporal-quantity
				:unit (w / week))
			:ARG1 (x13 / feel-01
				:ARG0 x1
				:ARG0 (x11 / you)
				:ARG1 (x15 / need-01
					:polarity -
					:ARG1 (x17 / anything
						:ARG1-of (x19 / drink-01)))))))

# ::id 923
# ::snt " Why are you selling those ? " asked the little prince .
(x9 / ask-01
	:ARG1 (x5 / sell-01
		:ARG0 (x4 / you)
		:ARG0 (x12 / prince
			:mod (x11 / little)))
	:ARG0 x12)

# ::id 924
# ::snt " Because they save a tremendous amount of time , " said the merchant .
(x12 / say-01
	:ARG1-of (x2 / cause-01
		:ARG0 (x4 / save-01
			:ARG1 (x9 / time
				:quant (x7 / amount
					:mod (x6 / tremendous)))))
	:ARG0 (x14 / merchandise-01))

# ::id 925
# ::snt " Computations have been made by experts .
(x5 / make-02
	:ARG0 (x7 / person
		:ARG1-of (e / expert-01)))

# ::id 926
# ::snt With these pills , you save fifty - three minutes in every week . "
(x6 / save-01
	:ARG2 (x3 / pill)
	:ARG0 (x5 / you)
	:ARG1 (x10 / temporal-quantity
		:unit (m / minute)
		:quant 3)
	:frequency (xap0 / rate-entity-91
		:ARG2 (x13 / temporal-quantity
			:unit (w / week))))

# ::id 927
# ::snt " And what do I do with those fifty - three minutes ? "
(x2 / and
	:null_edge (x5 / i)
	:time (x9 / date-entity)
	:op2 (x12 / temporal-quantity
		:unit (m / minute)
		:quant 3))

# ::id 928
# ::snt " Anything you like ... "
(x2 / anything
	:ARG0-of (x4 / like-01
		:ARG0 (x3 / you)))

# ::id 929
# ::snt " As for me , " said the little prince to himself , " if I had fifty - three minutes to spend as I liked , I should walk at my leisure toward a spring of fresh water . "
(x7 / say-01
	:ARG1 (x10 / prince
		:mod (x9 / little))
	:ARG1 (x29 / recommend-01
		:ARG1 (x30 / walk-01
			:null_edge (x17 / have-03
				:ARG0 (x16 / i)
				:ARG1 (x23 / spend-02
					:time (x18 / date-entity
						:op1 (x21 / temporal-quantity
							:unit (m / minute)
							:quant 3))
					:condition (x26 / like-01
						:ARG0 (x25 / i))))
			:ARG0 (x28 / i)
			:destination (x33 / leisure)
			:destination (x39 / water
				:mod (x36 / spring)
				:ARG1-of (x38 / fresh-04)))))

# ::id 930
# ::snt Chapter 24 .
(x1 / chapter
	:mod 24)

# ::id 931
# ::snt It was now the eighth day since I had had my accident in the desert , and I had listened to the story of the merchant as I was drinking the last drop of my water supply .
(x17 / and
	:op1 (x6 / day
		:mod (x3 / now))
	:op2 (x12 / accident
		:ARG0 (x8 / i)
		:location (x15 / desert))
	:op2 (x20 / listen-01
		:ARG0 (x18 / i)
		:ARG1 (x23 / story
			:topic (x26 / person
				:ARG0-of (m / merchandise-01)))
		:time (x30 / drink-01
			:ARG0 (x28 / i)
			:ARG1 (x33 / drop-01
				:mod (x32 / last)
				:ARG1 (x37 / supply-01
					:ARG1 (x36 / water))))))

# ::id 932
# ::snt " Ah , "
(x2 / Ah)

# ::id 933
# ::snt I said to the little prince , " these memories of yours are very charming ; but I have not yet succeeded in repairing my plane ; I have nothing more to drink ; and I , too , should be very happy if I could walk at my leisure toward a spring of fresh water ! "
(x17 / contrast-01
	:ARG1 (x2 / say-01
		:ARG0 (x1 / i)
		:ARG1 (x40 / recommend-01
			:ARG1 (x43 / happy
				:null_edge (x36 / i)
				:degree (x38 / too)
				:null_edge (x42 / very)
				:null_edge (x46 / possible-01
					:ARG1-of (xap0 / have-condition-91
						:ARG2 (x47 / walk-01
							:ARG0 (x45 / i)
							:destination (x50 / leisure)
							:destination (x56 / water
								:mod (x53 / spring)
								:ARG1-of (x55 / fresh-04))))))))
	:ARG2 (x6 / prince
		:mod (x5 / little))
	:ARG2 (x35 / and
		:op1 (x29 / have-03
			:ARG0 x1
			:ARG0 (x28 / i)
			:ARG1 (x30 / nothing
				:mod (x31 / more)))))

# ::id 934
# ::snt " My friend the fox - - " the little prince said to me .
(x12 / say-01
	:ARG1 (x3 / have-rel-role-91
		:ARG2 (f / friend)
		:ARG1 (x5 / fox))
	:ARG0 (x11 / prince
		:mod (x10 / little)))

# ::id 935
# ::snt " My dear little man , this is no longer a matter that has anything to do with the fox ! "
(x12 / matter
	:ARG1 (x5 / man
		:mod (x4 / little
			:mod (x3 / dear)))
	:domain (x7 / this)
	:ARG0-of (x14 / have-03
		:polarity -
		:ARG1 (x15 / anything)
		:ARG1 (x20 / fox)))

# ::id 936
# ::snt " Why not ? "
(x / xconcept)

# ::id 937
# ::snt " Because I am about to die of thirst ... "
(x2 / cause-01
	:ARG0 (x3 / i)
	:ARG1 (x7 / die-01
		:ARG1-of (xap0 / cause-01
			:ARG0 (x9 / thirst-01))))

# ::id 938
# ::snt He did not follow my reasoning , and he answered me : " It is a good thing to have had a friend , even if one is about to die .
(x8 / and
	:op1 (x4 / follow-02
		:ARG0 (x1 / he)
		:ARG1 (x6 / reason-01)
		:ARG2 (x23 / have-rel-role-91
			:ARG2 (f / friend)
			:ARG1 (x18 / thing
				:mod (x17 / good)
				:mod (x25 / even
					:op1 (x27 / one)
					:op1 (x31 / die-01)))))
	:op2 (x10 / answer-01
		:ARG0 x1
		:ARG0 (x9 / he)))

# ::id 939
# ::snt I , for instance , am very glad to have had a fox as a friend ... "
(x8 / glad-02
	:ARG1 (x1 / i)
	:degree (x7 / very)
	:ARG0 (x11 / have-03
		:ARG1 (x13 / fox)
		:ARG2 (x16 / friend)))

# ::id 940
# ::snt " He has no way of guessing the danger , "
(x3 / have-03
	:ARG0 (x2 / he)
	:polarity -
	:ARG1 (x5 / way
		:instrument-of (x7 / guess-01)))

# ::id 941
# ::snt I said to myself .
(x2 / say-01
	:ARG0 (x1 / i))

# ::id 942
# ::snt " He has never been either hungry or thirsty .
(x8 / or
	:op1 (x7 / hunger-01
		:ARG0 (x2 / he))
	:op2 (x9 / thirsty
		:domain x2))

# ::id 943
# ::snt A little sunshine is all he needs ... "
(x3 / sunshine
	:mod (x2 / little)
	:ARG1-of (x7 / need-01))

# ::id 944
# ::snt But he looked at me steadily , and replied to my thought : " I am thirsty , too .
(x1 / contrast-01
	:ARG2 (x8 / and
		:op1 (x3 / look-01
			:ARG0 (x2 / he)
			:manner (x6 / steady))
		:op2 (x9 / reply-01
			:ARG0 x2
			:ARG2 (x12 / think-01
				:ARG1 (x17 / thirsty
					:domain (x15 / i)
					:degree (x19 / too))))))

# ::id 945
# ::snt Let us look for a well ... "
(xap0 / multi-sentence
	:ARG1 (x3 / look-02
		:ARG1 (x6 / well)))

# ::id 946
# ::snt I made a gesture of weariness .
(x4 / gesture-01
	:ARG0 (x1 / i)
	:ARG1 (x6 / weariness))

# ::id 947
# ::snt It is absurd to look for a well , at random , in the immensity of the desert .
(x3 / absurd
	:ARG2 (x5 / look-02
		:ARG1 (x8 / well)
		:ARG1 (x11 / random)
		:ARG1 (x15 / immensity
			:location (x18 / desert))))

# ::id 948
# ::snt But nevertheless we started walking .
(x1 / contrast-01
	:ARG2 (x4 / start-01
		:ARG0 (x3 / we)
		:ARG1 (x5 / walk-01)))

# ::id 949
# ::snt When we had trudged along for several hours , in silence , the darkness fell , and the stars began to come out .
(x17 / and
	:op1 (x15 / fall-01
		:time (x4 / trudge
			:ARG0 (x2 / we)
			:duration (x7 / several
				:op1 (x8 / temporal-quantity
					:unit (h / hour)))
			:ARG2 (x11 / silence-01))
		:ARG1 (x14 / darkness))
	:op2 (x20 / begin-01
		:ARG0 x14
		:ARG0 (x19 / star)
		:ARG1 (x22 / come-01
			:ARG1 x19)))

# ::id 950
# ::snt Thirst had made me a little feverish , and I looked at them as if I were in a dream .
(x9 / and
	:op1 (x3 / make-02
		:ARG1 (x7 / feverish
			:degree (x6 / little))
		:ARG1-of (xap0 / cause-01
			:ARG0 (x1 / thirst-01)))
	:op2 (x11 / look-01
		:ARG0 (x10 / i)
		:ARG1 (x20 / dream-01
			:poss (x16 / i))))

# ::id 951
# ::snt The little prince 's last words came reeling back into my memory : " Then you are thirsty , too ? "
(x7 / come-01
	:ARG1 (x6 / word-01
		:poss (x3 / prince
			:mod (x2 / little))
		:mod (x5 / last)
		:quant (x8 / reel
			:ARG1 (x12 / memory))
		:ARG1-of (x18 / thirsty
			:domain (x16 / you)
			:degree (x20 / too))))

# ::id 952
# ::snt I demanded .
(x2 / demand-01
	:ARG0 (x1 / i))

# ::id 953
# ::snt But he did not reply to my question .
(x1 / contrast-01
	:ARG2 (x5 / reply-01
		:ARG1 (x8 / question-01)))

# ::id 954
# ::snt He merely said to me : " Water may also be good for the heart ... "
(x3 / say-01
	:ARG0 (x1 / he)
	:mod (x2 / mere)
	:ARG1 (x12 / good
		:domain (x8 / water)
		:null_edge (x9 / possible-01)
		:mod (x10 / also)
		:ARG2 (x15 / heart)))

# ::id 955
# ::snt I did not understand this answer , but I said nothing .
(x8 / contrast-01
	:ARG1 (x4 / understand-01
		:ARG0 (x1 / i)
		:ARG1 (x6 / answer-01
			:mod (x5 / this)))
	:ARG2 (x10 / say-01
		:ARG0 (x9 / i)
		:ARG1 (x11 / nothing)))

# ::id 956
# ::snt I knew very well that it was impossible to cross - examine him .
(x2 / know-01
	:ARG0 (x1 / i)
	:manner (x4 / well
		:degree (x3 / very))
	:ARG1 (x10 / cross-02
		:ARG0 x1
		:ARG1 (x12 / examine-01)))

# ::id 957
# ::snt He was tired .
(x3 / tire
	:ARG0 (x1 / he))

# ::id 958
# ::snt He sat down .
(x2 / sit-01
	:ARG1 (x1 / he))

# ::id 959
# ::snt I sat down beside him .
(x2 / sit-01
	:ARG1 (x1 / i)
	:ARG2 (x4 / beside))

# ::id 960
# ::snt And , after a little silence , he spoke again : " The stars are beautiful , because of a flower that can not be seen . "
(x1 / and
	:op2 (x9 / speak-01
		:time (x3 / after
			:op1 (x6 / silence-01
				:mod (x5 / little)))
		:ARG0 (x8 / he)
		:mod (x10 / again)
		:ARG1 (x16 / beautiful-02
			:ARG1 (x14 / star)
			:ARG1-of (x18 / cause-01
				:ARG0 (x21 / flower
					:ARG1-of (x26 / see-01
						:ARG1-of (x23 / possible-01)))))))

# ::id 961
# ::snt I replied , " Yes , that is so . "
(x2 / reply-01
	:ARG0 (x1 / i))

# ::id 962
# ::snt And , without saying anything more , I looked across the ridges of sand that were stretched out before us in the moonlight .
(x1 / and
	:op2 (x9 / look-01
		:manner (x4 / say-01
			:ARG1 (x6 / more
				:compared-to (x5 / anything))
			:ARG0 (x8 / i))
		:ARG0 x8
		:ARG1 (x10 / across
			:op1 (x12 / ridge
				:ARG1 (x14 / sand-01)
				:ARG1-of (x17 / stretch-01
					:time (x19 / before)
					:ARG2 (x23 / moonlight-01))))))

# ::id 963
# ::snt " The desert is beautiful , " the little prince added .
(x11 / add-01
	:ARG1 (x5 / beautiful-02
		:ARG1 (x3 / desert))
	:ARG0 (x10 / prince
		:mod (x9 / little)))

# ::id 964
# ::snt And that was true .
(x / xconcept
	:x (x1 / and)
	:x (x4 / true
		:domain (x2 / that)))

# ::id 965
# ::snt I have always loved the desert .
(x4 / love-01
	:ARG0 (x1 / i)
	:time (x3 / always)
	:ARG1 (x6 / desert))

# ::id 966
# ::snt One sits down on a desert sand dune , sees nothing , hears nothing .
(x2 / sit-01
	:ARG1 (x1 / one)
	:direction (x3 / down)
	:ARG2 (x8 / dune
		:location (x6 / desert)
		:mod (x7 / sand-01))
	:null_edge (x10 / see-01
		:ARG1 (x11 / nothing))
	:null_edge (x13 / hear-01
		:ARG1 (x14 / nothing)))

# ::id 967
# ::snt Yet through the silence something throbs , and gleams ...
(x8 / and
	:op1 (x6 / throb
		:ARG2 (x4 / silence-01)
		:ARG0 (x5 / something))
	:op2 (x9 / gleam))

# ::id 968
# ::snt " What makes the desert beautiful , " said the little prince , " is that somewhere it hides a well ... "
(xap0 / multi-sentence
	:ARG1 (x3 / make-02
		:ARG1 (x6 / beautiful-02
			:ARG1 (x5 / desert))
		:ARG0 (x19 / hide-01
			:location (x17 / somewhere)
			:ARG1 (x21 / well)))
	:snt2 (x9 / say-01
		:ARG1 (x12 / prince
			:mod (x11 / little))))

# ::id 969
# ::snt I was astonished by a sudden understanding of that mysterious radiation of the sands .
(x3 / astonish-01
	:ARG1 (x1 / i)
	:ARG0 (x7 / understand-01
		:manner (x6 / sudden)
		:ARG1 (x11 / radiation
			:mod (x9 / that)
			:mod (x10 / mystery)
			:poss (x14 / sand-01))))

# ::id 970
# ::snt When I was a little boy I lived in an old house , and legend told us that a treasure was buried there .
(x14 / and
	:op1 (x8 / live-01
		:time (x6 / boy
			:domain (x2 / i)
			:mod (x5 / little))
		:ARG0 (x7 / i)
		:location (x12 / house
			:mod (x11 / old)))
	:op2 (x16 / tell-01
		:ARG0 x6
		:ARG0 x7
		:ARG0 (x15 / legend)
		:ARG1 (x22 / bury-01
			:ARG1 (x20 / treasure-01)
			:ARG2 (x23 / there))))

# ::id 971
# ::snt To be sure , no one had ever known how to find it ; perhaps no one had ever even looked for it .
(x9 / know-02
	:null_edge (x3 / sure-02)
	:polarity -
	:time (x8 / ever)
	:ARG1 (x12 / find-01))

# ::id 972
# ::snt But it cast an enchantment over that house .
(x1 / contrast-01
	:ARG2 (x3 / cast-01
		:ARG0 (x2 / it)
		:ARG1 (x5 / enchantment)
		:ARG2 (x8 / house)))

# ::id 973
# ::snt My home was hiding a secret in the depths of its heart ...
(x4 / hide-01
	:ARG0 (x2 / home)
	:ARG1 (x6 / secret)
	:location (x9 / depth
		:mod (x12 / heart)))

# ::id 974
# ::snt " Yes , "
(x2 / yes)

# ::id 975
# ::snt I said to the little prince .
(x2 / say-01
	:ARG0 (x1 / i)
	:ARG1 (x6 / prince
		:mod (x5 / little)))

# ::id 976
# ::snt " The house , the stars , the desert - - what gives them their beauty is something that is invisible ! "
(x3 / house
	:null_edge (x18 / something
		:domain (x13 / give-01
			:ARG1 (x16 / beauty))))

# ::id 977
# ::snt " I am glad , " he said , " that you agree with my fox . "
(x8 / say-01
	:ARG1 (x4 / glad-02
		:ARG1 (x2 / i)
		:ARG0 (x13 / agree-01
			:ARG0 (x12 / you)
			:ARG1 (x16 / fox)))
	:ARG0 (x7 / he))

# ::id 978
# ::snt As the little prince dropped off to sleep , I took him in my arms and set out walking once more .
(x16 / and
	:op1 (x11 / take-01
		:null_edge (x5 / drop-05
			:ARG0 (x4 / prince
				:mod (x3 / little))
			:ARG1 (x8 / sleep-over-05))
		:ARG0 (x10 / i)
		:ARG3 (x15 / arm))
	:op2 (x17 / set-02
		:ARG2 (x19 / walk-01
			:degree (x21 / more))))

# ::id 979
# ::snt I felt deeply moved , and stirred .
(x6 / and
	:op1 (x2 / feel-01
		:ARG0 (x1 / i)
		:ARG1 (x4 / move-01
			:ARG1 x1
			:ARG1-of (x3 / deep-02)))
	:op2 (x7 / stir-up-04
		:ARG0 x1))

# ::id 980
# ::snt It seemed to me that I was carrying a very fragile treasure .
(x2 / seem-01
	:ARG1 (x8 / carry-01
		:ARG0 (x6 / i)
		:ARG1 (x12 / treasure-01
			:mod (x11 / fragile
				:degree (x10 / very)))))

# ::id 981
# ::snt It seemed to me , even , that there was nothing more fragile on all Earth .
(x2 / seem-01
	:mod (x6 / even)
	:ARG1 (x11 / nothing
		:mod (x13 / fragile
			:degree (x12 / more))
		:location (x16 / planet
			:name (n / name
				:op1 "Earth")
			:null_edge (x15 / all))))

# ::id 982
# ::snt In the moonlight I looked at his pale forehead , his closed eyes , his locks of hair that trembled in the wind , and I said to myself : " What I see here is nothing but a shell .
(x25 / and
	:op1 (x5 / look-01
		:ARG1 (x3 / moonlight-01)
		:ARG0 (x4 / i)
		:ARG1 (x13 / eye
			:location (x9 / forehead
				:ARG1-of (x8 / pale-03))
			:ARG1-of (x12 / close-01)
			:part-of (x23 / wind
				:mod (x16 / lock-up-03
					:consist-of (x18 / hair
						:part-of (x20 / tremble-01))
					:consist-of x20))))
	:op2 (x27 / say-01
		:ARG0 (x26 / i)
		:ARG1 (x34 / see-01
			:ARG0 (x33 / i)
			:ARG1 (x40 / shell
				:mod (x37 / nothing-more-than
					:location (x35 / here))))))

# ::id 983
# ::snt What is most important is invisible ... "
(x6 / invisible
	:null_edge (x4 / important
		:degree (x3 / most)))

# ::id 984
# ::snt As his lips opened slightly with the suspicious of a half - smile , I said to myself , again : " What moves me so deeply , about this little prince who is sleeping here , is his loyalty to a flower - - the image of a rose that shines through his whole being like the flame of a lamp , even when he is asleep ... "
(x16 / say-01
	:time (x4 / open-01
		:ARG0 (x3 / lip)
		:degree (x5 / slight)
		:accompanier (x8 / suspicious
			:domain (x13 / smile-01)))
	:ARG0 (x15 / i)
	:mod (x20 / again)
	:ARG1 (x40 / loyal-01
		:condition (x24 / move-01
			:ARG1-of (x27 / deep-02
				:degree (x26 / so))
			:ARG0 (x32 / prince
				:mod (x30 / this)
				:mod (x31 / little)
				:ARG0-of (x35 / sleep-01
					:location (x36 / here))))
		:ARG2 (x43 / flower
			:ARG1 (x47 / image
				:poss (x50 / rose
					:ARG0-of (x52 / shine-01
						:mod (x55 / whole)
						:ARG2 (x59 / flame
							:ARG1 (x62 / lamp))
						:mod (x68 / sleep-01
							:op (a / asleep)))
					:mod (x64 / even))))))

# ::id 985
# ::snt And I felt him to be more fragile still .
(x1 / and
	:op2 (x3 / feel-01
		:ARG0 (x2 / i)
		:ARG1 (x8 / fragile
			:degree (x7 / more)
			:mod (x9 / still))))

# ::id 986
# ::snt I felt the need of protecting him , as if he himself were a flame that might be extinguished by a little puff of wind ...
(x2 / feel-01
	:ARG0 (x1 / i)
	:ARG1 (x4 / need-01
		:ARG1 (x6 / protect-01))
	:time (x15 / flame
		:ARG1-of (x19 / extinguish
			:ARG0 (x23 / puff-01
				:mod (x22 / little)
				:ARG1 (x25 / wind)))))

# ::id 987
# ::snt And , as I walked on so , I found the well , at daybreak .
(x / xconcept
	:x (x1 / and)
	:x (x10 / find-01
		:time (x5 / walk-01
			:ARG0 (x4 / i)
			:null_edge (x7 / so))
		:ARG0 (x9 / i)
		:ARG1 (x12 / well)
		:location (x15 / daybreak)))

# ::id 988
# ::snt Chapter 25 .
(x1 / chapter
	:quant 25)

# ::id 989
# ::snt " Men , " said the little prince , " set out on their way in express trains , but they do not know what they are looking for .
(x5 / say-01
	:ARG0 (x2 / man)
	:ARG1 (x18 / train
		:mod (x8 / prince
			:mod (x7 / little))
		:mod (x15 / way)
		:mod (x17 / express)
		:ARG0-of (x24 / know-01
			:ARG0 x8
			:ARG1 (x28 / look-01
				:ARG0 (x26 / they)))))

# ::id 990
# ::snt Then they rush about , and get excited , and turn round and round ... "
(x6 / and
	:op2 (x10 / and
		:op1 (x3 / rush-01
			:time (x1 / then)
			:ARG0 (x2 / they))
		:op2 (x8 / excite-01
			:ARG1 x2)
		:op3 (x11 / turn-01
			:ARG0 x2
			:ARG1 (x13 / and
				:op1 (x12 / round)
				:op2 (x14 / round-05)))))

# ::id 991
# ::snt And he added : " It is not worth the trouble ... "
(x / xconcept
	:x (x1 / and
		:op2 (x3 / add-01
			:ARG0 (x2 / he)))
	:x (xap0 / multi-sentence
		:domain (x6 / it)
		:ARG2 (x11 / trouble-01)))

# ::id 992
# ::snt The well that we had come to was not like the wells of the Sahara .
(x2 / well
	:null_edge (x6 / come-01
		:ARG1 (x4 / we)
		:ARG1 (x12 / well
			:poss (x15 / country
				:name (n / name
					:op1 "Sahara")))))

# ::id 993
# ::snt The wells of the Sahara are mere holes dug in the sand .
(xap0 / and
	:ARG1 (x8 / hole
		:mod (x2 / well
			:poss (x5 / country
				:name (n / name
					:op1 "Sahara")))
		:mod (x7 / mere))
	:op2 (x9 / dig-01
		:ARG2 (x12 / sand-01)))

# ::id 994
# ::snt This one was like a well in a village .
(x2 / one
	:mod (x1 / this
		:part-of (x9 / village)))

# ::id 995
# ::snt But there was no village here , and I thought I must be dreaming ...
(x1 / contrast-01
	:ARG2 (x5 / village
		:polarity -
		:location (x6 / here))
	:ARG2 (x8 / and
		:op2 (x10 / think-01
			:ARG1 (x14 / dream-01
				:ARG0 (x11 / i)))))

# ::id 996
# ::snt " It is strange , "
(x4 / strange
	:ARG0 (x2 / it))

# ::id 997
# ::snt I said to the little prince .
(x2 / say-01
	:ARG0 (x1 / i)
	:ARG1 (x6 / prince
		:mod (x5 / little)))

# ::id 998
# ::snt " Everything is ready for use : the pulley , the bucket , the rope ... "
(x9 / pulley
	:purpose (x4 / ready-02
		:ARG1 (x2 / everything)
		:ARG2 (x6 / use-01)))

# ::id 999
# ::snt He laughed , touched the rope , and set the pulley to working .
(x8 / and
	:op1 (x2 / laugh-01
		:ARG0 (x1 / he))
	:op2 (x4 / touch-01
		:ARG0 x1
		:ARG1 (x6 / rope))
	:op2 (x9 / set-08
		:ARG0 x1
		:ARG1 (x11 / pulley)
		:ARG2 (x13 / work-01)))

# ::id 1000
# ::snt And the pulley moaned , like an old weathervane which the wind has long since forgotten .
(x1 / and
	:op2 (x4 / moan
		:ARG0 (x3 / pulley)
		:ARG1 (x16 / forget-01
			:mod (x8 / old)
			:ARG0 (x12 / wind)
			:time (x15 / since
				:duration (x14 / long-03)))))

# ::id 1001
# ::snt " Do you hear ? " said the little prince .
(x7 / say-01
	:ARG1 (x4 / hear-01
		:ARG0 (x3 / you))
	:ARG1 (x10 / prince
		:mod (x9 / little)))

# ::id 1002
# ::snt " We have wakened the well , and it is singing ... "
(x8 / and
	:op1 (x4 / waken
		:ARG0 (x2 / we)
		:ARG1 (x6 / well))
	:op2 (x11 / sing-01
		:ARG0 x2))

# ::id 1003
# ::snt I did not want him to tire himself with the rope .
(x4 / want-01
	:ARG0 (x1 / i)
	:ARG1 (x7 / tire
		:ARG2 (x11 / rope)))

# ::id 1004
# ::snt " Leave it to me , "
(x2 / leave-13
	:ARG1 (x3 / it))

# ::id 1005
# ::snt I said .
(x2 / say-01
	:ARG0 (x1 / i))

# ::id 1006
# ::snt " It is too heavy for you . "
(x5 / heavy
	:domain (x2 / it)
	:degree (x4 / too)
	:ARG2 (x7 / you))

# ::id 1007
# ::snt I hoisted the bucket slowly to the edge of the well and set it there - - happy , tired as I was , over my achievement .
(x12 / and
	:op1 (x2 / hoist
		:ARG0 (x1 / i)
		:ARG1 (x4 / bucket)
		:manner (x5 / slow)
		:ARG2 (x8 / edge
			:ARG1 (x11 / well))
		:null_edge (x20 / tire-01
			:condition (x18 / happy)
			:ARG1 (x22 / i)
			:ARG0 (x27 / achieve-01)))
	:op2 (x13 / set-02))

# ::id 1008
# ::snt The song of the pulley was still in my ears , and I could see the sunlight shimmer in the still trembling water .
(x2 / person
	:name (n / name
		:op1 "song")
	:ARG1 (x5 / pulley)
	:mod (x7 / still)
	:location (x10 / ear)
	:domain (x12 / and
		:op2 (x14 / possible-01
			:ARG1 (x15 / see-01
				:ARG0 (x13 / i)
				:ARG1 (x18 / shimmer-01
					:ARG1 (x17 / sunlight))
				:ARG1 (x22 / tremble-01
					:ARG1 (x23 / water
						:mod (x21 / still)))))))

# ::id 1009
# ::snt " I am thirsty for this water , " said the little prince .
(x10 / say-01
	:ARG1 (x4 / thirsty
		:ARG0 (x2 / i)
		:ARG1 (x7 / water
			:mod (x6 / this)))
	:ARG0 (x13 / prince
		:mod (x12 / little)))

# ::id 1010
# ::snt " Give me some of it to drink ... "
(x5 / include-91
	:ARG1 (x4 / some)
	:ARG1 (x8 / drink-01))

# ::id 1011
# ::snt And I understood what he had been looking for .
(x1 / and
	:op2 (x3 / understand-01
		:ARG0 (x2 / i)
		:ARG1 (x8 / look-01
			:ARG0 (x5 / he))))

# ::id 1012
# ::snt I raised the bucket to his lips .
(x2 / raise-01
	:ARG0 (x1 / i)
	:ARG1 (x4 / bucket)
	:ARG2 (x7 / lip))

# ::id 1013
# ::snt He drank , his eyes closed .
(x2 / drink-01
	:ARG0 (x1 / he)
	:ARG1 (x6 / close-down-04
		:ARG1 (x5 / eye)))

# ::id 1014
# ::snt It was as sweet as some special festival treat .
(x4 / sweet-04
	:domain (x1 / it)
	:ARG2 (x9 / thing
		:ARG2-of (t / treat-01)
		:quant (x6 / some)
		:ARG1 (x8 / festival
			:ARG1-of (x7 / special-02))))

# ::id 1015
# ::snt This water was indeed a different thing from ordinary nourishment .
(x7 / thing
	:domain (x2 / water
		:mod (x1 / this))
	:mod (x4 / indeed)
	:ARG1-of (x6 / differ-02)
	:source (x10 / nourishment
		:mod (x9 / ordinary)))

# ::id 1016
# ::snt Its sweetness was born of the walk under the stars , the song of the pulley , the effort of my arms .
(x4 / bear-02
	:ARG1 (x2 / sweetness
		:poss (x1 / it))
	:ARG1 (xap0 / and
		:ARG2 (x7 / walk-01
			:compared-to (x10 / star)
			:ARG1 (x22 / arm))
		:ARG2 (x13 / person
			:name (n / name
				:op1 "song")
			:mod (x16 / pulley))))

# ::id 1017
# ::snt It was good for the heart , like a present .
(x3 / good
	:ARG1 (x1 / it)
	:ARG2 (x6 / heart)
	:ARG2 (x10 / present))

# ::id 1018
# ::snt When I was a little boy , the lights of the Christmas tree , the music of the Midnight Mass , the tenderness of smiling faces , used to make up , so , the radiance of the gifts I received .
(x28 / use-01
	:condition (x6 / boy
		:domain (x2 / i)
		:mod (x5 / little))
	:ARG0 (x9 / light
		:poss (x13 / tree
			:mod (x12 / festival
				:name (n / name
					:op1 "Christmas"))
			:mod (x16 / music
				:null_edge 2)
			:ARG1-of (x26 / face
				:ARG0-of (x25 / smile-01))))
	:ARG2 (x30 / make-02
		:ARG0 x6
		:ARG1 (x33 / so)
		:ARG1 (x36 / radiate-01
			:ARG1 (x39 / gift-01
				:ARG1-of (x41 / receive-01
					:ARG0 (x40 / i))))))

# ::id 1019
# ::snt " The men where you live , " said the little prince , " raise five thousand roses in the same garden - - and they do not find in it what they are looking for . "
(x9 / say-01
	:ARG1 (x3 / man)
	:ARG1 (x12 / prince
		:ARG0-of (x6 / live-01
			:ARG0 (x5 / you))
		:mod (x11 / little))
	:ARG1 (x25 / and
		:op1 (x15 / raise-01
			:ARG1 (x18 / rose)
			:location (x22 / garden
				:ARG1-of (x21 / same-01)))
		:op2 (x29 / find-01
			:ARG1 (x35 / look-01
				:ARG0 (x33 / they)))))

# ::id 1020
# ::snt " They do not find it , "
(x5 / find-01
	:ARG0 (x2 / they)
	:ARG1 (x6 / it))

# ::id 1021
# ::snt I replied .
(x2 / reply-01
	:ARG0 (x1 / i))

# ::id 1022
# ::snt " And yet what they are looking for could be found in one single rose , or in a little water . "
(x2 / and
	:op2 (x9 / possible-01
		:ARG1 (x11 / find-01
			:time (x3 / yet)
			:ARG1 (x7 / look-01
				:ARG0 (x5 / they))
			:location (x15 / rise-01
				:quant 1
				:ARG1-of (x14 / single-02)
				:ARG1 (x17 / or)
				:location (x21 / water
					:mod (x20 / little))))))

# ::id 1023
# ::snt " Yes , that is true , "
(x6 / true
	:domain (x4 / that))

# ::id 1024
# ::snt I said .
(x2 / say-01
	:ARG0 (x1 / i))

# ::id 1025
# ::snt And the little prince added : " But the eyes are blind .
(x / xconcept
	:x (x1 / and
		:op2 (x5 / add-01
			:ARG0 (x4 / prince
				:mod (x3 / little)))
		:op2 (x12 / blind-02
			:ARG1 (x10 / eye)))
	:x (x8 / contrast-01))

# ::id 1026
# ::snt One must look with the heart ... "
(x3 / look-01
	:ARG0 (x1 / one)
	:ARG1 (x6 / heart))

# ::id 1027
# ::snt I had drunk the water .
(x2 / have-03
	:ARG1 (x3 / drink-01
		:ARG0 (x1 / i)
		:ARG1 (x5 / water)))

# ::id 1028
# ::snt I breathed easily .
(x2 / breathe-01
	:ARG0 (x1 / i))

# ::id 1029
# ::snt At sunrise the sand is the color of honey .
(x9 / honey
	:mod (x7 / colour
		:domain (x4 / sand-01)))

# ::id 1030
# ::snt And that honey color was making me happy , too .
(x1 / and
	:op2 (x8 / happy
		:ARG0 (x4 / colour
			:mod (x2 / that)
			:consist-of (x3 / honey)))
	:mod (x10 / too))

# ::id 1031
# ::snt What brought me , then , this sense of grief ?
(x2 / bring-01
	:time (x5 / then)
	:ARG1 (x8 / sense-02
		:mod (x7 / this)
		:ARG1 (x10 / grief)))

# ::id 1032
# ::snt " You must keep your promise , " said the little prince , softly , as he sat down beside me once more .
(x9 / say-01
	:ARG1 (x4 / keep-01
		:ARG0 (x2 / you)
		:ARG1 (x6 / promise-01))
	:ARG1 (x12 / prince
		:mod (x11 / little))
	:manner (x14 / softly)
	:time (x18 / person
		:ARG1-of (s / sit-01)
		:ARG2 (x20 / beside)
		:degree (x23 / more)))

# ::id 1033
# ::snt " What promise ? "
(x3 / promise-01)

# ::id 1034
# ::snt " You know - - a muzzle for my sheep ...
(x3 / know-01
	:ARG0 (x2 / you)
	:ARG1 (x7 / muzzle
		:ARG1 (x10 / sheep)))

# ::id 1035
# ::snt I am responsible for this flower ... "
(x3 / responsible-03
	:ARG0 (x1 / i)
	:ARG1 (x6 / flower
		:mod (x5 / this)))

# ::id 1036
# ::snt I took my rough drafts of drawings out of my pocket .
(x2 / take-01
	:ARG0 (x1 / i)
	:ARG1 (x5 / draft-01
		:ARG1-of (x4 / rough-04)
		:ARG1 (x7 / draw-02))
	:ARG1 (x11 / pocket))

# ::id 1037
# ::snt The little prince looked them over , and laughed as he said : " Your baobabs - - they look a little like cabbages . "
(x8 / and
	:op1 (x4 / look-01
		:ARG0 (x3 / prince
			:mod (x2 / little))
		:ARG1 (x6 / over)
		:time (x12 / say-01
			:ARG1 (x9 / laugh-01)
			:ARG1 (x20 / look-01
				:ARG0 (x19 / they)
				:ARG1 (x22 / little)
				:ARG1 (x24 / cabbage)))))

# ::id 1038
# ::snt " Oh ! "
(x2 / oh)

# ::id 1039
# ::snt I had been so proud of my baobabs !
(x5 / pride-01
	:op (p / proud)
	:ARG0 (x1 / i)
	:ARG0 (x8 / baobab))

# ::id 1040
# ::snt " Your fox - - his ears look a little like horns ; and they are too long . "
(x3 / fox
	:null_edge (x14 / and
		:op1 (x8 / look-01
			:ARG1 (x7 / ear)
			:ARG1 (x10 / little)
			:ARG1 (x12 / horn))
		:op2 (x18 / long
			:degree (x17 / too))))

# ::id 1041
# ::snt And he laughed again .
(x1 / and
	:op2 (x3 / laugh-01
		:ARG0 (x2 / he)
		:mod (x4 / again)))

# ::id 1042
# ::snt " You are not fair , little prince , "
(x8 / prince
	:domain (x2 / you)
	:mod (x5 / fair)
	:mod (x7 / little))

# ::id 1043
# ::snt I said .
(x2 / say-01
	:ARG0 (x1 / i))

# ::id 1044
# ::snt " I do n't know how to draw anything except boa constrictors from the outside and boa constrictors from the inside . "
(x5 / know-01
	:ARG0 (x2 / i)
	:ARG1 (x8 / draw-02
		:ARG1 (x16 / and
			:op1 (x12 / constrictor
				:mod (x11 / boa)
				:location (x15 / outside))
			:op2 (x17 / boa
				:mod (x18 / constrictor
					:source (x21 / inside))))))

# ::id 1045
# ::snt " Oh , that will be all right , " he said , " children understand . "
(x12 / say-01
	:ARG1 (x8 / right-02
		:mod (x2 / oh)
		:mod (x7 / all))
	:ARG0 (x11 / he)
	:ARG1 (x16 / understand-01
		:ARG0 (x15 / child)))

# ::id 1046
# ::snt So then I made a pencil sketch of a muzzle .
(x7 / sketch
	:time (x2 / then)
	:ARG0 (x3 / i)
	:mod (x6 / pencil)
	:ARG1 (x10 / muzzle))

# ::id 1047
# ::snt And as I gave it to him my heart was torn .
(x1 / and
	:op2 (x11 / tear-01
		:condition (x4 / give-01
			:ARG0 (x3 / i))
		:ARG1 (x9 / heart)))

# ::id 1048
# ::snt " You have plans that I do not know about , "
(x3 / have-03
	:null_edge (x9 / know-01
		:ARG1 (x4 / plan-01
			:ARG0 (x2 / you))
		:ARG1 (x5 / that)
		:ARG0 (x6 / i)))

# ::id 1049
# ::snt I said .
(x2 / say-01
	:ARG0 (x1 / i))

# ::id 1050
# ::snt But he did not answer me .
(x1 / contrast-01
	:ARG2 (x5 / answer-01))

# ::id 1051
# ::snt He said to me , instead : " You know - - my descent to the earth ...
(x2 / say-01
	:ARG0 (x1 / he)
	:ARG1-of (x6 / instead-of-91)
	:ARG1 (x10 / know-01
		:ARG0 (x9 / you)
		:ARG1 (x14 / descend-01
			:prep-to (x17 / earth))))

# ::id 1052
# ::snt Tomorrow will be its anniversary . "
(x5 / anniversary
	:time (x1 / tomorrow))

# ::id 1053
# ::snt Then , after a silence , he went on : " I came down very near here . "
(x13 / come-01
	:time (x1 / then)
	:time (x3 / after
		:op1 (x5 / silence-01))
	:ARG1 (x7 / he)
	:ARG1 (x12 / i)
	:direction (x14 / down)
	:ARG2 (x16 / near-02
		:degree (x15 / very))
	:location (x17 / here))

# ::id 1054
# ::snt And he flushed .
(x1 / and
	:op2 (x3 / flush
		:ARG0 (x2 / he)))

# ::id 1055
# ::snt And once again , without understanding why , I had a queer sense of sorrow .
(x1 / and
	:mod (x3 / again
		:mod (x2 / once)
		:manner (x6 / understand-01
			:manner (x13 / sense-02
				:ARG0 (x9 / i)
				:ARG1-of (x12 / queer)
				:ARG1 (x15 / thing
					:ARG1-of (s / sorrow-01))))))

# ::id 1056
# ::snt One question , however , occurred to me : " Then it was not by chance that on the morning when I first met you - - a week ago - - you were strolling along like that , all alone , a thousand miles from any inhabited region ?
(x2 / question-01
	:quant 1
	:ARG1 (x35 / stroll-01
		:ARG1-of (x16 / chance-02
			:mod (x11 / then))
		:time (x20 / morning
			:ARG1-of (x24 / meet-03
				:ARG0 (x22 / i)))
		:ARG0 (x33 / you)
		:time (xap0 / before
			:quant (x29 / temporal-quantity
				:unit (w / week)))
		:ARG1-of (xap1 / resemble-01
			:ARG2 (x38 / that
				:quant (x45 / distance-quantity
					:unit (m / mile)
					:source (x49 / region
						:mod (x47 / any)
						:ARG1-of (x48 / inhabit-01)))))))

# ::id 1057
# ::snt You were on the your back to the place where you landed ? "
(x6 / back
	:ARG0 (x1 / you)
	:ARG4 (x9 / place
		:location-of (x12 / land-01
			:ARG0 (x11 / you))))

# ::id 1058
# ::snt The little prince flushed again .
(x4 / flush
	:ARG0 (x3 / prince
		:mod (x2 / little))
	:mod (x5 / again))

# ::id 1059
# ::snt And I added , with some hesitancy : " Perhaps it was because of the anniversary ? "
(x1 / and
	:op2 (x3 / add-01
		:ARG0 (x2 / i)
		:manner (x7 / hesitancy
			:quant (x6 / some))
		:ARG1 (x13 / cause-01
			:ARG0 (x16 / anniversary))))

# ::id 1060
# ::snt The little prince flushed once more .
(x4 / flush
	:ARG0 (x3 / prince
		:mod (x2 / little))
	:degree (x6 / more))

# ::id 1061
# ::snt He never answered questions - - but when one flushes does that not mean " Yes " ?
(x3 / answer-01
	:ARG0 (x1 / he)
	:ARG1 (x4 / question-01)
	:purpose (x14 / mean-01
		:condition (x10 / flush
			:ARG0 (x9 / one))))

# ::id 1062
# ::snt " Ah , "
(x2 / Ah)

# ::id 1063
# ::snt I said to him , " I am a little frightened - - "
(x2 / say-01
	:ARG0 (x1 / i)
	:ARG1 (x11 / frighten-01
		:ARG1 (x7 / i)
		:degree (x10 / little)))

# ::id 1064
# ::snt But he interrupted me .
(x1 / contrast-01
	:ARG2 (x3 / interrupt
		:ARG0 (x2 / he)))

# ::id 1065
# ::snt " Now you must work .
(x5 / work-01
	:time (x2 / now)
	:ARG0 (x3 / you))

# ::id 1066
# ::snt You must return to your engine .
(x3 / return-01
	:ARG0 (x1 / you)
	:ARG4 (x6 / engine
		:poss x1))

# ::id 1067
# ::snt I will be waiting for you here .
(x4 / wait-01
	:ARG1 (x1 / i)
	:ARG2 (x6 / you)
	:location (x7 / here))

# ::id 1068
# ::snt Come back tomorrow evening ... "
(x1 / come-01
	:direction (x2 / back)
	:null_edge (x4 / null_tag
		:part-of (x3 / tomorrow)))

# ::id 1069
# ::snt But I was not reassured .
(x1 / contrast-01
	:ARG2 (x5 / reassure-01
		:ARG1 (x2 / i)))

# ::id 1070
# ::snt I remembered the fox .
(x2 / remember-01
	:ARG0 (x1 / i)
	:ARG1 (x4 / fox))

# ::id 1071
# ::snt One runs the risk of weeping a little , if one lets himself be tamed ...
(x2 / run-02
	:ARG0 (x1 / one)
	:ARG1 (x4 / risk-01
		:ARG2 (x6 / weep-01
			:ARG1 (x8 / little)))
	:time (x12 / let-01
		:ARG0 x1
		:ARG0 (x11 / one)
		:ARG1 (x15 / tame)))

# ::id 1072
# ::snt Chapter 26 .
(x1 / chapter
	:mod 26)

# ::id 1073
# ::snt Beside the well there was the ruin of an old stone wall .
(x3 / well
	:null_edge (x7 / ruin-01
		:ARG1 (x12 / wall
			:mod (x10 / old)
			:mod (x11 / stone))))

# ::id 1074
# ::snt When I came back from my work , the next evening , I saw from some distance away my little price sitting on top of a wall , with his feet dangling .
(x14 / see-01
	:time (x3 / come-01
		:ARG1 (x2 / i)
		:direction (x4 / back)
		:ARG3 (x7 / work-01)
		:null_edge (x11 / null_tag
			:mod (x10 / next)))
	:ARG0 (x13 / i)
	:ARG2 (x17 / distance-01
		:quant (x16 / some))
	:direction (x18 / away)
	:ARG1 (x22 / sit-01
		:ARG1 (x21 / price-01
			:quant (x20 / little))
		:ARG2 (x24 / top
			:ARG1 (x27 / wall))
		:ARG2 (x32 / dangle)))

# ::id 1075
# ::snt And I heard him say : " Then you do n't remember .
(x1 / and
	:op2 (x3 / hear-01
		:ARG0 (x2 / i)
		:ARG1 (x5 / say-01)
		:time (x8 / then)
		:ARG1 (x12 / remember-01
			:ARG0 (x9 / you))))

# ::id 1076
# ::snt This is not the exact spot . "
(x6 / spot
	:domain (x1 / this)
	:mod (x5 / exact))

# ::id 1077
# ::snt Another voice must have answered him , for he replied to it : " Yes , yes !
(x5 / answer-01
	:ARG0 (x2 / voice
		:mod (x1 / another)
		:ARG1-of (x10 / reply-01)))

# ::id 1078
# ::snt It is the right day , but this is not the place . "
(x5 / day
	:mod (x4 / right
		:op2 (x12 / place
			:domain (x8 / this))))

# ::id 1079
# ::snt I continued my walk toward the wall .
(x2 / continue-01
	:ARG0 (x1 / i)
	:ARG1 (x4 / walk-01)
	:time (x5 / toward
		:op1 (x7 / wall)))

# ::id 1080
# ::snt At no time did I see or hear anyone .
(x7 / or
	:op1 (x6 / see-01
		:time (x3 / time
			:polarity -)
		:ARG0 (x5 / i)
		:ARG1 (x9 / anyone))
	:op2 (x8 / hear-01))

# ::id 1081
# ::snt The little prince , however , replied once again : " -- Exactly .
(x7 / reply-01
	:ARG0 (x3 / prince
		:mod (x2 / little))
	:mod (x9 / again
		:mod (x8 / once))
	:mod (x13 / exact))

# ::id 1082
# ::snt You will see where my track begins , in the sand .
(x3 / see-01
	:ARG0 (x1 / you)
	:condition (x7 / begin-01
		:ARG1 (x6 / track))
	:medium (x11 / sand-01))

# ::id 1083
# ::snt You have nothing to do but wait for me there .
(x6 / contrast-01
	:ARG1 (x2 / have-03
		:ARG0 (x1 / you)
		:ARG1 (x3 / nothing))
	:ARG2 (x5 / do-02)
	:ARG2 (x7 / wait-01))

# ::id 1084
# ::snt I shall be there tonight . "
(x5 / tonight
	:null_edge (x1 / i))

# ::id 1085
# ::snt I was only twenty metres from the wall , and I still saw nothing .
(x10 / and
	:null_edge (x1 / i)
	:mod (x3 / only
		:op1 (x5 / metre)
		:op1 (x8 / wall))
	:op2 (x13 / see-01
		:ARG0 (x11 / i)
		:mod (x12 / still)
		:ARG1 (x14 / nothing)))

# ::id 1086
# ::snt After a silence the little prince spoke again : " You have good poison ?
(x12 / have-03
	:time (x1 / after
		:op1 (x7 / speak-01
			:ARG0 (x3 / silence-01)
			:ARG0 (x6 / prince
				:mod (x5 / little))
			:mod (x8 / again)))
	:ARG1 (x14 / poison-02
		:ARG0 (x11 / you)
		:mod (x13 / good)))

# ::id 1087
# ::snt You are sure that it will not make me suffer too long ? "
(x3 / sure-02
	:ARG0 (x1 / you)
	:ARG1 (x8 / make-02
		:ARG1 (x10 / suffer-01
			:ARG1-of (x12 / long-03
				:degree (x11 / too)))))

# ::id 1088
# ::snt I stopped in my tracks , my heart torn asunder ; but still I did not understand .
(x / xconcept
	:x (x11 / and
		:op1 (x2 / stop-01
			:ARG0 (x1 / i)
			:ARG1 (x5 / track)
			:ARG1 (x9 / tear-down-05
				:ARG1 (x8 / heart)
				:ARG2 (x10 / asunder)))
		:op2 (x17 / understand-01
			:mod (x13 / still)
			:ARG0 (x14 / i))))

# ::id 1089
# ::snt " Now go away , " said the little prince .
(x7 / say-01
	:ARG1 (x3 / go-02
		:time (x2 / now)
		:direction (x4 / away))
	:ARG0 (x10 / prince
		:mod (x9 / little)))

# ::id 1090
# ::snt " I want to get down from the wall . "
(x3 / want-01
	:ARG0 (x2 / i)
	:ARG1 (x5 / get-01
		:ARG0 x2
		:ARG2 (x9 / wall)))

# ::id 1091
# ::snt I dropped my eyes , then , to the foot of the wall - - and I leaped into the air .
(x16 / and
	:op1 (x2 / drop-01
		:ARG0 (x1 / i)
		:ARG1 (x4 / eye
			:time (x6 / then))
		:ARG4 (x10 / foot
			:ARG1 (x13 / wall)))
	:op2 (x18 / leap
		:ARG0 (x17 / i)
		:ARG4 (x21 / air)))

# ::id 1092
# ::snt There before me , facing the little prince , was one of those yellow snakes that take just thirty seconds to bring your life to an end .
(x5 / face-01
	:time (x2 / before)
	:ARG1 (x8 / prince
		:mod (x7 / little))
	:ARG1 (x15 / snake
		:mod (x14 / yellow-02)
		:ARG1-of (x17 / take-01
			:ARG1 (x20 / temporal-quantity
				:unit (s / second)
				:mod (x18 / just)
				:ARG1-of (x22 / bring-01
					:ARG1 (x24 / life)
					:ARG2 (x27 / end-01))))))

# ::id 1093
# ::snt Even as I was digging into my pocked to get out my revolver I made a running step back .
(x15 / make-02
	:concession (x1 / even-if
		:op1 (x5 / dig-04
			:ARG0 (x3 / i)
			:destination (x8 / pock)
			:purpose (x10 / get-01
				:ARG1 (x13 / revolver))))
	:ARG0 (x14 / i)
	:ARG1 (x18 / step
		:mod (x17 / have-rel-role-91
			:ARG2 (r / running-mate))
		:mod (x19 / back)))

# ::id 1094
# ::snt But , at the noise I made , the snake let himself flow easily across the sand like the dying spray of a fountain , and , in no apparent hurry , disappeared , with a light metallic sound , among the stones .
(x1 / contrast-01
	:ARG2 (x11 / let-01
		:ARG1 (x5 / noise
			:ARG0-of (x7 / make-02
				:ARG0 (x6 / i)))
		:ARG0 (x10 / snake)
		:ARG1 (x13 / flow-01
			:location (x15 / across
				:op1 (x17 / sand-01
					:ARG1-of (x21 / spray-01
						:ARG2 (x20 / die-01)
						:ARG1 (x24 / fountain)))))
		:ARG1 (x26 / and
			:op2 (x33 / disappear-01
				:location (x31 / hurry-01
					:mod (x30 / apparent
						:polarity -))
				:accompanier (x39 / thing
					:ARG1-of (s / sound-02)
					:ARG1-of (x37 / light-06)
					:mod (x38 / metallic))
				:ARG1 (x43 / stone)))))

# ::id 1095
# ::snt I reached the wall just in time to catch my little man in my arms ; his face was white as snow .
(x / xconcept
	:x (x16 / and
		:op1 (x2 / reach-01
			:ARG0 (x1 / i)
			:ARG1 (x4 / wall)
			:time (x7 / time
				:mod (x5 / just)
				:purpose (x9 / catch-02
					:ARG1 (x12 / man
						:mod (x11 / little))
					:ARG2 (x15 / arm)))
			:null_edge (x20 / white
				:domain (x18 / face)
				:domain (x22 / snow)))))

# ::id 1096
# ::snt " What does this mean ? "
(x5 / mean-01
	:ARG1 (x4 / this))

# ::id 1097
# ::snt I demanded .
(x2 / demand-01
	:ARG0 (x1 / i))

# ::id 1098
# ::snt " Why are you talking with snakes ? "
(x5 / talk-01
	:ARG0 (x4 / you)
	:ARG2 (x7 / snake))

# ::id 1099
# ::snt I had loosened the golden muffler that he always wore .
(x3 / loosen-01
	:ARG0 (x1 / i)
	:ARG1 (x6 / muffler
		:mod (x5 / gold)
		:ARG1-of (x10 / wear-01
			:time (x9 / always))))

# ::id 1100
# ::snt I had moistened his temples , and had given him some water to drink .
(x7 / and
	:op1 (x3 / moisten
		:ARG0 (x1 / i)
		:ARG1 (x5 / temple))
	:op2 (x9 / give-01
		:ARG1 (x12 / water
			:quant (x11 / some)
			:ARG1-of (x14 / drink-01))))

# ::id 1101
# ::snt And now I did not dare ask him any more questions .
(x1 / and
	:op2 (x6 / dare-01
		:time (x2 / now)
		:ARG0 (x3 / i)
		:ARG2 (x7 / ask-02
			:ARG1 (x11 / question-01
				:mod (x9 / any)
				:quant (x10 / more)))))

# ::id 1102
# ::snt He looked at me very gravely , and put his arms around my neck .
(x8 / and
	:op1 (x2 / look-01
		:ARG0 (x1 / he)
		:manner (x6 / grave
			:degree (x5 / very)))
	:op2 (x9 / put-01
		:ARG0 x1
		:ARG1 (x11 / arm)
		:ARG2 (x12 / around
			:op1 (x14 / neck))))

# ::id 1103
# ::snt I felt his heart beating like the heart of a dying bird , shot with someone 's rifle ...
(x14 / shoot-02
	:ARG1 (x2 / feel-01
		:ARG0 (x1 / i)
		:ARG1 (x5 / beat-01
			:ARG0 (x4 / heart))
		:manner (x8 / heart
			:part-of (x12 / bird
				:ARG1-of (x11 / die-01))))
	:ARG1 (x18 / rifle
		:poss (x16 / someone)))

# ::id 1104
# ::snt " I am glad that you have found what was the matter with your engine , " he said .
(x19 / say-01
	:ARG1 (x4 / glad-02
		:ARG1 (x2 / i)
		:ARG0 (x8 / find-01
			:ARG0 (x6 / you)
			:ARG1 (x12 / matter-01
				:ARG1 (x15 / engine))))
	:ARG0 (x18 / he))

# ::id 1105
# ::snt " Now you can go back home - - "
(x4 / possible-01
	:ARG1 (x5 / go-02
		:time (x2 / now)
		:ARG0 (x3 / you)
		:direction (x6 / back)
		:ARG4 (x7 / home)))

# ::id 1106
# ::snt " How do you know about that ? "
(x5 / know-01
	:ARG0 (x4 / you)
	:ARG1 (x7 / that))

# ::id 1107
# ::snt I was just coming to tell him that my work had been successful , beyond anything that I had dared to hope .
(x4 / come-01
	:ARG0 (x1 / i)
	:mod (x3 / just)
	:ARG1 (x6 / tell-01
		:ARG0 x1
		:ARG1 (x13 / succeed-01
			:ARG0 (x10 / work-01)
			:degree (x15 / beyond
				:op1 (x16 / anything
					:ARG1-of (x20 / dare-01
						:ARG0 (x18 / i)
						:ARG2 (x22 / hope-01
							:ARG0 x18)))))))

# ::id 1108
# ::snt He made no answer to my question , but he added : " I , too , am going back home today ... "
(x4 / answer-01
	:ARG0 (x1 / he)
	:polarity -
	:ARG1 (x7 / question-01)
	:null_edge (x9 / contrast-01
		:ARG2 (x11 / add-01))
	:mod (x21 / home
		:poss (x14 / i
			:direction (x20 / back)
			:time (x22 / today))
		:degree (x16 / too)))

# ::id 1109
# ::snt Then , sadly - - " It is much farther ... it is much more difficult ... "
(x16 / difficult
	:null_edge (x10 / null_tag
		:degree (x9 / much
			:time (x1 / then)))
	:degree (x15 / more
		:mod (x14 / much)))

# ::id 1110
# ::snt I realised clearly that something extraordinary was happening .
(x2 / realise
	:ARG0 (x1 / i)
	:ARG1-of (x3 / clear-06)
	:ARG1 (x5 / something
		:mod (x6 / extraordinary)))

# ::id 1111
# ::snt I was holding him close in my arms as if he were a little child ; and yet it seemed to me that he was rushing headlong toward an abyss from which I could do nothing to restrain him ...
(x / xconcept
	:x (x16 / and
		:op2 (x15 / child
			:mod (x14 / little))
		:op1 (x20 / seem-01
			:ARG1 (x3 / hold-01
				:ARG0 (x1 / i)
				:ARG0 (x5 / close-10)
				:ARG1 (x8 / arm))
			:time (x18 / yet)
			:ARG1 (x26 / rush-01
				:ARG1 (x24 / he)
				:manner (x27 / headlong)
				:ARG1 (x30 / abyss
					:purpose (x38 / restrain-01
						:ARG0 (x33 / i)
						:ARG1-of (x34 / possible-01)))))))

# ::id 1112
# ::snt His look was very serious , like some one lost far away .
(x5 / serious
	:domain (x2 / look-01)
	:degree (x4 / very)
	:ARG2 (x10 / lose-02
		:ARG2 (x8 / some)
		:ARG2 (x12 / away
			:mod (x11 / far))))

# ::id 1113
# ::snt " I have your sheep .
(x3 / have-03
	:ARG0 (x2 / i)
	:ARG1 (x5 / sheep))

# ::id 1114
# ::snt And I have the sheep 's box .
(x1 / and
	:op2 (x3 / have-03
		:ARG0 (x2 / i)
		:ARG1 (x5 / sheep
			:ARG1 (x7 / box))))

# ::id 1115
# ::snt And I have the muzzle ... "
(x1 / and
	:op2 (x3 / have-03
		:ARG0 (x2 / i)
		:ARG1 (x5 / muzzle)))

# ::id 1116
# ::snt And he gave me a sad smile .
(x1 / and
	:op2 (x3 / give-01
		:ARG0 (x2 / he)
		:ARG1 (x7 / smile-01
			:ARG0-of (x6 / sad-02))))

# ::id 1117
# ::snt I waited a long time .
(x2 / wait-01
	:ARG1 (x1 / i)
	:ARG1-of (x4 / long-03))

# ::id 1118
# ::snt I could see that he was reviving little by little .
(x2 / possible-01
	:ARG1 (x3 / see-01
		:ARG0 (x1 / i)
		:ARG1 (x7 / revive-01
			:ARG1 (x8 / little)
			:manner (x10 / little))))

# ::id 1119
# ::snt " Dear little man , "
(x4 / man
	:mod (x2 / dear)
	:mod (x3 / little))

# ::id 1120
# ::snt I said to him , " you are afraid ... "
(x2 / say-01
	:ARG0 (x1 / i)
	:null_edge (x9 / fear-01
		:op (a / afraid)))

# ::id 1121
# ::snt He was afraid , there was no doubt about that .
(x3 / fear-01
	:op (a / afraid)
	:ARG0 (x1 / he)
	:ARG0 (x8 / doubt-01
		:polarity -
		:ARG1 (x10 / that)))

# ::id 1122
# ::snt But he laughed lightly .
(x1 / contrast-01
	:ARG2 (x3 / laugh-01
		:ARG0 (x2 / he)
		:manner (x4 / light-06)))

# ::id 1123
# ::snt " I shall be much more afraid this evening ... "
(x7 / fear-01
	:op (a / afraid)
	:ARG0 (x2 / i)
	:degree (x6 / more
		:degree (x5 / much))
	:null_edge (x9 / null_tag
		:mod (x8 / this)))

# ::id 1124
# ::snt Once again I felt myself frozen by the sense of something irreparable .
(x4 / feel-01
	:mod (x2 / again
		:mod (x1 / once))
	:ARG0 (x3 / i)
	:ARG1 (x6 / freeze-02
		:ARG0 x3
		:ARG0 (x9 / sense
			:ARG1 (x11 / something
				:mod (x12 / irreparable)))))

# ::id 1125
# ::snt And I knew that I could not bear the thought of never hearing that laughter any more .
(x1 / and
	:op2 (x3 / know-01
		:ARG0 (x2 / i)
		:ARG1 (x6 / possible-01
			:ARG1 (x8 / bear-02
				:ARG0 (x5 / i)
				:ARG1 (x10 / think-01
					:ARG1 (x13 / hear-01
						:ARG1 (x15 / laughter)
						:degree (x17 / more
							:mod (x16 / any))))))))

# ::id 1126
# ::snt For me , it was like a spring of fresh water in the desert .
(x11 / water
	:ARG1-of (x10 / fresh-04)
	:location (x14 / desert)
	:ARG1-of (xap0 / resemble-01
		:season (x8 / spring)))

# ::id 1127
# ::snt " Little man , "
(x3 / man
	:mod (x2 / little))

# ::id 1128
# ::snt I said , " I want to hear you laugh again . "
(x6 / want-01
	:ARG1 (x2 / say-01
		:ARG0 (x1 / i))
	:ARG0 (x5 / i)
	:ARG1 (x8 / hear-01
		:ARG0 x5
		:ARG1 (x10 / laugh-01
			:ARG0 (x9 / you)
			:mod (x11 / again))))

# ::id 1129
# ::snt But he said to me : " Tonight , it will be a year ... my star , then , can be found right above the place where I came to the Earth , a year ago ... "
(x1 / contrast-01
	:ARG2 (x3 / say-01
		:ARG0 (x2 / he)
		:ARG1 (x21 / possible-01
			:time (x8 / event
				:name (n / name
					:op1 "Tonight"))
			:ARG1 (x23 / find-01
				:ARG1 (x17 / star)
				:location (x25 / above
					:mod (x24 / right)
					:op1 (x27 / place
						:location-of (x30 / come-out-09
							:ARG0 (x29 / i)
							:ARG4 (x33 / planet
								:name (n1 / name
									:op1 "Earth")))))
				:time (xap0 / before
					:quant (x36 / temporal-quantity
						:unit (y / year)))))))

# ::id 1130
# ::snt " Little man , "
(x3 / man
	:mod (x2 / little))

# ::id 1131
# ::snt I said , " tell me that it is only a bad dream - - this affair of the snake , and the meeting - place , and the star ... "
(x2 / say-01
	:ARG0 (x1 / i)
	:ARG1 (x5 / tell-01
		:ARG1 (x22 / and
			:op1 (x13 / dream-01
				:mod (x10 / only)
				:ARG1-of (x12 / bad-07))
			:op1 (x17 / affair
				:mod (x16 / this)
				:mod (x20 / snake)
				:null_edge (x28 / and
					:op2 (x26 / place
						:location-of (x24 / meet-03)))
				:mod (x30 / star)))))

# ::id 1132
# ::snt But he did not answer my plea .
(x1 / contrast-01
	:ARG2 (x5 / answer-01
		:ARG1 (x7 / plead-02)))

# ::id 1133
# ::snt He said to me , instead : " The thing that is important is the thing that is not seen ... "
(x2 / say-01
	:ARG0 (x1 / he)
	:ARG1-of (x6 / instead-of-91)
	:ARG1 (x16 / thing
		:null_edge (x13 / important)
		:ARG1-of (x20 / see-01)))

# ::id 1134
# ::snt " Yes , I know ... "
(x5 / know-01
	:ARG0 (x4 / i))

# ::id 1135
# ::snt " It is just as it is with the flower .
(x10 / flower
	:mod (x4 / just))

# ::id 1136
# ::snt If you love a flower that lives on a star , it is sweet to look at the sky at night .
(x14 / sweet-04
	:concession (x3 / love-01
		:ARG0 (x2 / you)
		:ARG1 (x5 / flower
			:ARG1-of (x7 / life
				:location (x10 / star))))
	:ARG1 (x16 / look-02
		:ARG1 (x19 / sky)
		:time (x21 / night)))

# ::id 1137
# ::snt All the stars are a - bloom with flowers ... "
(x7 / bloom
	:ARG1 (x3 / star
		:quant (x1 / all))
	:ARG1 (x9 / flower))

# ::id 1138
# ::snt " Yes , I know ... "
(x5 / know-01
	:ARG0 (x4 / i))

# ::id 1139
# ::snt " It is just as it is with the water .
(x10 / water
	:mod (x4 / just))

# ::id 1140
# ::snt Because of the pulley , and the rope , what you gave me to drink was like music .
(x1 / cause-01
	:ARG0 (x6 / and
		:op1 (x4 / pulley)
		:op2 (x8 / rope))
	:ARG0 (x12 / give-01
		:ARG0 (x11 / you)
		:purpose (x15 / drink-01
			:ARG0 x11))
	:ARG0 (x18 / music))

# ::id 1141
# ::snt You remember - - how good it was . "
(x2 / remember-01
	:ARG0 (x1 / you)
	:ARG1 (x6 / good))

# ::id 1142
# ::snt " Yes , I know ... "
(x5 / know-01
	:ARG0 (x4 / i))

# ::id 1143
# ::snt " And at night you will look up at the stars .
(x2 / and
	:op2 (x7 / look-01
		:time (x4 / night)
		:ARG0 (x5 / you)
		:ARG1 (x11 / star)))

# ::id 1144
# ::snt Where I live everything is so small that I can not show you where my star is to be found .
(x10 / possible-01
	:condition (x3 / live-01
		:ARG0 (x2 / i)
		:ARG1 (x4 / everything))
	:ARG1 (x6 / so)
	:ARG1 (x12 / show-01
		:ARG0 (x9 / i)
		:ARG1 (x13 / you)
		:ARG1 (x16 / star
			:domain (x20 / find-01))))

# ::id 1145
# ::snt It is better , like that .
(x3 / good
	:domain (x1 / it)
	:ARG2 (x6 / that))

# ::id 1146
# ::snt My star will just be one of the stars , for you .
(x2 / star
	:mod (x4 / just)
	:poss (x9 / star)
	:beneficiary (x12 / you))

# ::id 1147
# ::snt And so you will love to watch all the stars in the heavens ... they will all be your friends .
(x1 / and
	:op2 (x5 / love-02
		:degree (x2 / so)
		:ARG0 (x3 / you)
		:ARG1 (x7 / watch-01
			:ARG0 x3
			:ARG1 (x10 / star
				:quant (x8 / all))
			:medium (x13 / heaven))
		:ARG0 (xap0 / person
			:ARG0-of (x20 / have-rel-role-91
				:ARG2 (f / friend)))))

# ::id 1148
# ::snt And , besides , I am going to make you a present ... "
(x1 / and
	:op2 (x9 / make-02
		:ARG0 (x5 / i)
		:ARG0 (x10 / you)
		:ARG1 (x12 / present)))

# ::id 1149
# ::snt He laughed again .
(x2 / laugh-01
	:ARG0 (x1 / he)
	:mod (x3 / again))

# ::id 1150
# ::snt " Ah , little prince , dear little prince !
(x9 / prince
	:mod (x2 / ah)
	:mod (x4 / little)
	:mod (x7 / dear)
	:mod (x8 / little))

# ::id 1151
# ::snt I love to hear that laughter ! "
(x2 / love-01
	:ARG0 (x1 / i)
	:ARG1 (x4 / hear-01
		:ARG0 x1
		:ARG1 (x6 / laughter)))

# ::id 1152
# ::snt " That is my present .
(x5 / present-02
	:ARG1 (x2 / that))

# ::id 1153
# ::snt Just that .
(x2 / that
	:null_edge (x1 / just))

# ::id 1154
# ::snt It will be as it was when we drank the water ... "
(x9 / drink-01
	:ARG0 (x8 / we)
	:ARG1 (x11 / water))

# ::id 1155
# ::snt " What are you trying to say ? "
(x5 / try-01
	:ARG0 (x4 / you)
	:ARG1 (x7 / say-01
		:ARG0 x4))

# ::id 1156
# ::snt " All men have the stars , " he answered , " but they are not the same things for different people .
(x6 / star
	:ARG1 (x3 / man
		:quant (x2 / all))
	:ARG1-of (x10 / answer-01
		:ARG0 (x9 / he))
	:null_edge (x13 / contrast-01
		:ARG1 (x19 / thing
			:domain (x14 / they)
			:ARG1-of (x18 / same-01)
			:ARG1-of (x21 / differ-02))))

# ::id 1157
# ::snt For some , who are travelers , the stars are guides .
(x11 / guide-01
	:ARG1 (x6 / person
		:ARG0-of (t / travel-01)
		:quant (x2 / some))
	:ARG0 (x9 / star))

# ::id 1158
# ::snt For others they are no more than little lights in the sky .
(x6 / more
	:compared-to (x2 / other)
	:polarity -
	:compared-to (x9 / light
		:mod (x8 / little)
		:location (x12 / sky)))

# ::id 1159
# ::snt For others , who are scholars , they are problems .
(x10 / problem
	:topic (x6 / scholar)
	:domain (x8 / they))

# ::id 1160
# ::snt For my businessman they were wealth .
(x6 / wealth
	:null_edge (x3 / businessman))

# ::id 1161
# ::snt But all these stars are silent .
(x1 / contrast-01
	:ARG2 (x6 / silent
		:ARG0 (x4 / star
			:mod (x2 / all))))

# ::id 1162
# ::snt You - - you alone - - will have the stars as no one else has them - - "
(x4 / you
	:null_edge (x1 / you)
	:null_edge (x11 / star
		:mod (x5 / alone)
		:null_edge (x16 / have-03
			:polarity -
			:ARG1 (x15 / else))))

# ::id 1163
# ::snt " What are you trying to say ? "
(x5 / try-01
	:ARG0 (x4 / you)
	:ARG1 (x7 / say-01
		:ARG0 x4))

# ::id 1164
# ::snt " In one of the stars I shall be living .
(x10 / live-01
	:location (x6 / star)
	:ARG0 (x7 / i))

# ::id 1165
# ::snt In one of them I shall be laughing .
(x8 / laugh-01
	:ARG3 (x2 / one)
	:ARG0 (x5 / i))

# ::id 1166
# ::snt And so it will be as if all the stars were laughing , when you look at the sky at night ... you - - only you - - will have stars that can laugh ! "
(x1 / and
	:op2 (x32 / star
		:condition (x12 / laugh-01
			:ARG0 (x10 / star
				:quant (x8 / all)))
		:condition (x16 / look-01
			:ARG0 (x15 / you)
			:ARG1 (x19 / sky)
			:time (x21 / night)
			:ARG0 (x23 / you)
			:ARG0 (x27 / you
				:mod (x26 / only)))
		:ARG0-of (x35 / laugh-01
			:ARG1-of (x34 / possible-01))))

# ::id 1167
# ::snt And he laughed again .
(x1 / and
	:op2 (x3 / laugh-01
		:ARG0 (x2 / he)
		:mod (x4 / again)))

# ::id 1168
# ::snt " And when your sorrow is comforted ( time soothes all sorrows ) you will be content that you have known me .
(x / xconcept
	:x (x2 / and)
	:x (x17 / content-01
		:null_edge (x7 / comfort-01
			:ARG1 (x5 / thing
				:ARG1-of (s / sorrow-01))
			:ARG0 (x14 / you))
		:null_edge (x10 / soothe
			:ord-of x7
			:time (x9 / time)
			:ARG1 (x12 / thing
				:ARG1-of (s1 / sorrow-01)
				:quant (x11 / all)))
		:domain x14
		:ARG1-of (x21 / know-02
			:ARG0 (x19 / you))))

# ::id 1169
# ::snt You will always be my friend .
(x6 / have-rel-role-91
	:ARG2 (f / friend)
	:ARG0 (x1 / you)
	:time (x3 / always))

# ::id 1170
# ::snt You will want to laugh with me .
(x3 / want-01
	:ARG0 (x1 / you)
	:ARG1 (x5 / laugh-01))

# ::id 1171
# ::snt And you will sometimes open your window , so , for that pleasure ... and your friends will be properly astonished to see you laughing as you look up at the sky !
(x1 / and
	:op2 (x5 / open-01
		:ARG0 (x2 / you)
		:frequency (x4 / sometimes)
		:ARG1 (x7 / window)
		:degree (x9 / so)
		:ARG3 (x13 / pleasure
			:mod (x12 / that))
		:ARG3 (x15 / and))
	:op2 (x21 / astonish-01
		:ARG1 x2
		:manner (x20 / proper)
		:ARG0 (x23 / see-01
			:ARG1 (x25 / laugh-01
				:ARG0 (x24 / you)
				:condition (x28 / look-01
					:ARG0 (x27 / you)
					:ARG1 (x32 / sky))))
		:ARG0 (xap0 / person
			:ARG0-of (x17 / have-rel-role-91
				:ARG2 (f / friend)))))

# ::id 1172
# ::snt Then you will say to them , ' Yes , the stars always make me laugh ! ' And they will think you are crazy .
(x19 / and
	:op2 (x4 / say-01
		:time (x1 / then)
		:ARG0 (x2 / you)
		:ARG0 (x12 / star
			:time (x13 / always)
			:ARG1 (x16 / laugh-01)))
	:op2 (x22 / think-01
		:ARG0 x2
		:ARG1 (x25 / crazy-03
			:ARG1 (x23 / you))))

# ::id 1173
# ::snt It will be a very shabby trick that I shall have played on you ... "
(x7 / trick
	:domain (x1 / it)
	:mod (x6 / shabby
		:degree (x5 / very))
	:ARG1-of (x12 / play-02
		:ARG0 (x9 / i)
		:ARG2 (x14 / you)))

# ::id 1174
# ::snt And he laughed again .
(x1 / and
	:op2 (x3 / laugh-01
		:ARG0 (x2 / he)
		:mod (x4 / again)))

# ::id 1175
# ::snt " It will be as if , in place of the stars , I had given you a great number of little bells that knew how to laugh ... "
(x12 / star
	:domain (x14 / i)
	:domain (x17 / you)
	:ARG1 (x23 / bell
		:quant (x20 / number
			:mod (x19 / great))
		:mod (x22 / little)
		:ARG0-of (x25 / person
			:ARG0-of (k / know-02)
			:ARG1 (x28 / laugh-01))))

# ::id 1176
# ::snt And he laughed again .
(x1 / and
	:op2 (x3 / laugh-01
		:ARG0 (x2 / he)
		:mod (x4 / again)))

# ::id 1177
# ::snt Then he quickly became serious : " Tonight - - you know ... do not come , " said the little prince .
(x19 / say-01
	:ARG1 (x16 / come-01
		:ARG2 (x4 / become-01
			:time (x1 / then)
			:ARG1 (x2 / he)
			:ARG2 (x5 / serious-01
				:ARG1 x2
				:ARG1-of (x3 / quick-02)))
		:ARG1 (x8 / publication
			:name (n / name
				:op1 "Tonight"))
		:null_edge (x12 / know-01
			:ARG0 (x11 / you)))
	:ARG0 (x22 / prince
		:mod (x21 / little)))

# ::id 1178
# ::snt " I shall not leave you , "
(x5 / leave-11
	:ARG0 (x2 / i)
	:ARG1 (x6 / you))

# ::id 1179
# ::snt I said .
(x2 / say-01
	:ARG0 (x1 / i))

# ::id 1180
# ::snt " I shall look as if I were suffering .
(x4 / look-01
	:ARG0 (x2 / i)
	:condition (x9 / suffer-01
		:ARG0 (x7 / i)))

# ::id 1181
# ::snt I shall look a little as if I were dying .
(x3 / look-01
	:ARG0 (x1 / i)
	:ARG1 (x5 / little)
	:null_edge (x10 / die-05
		:ARG1 (x8 / i)))

# ::id 1182
# ::snt It is like that .
(x4 / that)

# ::id 1183
# ::snt Do not come to see that .
(x3 / come-01
	:purpose (x5 / see-01))

# ::id 1184
# ::snt It is not worth the trouble ... "
(xap0 / multi-sentence
	:domain (x1 / it)
	:ARG2 (x6 / trouble-01))

# ::id 1185
# ::snt " I shall not leave you . "
(x5 / leave-11
	:ARG0 (x2 / i)
	:ARG1 (x6 / you))

# ::id 1186
# ::snt But he was worried .
(x1 / contrast-01
	:ARG2 (x4 / worry-02
		:ARG0 (x2 / he)))

# ::id 1187
# ::snt " I tell you - - it is also because of the snake .
(x3 / tell-01
	:ARG0 (x2 / i)
	:ARG2 (x4 / you)
	:ARG1-of (x10 / cause-01
		:mod (x9 / also)
		:ARG0 (x13 / snake)))

# ::id 1188
# ::snt He must not bite you .
(x4 / bite-01
	:ARG0 (x1 / he)
	:ARG1 (x5 / you))

# ::id 1189
# ::snt Snakes - - they are malicious creatures .
(x7 / creature
	:domain (x1 / snake)
	:domain (x4 / they)
	:mod (x6 / malice))

# ::id 1190
# ::snt This one might bite you just for fun ... "
(x4 / bite-01
	:ARG0 (x2 / one
		:mod (x1 / this))
	:ARG1 (x5 / you)
	:ARG2 (x8 / fun
		:mod (x6 / just)))

# ::id 1191
# ::snt " I shall not leave you . "
(x5 / leave-11
	:ARG0 (x2 / i)
	:ARG1 (x6 / you))

# ::id 1192
# ::snt But a thought came to reassure him : " It is true that they have no more poison for a second bite . "
(x / xconcept
	:x (x1 / contrast-01)
	:x (x12 / true
		:domain (x4 / come-03
			:purpose (x6 / reassure-01))
		:domain (x10 / it)
		:ARG1 (x22 / bite
			:polarity -
			:mod (x18 / poison-02
				:quant (x17 / more)))))

# ::id 1193
# ::snt That night I did not see him set out on his way .
(x6 / see-01
	:time (x2 / night
		:mod (x1 / that))
	:ARG0 (x3 / i)
	:ARG1 (x8 / set-02
		:ARG2 (x12 / way)))

# ::id 1194
# ::snt He got away from me without making a sound .
(x2 / get-01
	:ARG0 (x1 / he)
	:direction (x3 / away)
	:manner (x7 / make-01
		:ARG1 (x9 / thing
			:ARG2-of (s / sound-01))))

# ::id 1195
# ::snt When I succeeded in catching up with him he was walking along with a quick and resolute step .
(x11 / walk-01
	:condition (x3 / succeed-01
		:ARG0 (x2 / i)
		:ARG1 (x5 / catch-01
			:ARG0 x2))
	:ARG0 (x9 / he)
	:manner (x12 / along)
	:manner (x18 / step
		:ARG1 (x16 / and
			:op1 (x15 / quick-02)
			:op2 (x17 / resolute))))

# ::id 1196
# ::snt He said to me merely : " Ah !
(x2 / say-01
	:ARG0 (x1 / he)
	:mod (x5 / mere)
	:mod (x8 / Ah))

# ::id 1197
# ::snt You are there ... "
(x1 / you
	:location (x3 / there))

# ::id 1198
# ::snt And he took me by the hand .
(x1 / and
	:op2 (x3 / take-01
		:ARG0 (x2 / he)))

# ::id 1199
# ::snt But he was still worrying .
(x1 / contrast-01
	:ARG2 (x5 / worry-02
		:ARG0 (x2 / he)
		:mod (x4 / still)))

# ::id 1200
# ::snt " It was wrong of you to come .
(x4 / wrong-02
	:ARG1 (x2 / it
		:ARG1-of (x5 / include-91
			:ARG2 (x6 / you)))
	:ARG1 (x8 / come-01
		:ARG1 x5))

# ::id 1201
# ::snt You will suffer .
(x3 / suffer-01
	:ARG0 (x1 / you))

# ::id 1202
# ::snt I shall look as if I were dead ; and that will not be true ... "
(x / xconcept
	:x (x9 / and
		:op3 (x8 / die-01
			:op (d / dead)
			:ARG1 (x6 / i))
		:op1 (x10 / and
			:op1 (x3 / look-01
				:ARG0 (x1 / i)))
		:op3 (x15 / true)))

# ::id 1203
# ::snt I said nothing .
(x2 / say-01
	:ARG0 (x1 / i)
	:ARG1 (x3 / nothing))

# ::id 1204
# ::snt " You understand ... it is too far .
(x3 / understand-01
	:ARG0 (x2 / you)
	:mod (x8 / far
		:degree (x7 / too)))

# ::id 1205
# ::snt I can not carry this body with me .
(x2 / possible-01
	:ARG1 (x4 / carry-out-03
		:ARG0 (x1 / i)
		:ARG1 (x6 / body
			:mod (x5 / this))))

# ::id 1206
# ::snt It is too heavy . "
(x4 / heavy
	:domain (x1 / it)
	:degree (x3 / too))

# ::id 1207
# ::snt I said nothing .
(x2 / say-01
	:ARG0 (x1 / i)
	:ARG1 (x3 / nothing))

# ::id 1208
# ::snt " But it will be like an old abandoned shell .
(x2 / contrast-01
	:ARG2 (x10 / shell
		:mod (x8 / old)
		:ARG1-of (x9 / abandon-01)))

# ::id 1209
# ::snt There is nothing sad about old shells ... "
(x4 / sad-02
	:null_edge (x7 / shell
		:mod (x6 / old)))

# ::id 1210
# ::snt I said nothing .
(x2 / say-01
	:ARG0 (x1 / i)
	:ARG1 (x3 / nothing))

# ::id 1211
# ::snt He was a little discouraged .
(x5 / discourage-01
	:ARG0 (x1 / he)
	:mod (x4 / little))

# ::id 1212
# ::snt But he made one more effort : " You know , it will be very nice .
(x1 / contrast-01
	:ARG2 (x3 / make-02
		:ARG0 (x2 / he)
		:ARG1 (x6 / effort
			:quant 1
			:mod (x5 / more))
		:ARG1 (x16 / nice-01
			:null_edge (x10 / know-01
				:ARG0 (x9 / you))
			:degree (x15 / very))))

# ::id 1213
# ::snt I , too , shall look at the stars .
(x6 / look-01
	:ARG0 (x1 / i)
	:mod (x3 / too)
	:ARG1 (x9 / star))

# ::id 1214
# ::snt All the stars will be wells with a rusty pulley .
(x6 / well
	:ARG0 (x3 / star
		:quant (x1 / all))
	:topic-of (x10 / pulley
		:mod (x9 / rust-01)))

# ::id 1215
# ::snt All the stars will pour out fresh water for me to drink ... "
(x5 / pour-01
	:ARG0 (x3 / star
		:quant (x1 / all))
	:ARG1 (x8 / water
		:ARG1-of (x7 / fresh-04)
		:ARG1-of (x12 / drink-01)))

# ::id 1216
# ::snt I said nothing .
(x2 / say-01
	:ARG0 (x1 / i)
	:ARG1 (x3 / nothing))

# ::id 1217
# ::snt " That will be so amusing !
(x6 / amuse-01
	:ARG0 (x2 / that)
	:degree (x5 / so))

# ::id 1218
# ::snt You will have five hundred million little bells , and I shall have five hundred million springs of fresh water ... "
(x10 / and
	:op1 (x3 / have-03
		:ARG0 (x1 / you)
		:ARG1 (x8 / bell
			:mod (x7 / little))
		:ARG1 (x20 / water
			:ARG1-of (x19 / fresh-04)))
	:op2 (x13 / have-03
		:ARG0 (x11 / i)
		:ARG1 (x17 / spring)))

# ::id 1219
# ::snt And he too said nothing more , because he was crying ...
(x1 / and
	:op2 (x4 / say-01
		:ARG0 (x2 / he)
		:mod (x3 / too)
		:ARG1 (x5 / nothing)
		:ARG1 (x6 / more)
		:ARG1 (x8 / cause-01
			:ARG0 (x11 / cry-02))))

# ::id 1220
# ::snt " Here it is .
(x2 / here)

# ::id 1221
# ::snt Let me go on by myself . "
(x3 / go-02)

# ::id 1222
# ::snt And he sat down , because he was afraid .
(x1 / and
	:op2 (x3 / sit-01
		:ARG1 (x2 / he)
		:direction (x4 / down)
		:ARG1-of (x6 / cause-01)))

# ::id 1223
# ::snt Then he said , again : " You know - - my flower ...
(x3 / say-01
	:time (x1 / then)
	:ARG0 (x2 / he)
	:mod (x5 / again)
	:ARG1 (x9 / know-01
		:ARG0 (x8 / you)
		:ARG1 (x13 / flower)))

# ::id 1224
# ::snt I am responsible for her .
(x3 / responsible-03
	:ARG0 (x1 / i))

# ::id 1225
# ::snt And she is so weak !
(x / xconcept
	:x (x1 / and)
	:x (x2 / she
		:mod (x5 / weak
			:degree (x4 / so))))

# ::id 1226
# ::snt She is so naïve !
(x4 / naïve
	:ARG0 (x1 / she)
	:degree (x3 / so))

# ::id 1227
# ::snt She has four thorns , of no use at all , to protect herself against all the world ... "
(x2 / have-03
	:ARG0 (x1 / she)
	:ARG1 (x4 / thorn
		:quant 4
		:ARG1 (x8 / use-01
			:polarity -)
		:ARG0-of (x13 / protect-01
			:ARG2 (x18 / world
				:mod (x16 / all)))))

# ::id 1228
# ::snt I too sat down , because I was not able to stand up any longer .
(x6 / cause-01
	:ARG1 (x3 / sit-01
		:ARG1 (x1 / i)
		:mod (x2 / too))
	:ARG1 (x10 / possible-01
		:null_edge (x7 / i)
		:ARG1 (x12 / stand-08
			:ARG1-of (x15 / long-03))))

# ::id 1229
# ::snt " There now - - that is all ... "
(x8 / all
	:time (x3 / now))

# ::id 1230
# ::snt He still hesitated a little ; then he got up .
(xap0 / cause-01
	:ARG1 (x3 / hesitate-01
		:ARG0 (x1 / he)
		:mod (x2 / still)
		:ARG1 (x5 / little)))

# ::id 1231
# ::snt He took one step .
(x2 / take-01
	:ARG0 (x1 / he)
	:ARG1 (x4 / step
		:quant 1))

# ::id 1232
# ::snt I could not move .
(x2 / possible-01
	:ARG1 (x4 / move-01
		:ARG1 (x1 / i)))

# ::id 1233
# ::snt There was nothing but a flash of yellow close to his ankle .
(x3 / nothing
	:mod (x9 / close-13
		:ARG1 (x6 / flash
			:null_edge (x8 / yellow))
		:ARG2 (x12 / ankle)))

# ::id 1234
# ::snt He remained motionless for an instant .
(x2 / remain-01
	:ARG1 (x1 / he)
	:ARG3 (x3 / motionless
		:ARG0 x1)
	:ARG3 (x6 / instant))

# ::id 1235
# ::snt He did not cry out .
(x4 / cry-02
	:ARG0 (x1 / he))

# ::id 1236
# ::snt He fell as gently as a tree falls .
(x2 / fall-01
	:ARG1 (x1 / he)
	:ARG2 (x4 / gently)
	:time (x8 / fall-05
		:ARG1 (x7 / tree)))

# ::id 1237
# ::snt There was not even any sound , because of the sand .
(x6 / thing
	:ARG2-of (s / sound-01)
	:mod (x4 / even)
	:mod (x5 / any)
	:ARG1-of (x8 / cause-01
		:ARG0 (x11 / sand-01)))

# ::id 1238
# ::snt Chapter 27 .
(x / xconcept)

# ::id 1239
# ::snt And now six years have already gone by ...
(x7 / go-02
	:null_edge (x1 / and)
	:time (x2 / now)
	:duration (x4 / temporal-quantity
		:unit (y / year)
		:quant 6)
	:time (x6 / already))

# ::id 1240
# ::snt I have never yet told this story .
(x5 / tell-01
	:ARG0 (x1 / i)
	:time (x4 / yet)
	:ARG1 (x7 / story
		:mod (x6 / this)))

# ::id 1241
# ::snt The companions who met me on my return were well content to see me alive .
(x11 / content-01
	:ARG2 (x2 / companion
		:ARG1-of (x4 / meet-03
			:ARG1 (x8 / return-05)))
	:mod (x10 / well)
	:ARG2 (x13 / see-01
		:ARG0 x2
		:ARG1 (x15 / live-01
			:op (a / alive))))

# ::id 1242
# ::snt I was sad , but I told them : " I am tired . "
(x5 / contrast-01
	:ARG1 (x3 / sad-02
		:ARG1 (x1 / i))
	:ARG2 (x7 / tell-01
		:ARG0 (x6 / i))
	:ARG2 (x13 / tire-01
		:ARG1 (x11 / i)))

# ::id 1243
# ::snt Now my sorrow is comforted a little .
(x5 / comfort-01
	:time (x1 / now)
	:ARG1 (x3 / thing
		:ARG1-of (s / sorrow-01))
	:ARG1 (x7 / little))

# ::id 1244
# ::snt That is to say - - not entirely .
(x4 / say-01
	:ARG1 (x1 / that)
	:manner (x8 / entire))

# ::id 1245
# ::snt But I know that he did go back to his planet , because I did not find his body at daybreak .
(x1 / contrast-01
	:ARG2 (x3 / know-01
		:ARG0 (x2 / i)
		:ARG1 (x7 / go-02
			:ARG0 (x5 / he)
			:direction (x8 / back)
			:ARG4 (x11 / planet)
			:ARG1-of (x13 / cause-01
				:ARG0 (x17 / find-01
					:ARG0 (x14 / i)
					:ARG1 (x19 / body)
					:location (x21 / daybreak))))))

# ::id 1246
# ::snt It was not such a heavy body ... and at night I love to listen to the stars .
(x9 / and
	:op1 (x7 / body
		:domain (x1 / it)
		:mod (x4 / such)
		:mod (x6 / heavy))
	:op2 (x13 / love-01
		:time (x11 / night)
		:ARG0 (x12 / i)
		:ARG1 (x15 / listen-01
			:ARG0 x12
			:ARG1 (x18 / star))))

# ::id 1247
# ::snt It is like five hundred million little bells ...
(xap0 / resemble-01
	:ARG2 (x8 / bell
		:mod (x7 / little)))

# ::id 1248
# ::snt But there is one extraordinary thing ... when I drew the muzzle for the little prince , I forgot to add the leather strap to it .
(x1 / contrast-01
	:ARG2 (x6 / thing
		:quant 1
		:mod (x5 / extraordinary))
	:ARG2 (x19 / forget-01
		:time (x10 / draw-02
			:ARG0 (x9 / i)
			:ARG1 (x12 / muzzle)
			:ARG2 (x16 / prince
				:mod (x15 / little))
			:ARG1 (x18 / i))
		:ARG0 x18
		:ARG1 (x21 / add-02
			:ARG1 (x24 / strap
				:mod (x23 / leather)))))

# ::id 1249
# ::snt He will never have been able to fasten it on his sheep .
(x6 / possible-01
	:ARG1 (x8 / fasten
		:ARG0 (x1 / he)
		:ARG2 (x12 / sheep)))

# ::id 1250
# ::snt So now I keep wondering : what is happening on his planet ?
(x4 / keep-02
	:time (x2 / now)
	:ARG0 (x3 / i)
	:ARG1 (x5 / wonder-01
		:ARG0 (x12 / planet)))

# ::id 1251
# ::snt Perhaps the sheep has eaten the flower ...
(x5 / eat-01
	:ARG0 (x3 / sheep)
	:ARG1 (x7 / flower))

# ::id 1252
# ::snt At one time I say to myself : " Surely not !
(x5 / say-01
	:ARG0 (x4 / i)
	:null_edge (x10 / sure-02))

# ::id 1253
# ::snt The little prince shuts his flower under her glass globe every night , and he watches over his sheep very carefully ... "
(x14 / and
	:op1 (x4 / shut-down-05
		:ARG0 (x3 / prince
			:mod (x2 / little))
		:ARG1 (x6 / flower)
		:ARG2 (x10 / globe
			:consist-of (x9 / glass)
			:frequency (xap0 / rate-entity-91
				:ARG4 (x12 / night))))
	:op2 (x16 / watch-01
		:ARG0 x3
		:ARG1 (x19 / sheep)
		:manner (x21 / careful
			:degree (x20 / very))))

# ::id 1254
# ::snt Then I am happy .
(x4 / happy
	:time (x1 / then)
	:null_edge (x2 / i))

# ::id 1255
# ::snt And there is sweetness in the laughter of all the stars .
(x1 / and
	:op2 (x4 / sweetness
		:prep-in (x7 / laughter
			:poss (x11 / star
				:mod (x9 / all)))))

# ::id 1256
# ::snt But at another time I say to myself : " At some moment or other one is absent - minded , and that is enough !
(x1 / contrast-01
	:ARG2 (x6 / say-01
		:time (x4 / time
			:mod (x3 / another))
		:ARG0 (x5 / i)
		:time (x13 / moment
			:mod (x12 / some))
		:ARG1 (x14 / or
			:op2 (x22 / and
				:op2 (x18 / person
					:ARG1-of (a / absent-01)
					:mod (x15 / other))
				:op2 (x25 / enough
					:domain (x23 / that))))))

# ::id 1257
# ::snt On some one evening he forgot the glass globe , or the sheep got out , without making any noise , in the night ... "
(x11 / or
	:op2 (x6 / forget-01
		:time (x4 / evening
			:null_edge (x2 / some)
			:quant 1)
		:ARG0 (x5 / he)
		:ARG1 (x9 / globe
			:consist-of (x8 / glass))
		:ARG1 (x13 / sheep
			:ARG1 (x20 / noise
				:mod (x19 / any))
			:time (x24 / night))))

# ::id 1258
# ::snt And then the little bells are changed to tears ...
(x1 / and
	:op2 (x7 / change-01
		:time (x2 / then)
		:ARG1 (x5 / bell
			:mod (x4 / little))
		:ARG2 (x9 / tear-03)))

# ::id 1259
# ::snt Here , then , is a great mystery .
(x8 / mystery
	:location (x1 / here)
	:time (x3 / then)
	:mod (x7 / great))

# ::id 1260
# ::snt For you who also love the little prince , and for me , nothing in the universe can be the same if somewhere , we do not know where , a sheep that we never saw has - - yes or no ? -- eaten a rose ...
(x18 / possible-01
	:ARG1 (x21 / same-01
		:null_edge (x2 / you)
		:concession (x5 / love-01
			:mod (x4 / also)
			:ARG1 (x8 / prince
				:mod (x7 / little)))
		:ARG2 (x14 / nothing
			:location (x17 / universe))
		:location (x23 / somewhere)
		:null_edge (x28 / know-01
			:ARG0 (x25 / we)
			:ARG0 (x32 / sheep
				:ARG1-of (x36 / see-01
					:ARG0 (x34 / we))
				:mod (x41 / or
					:op1 (x40 / yes
						:polarity -))))
		:prep-without (x47 / rose)))

# ::id 1261
# ::snt Look up at the sky .
(x1 / look-01
	:ARG1 (x5 / sky))

# ::id 1262
# ::snt Ask yourselves : is it yes or no ?
(x1 / ask-01
	:ARG1 (x7 / or
		:op1 (x6 / yes)
		:polarity -))

# ::id 1263
# ::snt Has the sheep eaten the flower ?
(x4 / eat-01
	:ARG0 (x3 / sheep)
	:ARG1 (x6 / flower))

# ::id 1264
# ::snt And you will see how everything changes ...
(x1 / and
	:op2 (x4 / see-01
		:ARG0 (x2 / you)
		:ARG1 (x7 / change-01
			:ARG1 (x6 / everything))))

# ::id 1265
# ::snt And no grown - up will ever understand that this is a matter of so much importance !
(x1 / and
	:op2 (x8 / understand-01
		:ARG1 (x3 / grow-up-04
			:polarity -
			:direction (x5 / up))
		:time (x7 / ever)
		:ARG1 (x13 / matter-01
			:domain (x10 / this)
			:ARG2 (x17 / important
				:quant (x16 / much
					:degree (x15 / so))))))

# ::id 1266
# ::snt This is , to me , the loveliest and saddest landscape in the world .
(x11 / landscape
	:domain (x1 / this)
	:ARG1 (x9 / and
		:op1 (x8 / loveliest)
		:op2 (x10 / saddest))
	:location (x14 / world))

# ::id 1267
# ::snt It is the same as that on the preceding page , but I have drawn it again to impress it on your memory .
(x12 / contrast-01
	:ARG1 (x4 / same-01
		:ARG1 (x1 / it)
		:ARG2 (x10 / page
			:ARG1-of (x9 / precede-01)))
	:ARG2 (x15 / draw-02
		:mod (x17 / again)
		:purpose (x19 / impress-01
			:ARG1 (x23 / memory))))

# ::id 1268
# ::snt It is here that the little prince appeared on Earth , and disappeared .
(x12 / and
	:op1 (x8 / appear-02
		:ARG1 (x7 / prince
			:location (x3 / here)
			:mod (x6 / little))
		:ARG1 (x10 / planet
			:name (n / name
				:op1 "Earth")))
	:op2 (x13 / disappear-01))

# ::id 1269
# ::snt Look at it carefully so that you will be sure to recognise it in case you travel some day to the African desert .
(x1 / look-01
	:manner (x4 / careful)
	:null_edge (x10 / sure-02
		:ARG0 (x7 / you)
		:ARG1 (x12 / recognise
			:ARG0 x7)
		:condition (x17 / travel-01
			:ARG0 x7
			:ARG1 (x15 / case-03)
			:ARG0 (x16 / you)
			:time (x19 / day
				:mod (x18 / some))
			:ARG4 (x23 / desert
				:null_edge (x22 / null_tag)))))

# ::id 1270
# ::snt And , if you should come upon this spot , please do not hurry on .
(x1 / and
	:op2 (x14 / hurry-01
		:ARG1 (x5 / recommend-01
			:ARG1 (x6 / come-01
				:ARG1 (x4 / you)
				:ARG1 (x9 / spot
					:mod (x8 / this))))))

# ::id 1271
# ::snt Wait for a time , exactly under the star .
(x1 / wait-01
	:time (x4 / time
		:mod (x6 / exact)))

# ::id 1272
# ::snt Then , if a little man appears who laughs , who has golden hair and who refuses to answer questions , you will know who he is .
(x24 / know-01
	:null_edge (x7 / appear-02
		:time (x1 / then)
		:ARG1 (x6 / man
			:mod (x5 / little))
		:ARG1 (x15 / and
			:op1 (x9 / laugh-01)
			:op2 (x12 / have-03
				:ARG1 (x14 / hair
					:ARG1-of (x13 / gold)))
			:op2 (x17 / refuse-01
				:ARG1 (x19 / answer-01
					:ARG1 (x20 / question-01)))))
	:ARG0 (x22 / you))

# ::id 1273
# ::snt If this should happen , please comfort me .
(x7 / comfort
	:ARG1 (x3 / recommend-01
		:ARG1 (x2 / this)))

# ::id 1274
# ::snt Send me word that he has come back .
(x1 / send-01
	:ARG1 (x3 / word
		:ARG1-of (x7 / come-01
			:ARG1 (x5 / he)
			:direction (x8 / back))))

